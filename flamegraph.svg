<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1286" onload="init(evt)" viewBox="0 0 1200 1286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1286" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1269.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1269.00"> </text><svg id="frames" x="10" width="1180"><g><title>0x7fde74ec9100 (1 samples, 0.02%)</title><rect x="0.0000%" y="1221" width="0.0157%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1231.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (1 samples, 0.02%)</title><rect x="0.0000%" y="1205" width="0.0157%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1 samples, 0.02%)</title><rect x="0.0000%" y="1189" width="0.0157%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="1199.50"></text></g><g><title>0x7fde79bc3690 (1 samples, 0.02%)</title><rect x="0.0157%" y="1221" width="0.0157%" height="15" fill="rgb(248,212,6)"/><text x="0.2657%" y="1231.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (1 samples, 0.02%)</title><rect x="0.0157%" y="1205" width="0.0157%" height="15" fill="rgb(208,68,35)"/><text x="0.2657%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1 samples, 0.02%)</title><rect x="0.0157%" y="1189" width="0.0157%" height="15" fill="rgb(232,128,0)"/><text x="0.2657%" y="1199.50"></text></g><g><title>0x7fde79c7c720 (2 samples, 0.03%)</title><rect x="0.0314%" y="1221" width="0.0314%" height="15" fill="rgb(207,160,47)"/><text x="0.2814%" y="1231.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (2 samples, 0.03%)</title><rect x="0.0314%" y="1205" width="0.0314%" height="15" fill="rgb(228,23,34)"/><text x="0.2814%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (2 samples, 0.03%)</title><rect x="0.0314%" y="1189" width="0.0314%" height="15" fill="rgb(218,30,26)"/><text x="0.2814%" y="1199.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (2 samples, 0.03%)</title><rect x="0.0628%" y="1221" width="0.0314%" height="15" fill="rgb(220,122,19)"/><text x="0.3128%" y="1231.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (2 samples, 0.03%)</title><rect x="0.0942%" y="1221" width="0.0314%" height="15" fill="rgb(250,228,42)"/><text x="0.3442%" y="1231.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1 samples, 0.02%)</title><rect x="0.3297%" y="1205" width="0.0157%" height="15" fill="rgb(240,193,28)"/><text x="0.5797%" y="1215.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (218 samples, 3.42%)</title><rect x="0.3454%" y="1205" width="3.4228%" height="15" fill="rgb(216,20,37)"/><text x="0.5954%" y="1215.50">lib..</text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__workq_kernreturn (2 samples, 0.03%)</title><rect x="3.7683%" y="1205" width="0.0314%" height="15" fill="rgb(206,188,39)"/><text x="4.0183%" y="1215.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (1 samples, 0.02%)</title><rect x="3.8311%" y="1189" width="0.0157%" height="15" fill="rgb(217,207,13)"/><text x="4.0811%" y="1199.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (15 samples, 0.24%)</title><rect x="3.9253%" y="1157" width="0.2355%" height="15" fill="rgb(231,73,38)"/><text x="4.1753%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (15 samples, 0.24%)</title><rect x="3.9253%" y="1141" width="0.2355%" height="15" fill="rgb(225,20,46)"/><text x="4.1753%" y="1151.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_drain_timers (17 samples, 0.27%)</title><rect x="3.9096%" y="1173" width="0.2669%" height="15" fill="rgb(210,31,41)"/><text x="4.1596%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_timer_arm (1 samples, 0.02%)</title><rect x="4.1608%" y="1157" width="0.0157%" height="15" fill="rgb(221,200,47)"/><text x="4.4108%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_timer_arm (1 samples, 0.02%)</title><rect x="4.1765%" y="1173" width="0.0157%" height="15" fill="rgb(226,26,5)"/><text x="4.4265%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (23 samples, 0.36%)</title><rect x="3.8468%" y="1189" width="0.3611%" height="15" fill="rgb(249,33,26)"/><text x="4.0968%" y="1199.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_merge_evt (1 samples, 0.02%)</title><rect x="4.1922%" y="1173" width="0.0157%" height="15" fill="rgb(235,183,28)"/><text x="4.4422%" y="1183.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (2 samples, 0.03%)</title><rect x="4.2079%" y="1109" width="0.0314%" height="15" fill="rgb(221,5,38)"/><text x="4.4579%" y="1119.50"></text></g><g><title>CoreUI`BOMFileRead (2 samples, 0.03%)</title><rect x="4.2079%" y="1093" width="0.0314%" height="15" fill="rgb(247,18,42)"/><text x="4.4579%" y="1103.50"></text></g><g><title>libcompression.dylib`compression_stream_process (1 samples, 0.02%)</title><rect x="4.2236%" y="1077" width="0.0157%" height="15" fill="rgb(241,131,45)"/><text x="4.4736%" y="1087.50"></text></g><g><title>libcompression.dylib`lzfseStreamDecode (1 samples, 0.02%)</title><rect x="4.2236%" y="1061" width="0.0157%" height="15" fill="rgb(249,31,29)"/><text x="4.4736%" y="1071.50"></text></g><g><title>libcompression.dylib`lzfseDecode (1 samples, 0.02%)</title><rect x="4.2236%" y="1045" width="0.0157%" height="15" fill="rgb(225,111,53)"/><text x="4.4736%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (9 samples, 0.14%)</title><rect x="4.2079%" y="1157" width="0.1413%" height="15" fill="rgb(238,160,17)"/><text x="4.4579%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke (9 samples, 0.14%)</title><rect x="4.2079%" y="1141" width="0.1413%" height="15" fill="rgb(214,148,48)"/><text x="4.4579%" y="1151.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (9 samples, 0.14%)</title><rect x="4.2079%" y="1125" width="0.1413%" height="15" fill="rgb(232,36,49)"/><text x="4.4579%" y="1135.50"></text></g><g><title>vImage`Do_PermuteChannels (7 samples, 0.11%)</title><rect x="4.2393%" y="1109" width="0.1099%" height="15" fill="rgb(209,103,24)"/><text x="4.4893%" y="1119.50"></text></g><g><title>vImage`vConvert_PermuteChannels_ARGB8888_CV_avx2 (7 samples, 0.11%)</title><rect x="4.2393%" y="1093" width="0.1099%" height="15" fill="rgb(229,88,8)"/><text x="4.4893%" y="1103.50"></text></g><g><title>libxpc.dylib`_xpc_connection_bootstrap_look_up_slow (1 samples, 0.02%)</title><rect x="4.3492%" y="1029" width="0.0157%" height="15" fill="rgb(213,181,19)"/><text x="4.5992%" y="1039.50"></text></g><g><title>libxpc.dylib`_xpc_look_up_endpoint (1 samples, 0.02%)</title><rect x="4.3492%" y="1013" width="0.0157%" height="15" fill="rgb(254,191,54)"/><text x="4.5992%" y="1023.50"></text></g><g><title>libxpc.dylib`_xpc_interface_routine (1 samples, 0.02%)</title><rect x="4.3492%" y="997" width="0.0157%" height="15" fill="rgb(241,83,37)"/><text x="4.5992%" y="1007.50"></text></g><g><title>libxpc.dylib`xpc_pipe_routine_with_flags (1 samples, 0.02%)</title><rect x="4.3492%" y="981" width="0.0157%" height="15" fill="rgb(233,36,39)"/><text x="4.5992%" y="991.50"></text></g><g><title>libxpc.dylib`_xpc_pipe_routine (1 samples, 0.02%)</title><rect x="4.3492%" y="965" width="0.0157%" height="15" fill="rgb(226,3,54)"/><text x="4.5992%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="4.3492%" y="949" width="0.0157%" height="15" fill="rgb(245,192,40)"/><text x="4.5992%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (11 samples, 0.17%)</title><rect x="4.2079%" y="1189" width="0.1727%" height="15" fill="rgb(238,167,29)"/><text x="4.4579%" y="1199.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (11 samples, 0.17%)</title><rect x="4.2079%" y="1173" width="0.1727%" height="15" fill="rgb(232,182,51)"/><text x="4.4579%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_override_invoke (2 samples, 0.03%)</title><rect x="4.3492%" y="1157" width="0.0314%" height="15" fill="rgb(231,60,39)"/><text x="4.5992%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.03%)</title><rect x="4.3492%" y="1141" width="0.0314%" height="15" fill="rgb(208,69,12)"/><text x="4.5992%" y="1151.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (2 samples, 0.03%)</title><rect x="4.3492%" y="1125" width="0.0314%" height="15" fill="rgb(235,93,37)"/><text x="4.5992%" y="1135.50"></text></g><g><title>ViewBridge`__95+[NSXPCSharedListener listenerEndpointForService:instanceIdentifier:listener:queue:completion:]_block_invoke (2 samples, 0.03%)</title><rect x="4.3492%" y="1109" width="0.0314%" height="15" fill="rgb(213,116,39)"/><text x="4.5992%" y="1119.50"></text></g><g><title>ViewBridge`+[NSXPCSharedListener endpointForListenerNamed:fromServiceNamed:instanceIdentifier:queue:completion:] (2 samples, 0.03%)</title><rect x="4.3492%" y="1093" width="0.0314%" height="15" fill="rgb(222,207,29)"/><text x="4.5992%" y="1103.50"></text></g><g><title>libxpc.dylib`xpc_connection_resume (2 samples, 0.03%)</title><rect x="4.3492%" y="1077" width="0.0314%" height="15" fill="rgb(206,96,30)"/><text x="4.5992%" y="1087.50"></text></g><g><title>libxpc.dylib`_xpc_connection_activate_if_needed (2 samples, 0.03%)</title><rect x="4.3492%" y="1061" width="0.0314%" height="15" fill="rgb(218,138,4)"/><text x="4.5992%" y="1071.50"></text></g><g><title>libxpc.dylib`_xpc_connection_init (2 samples, 0.03%)</title><rect x="4.3492%" y="1045" width="0.0314%" height="15" fill="rgb(250,191,14)"/><text x="4.5992%" y="1055.50"></text></g><g><title>libxpc.dylib`_xpc_uncork_domain (1 samples, 0.02%)</title><rect x="4.3649%" y="1029" width="0.0157%" height="15" fill="rgb(239,60,40)"/><text x="4.6149%" y="1039.50"></text></g><g><title>libxpc.dylib`xpc_bundle_get_property (1 samples, 0.02%)</title><rect x="4.3649%" y="1013" width="0.0157%" height="15" fill="rgb(206,27,48)"/><text x="4.6149%" y="1023.50"></text></g><g><title>libxpc.dylib`_xpc_bundle_resolve (1 samples, 0.02%)</title><rect x="4.3649%" y="997" width="0.0157%" height="15" fill="rgb(225,35,8)"/><text x="4.6149%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="4.3649%" y="981" width="0.0157%" height="15" fill="rgb(250,213,24)"/><text x="4.6149%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="4.3649%" y="965" width="0.0157%" height="15" fill="rgb(247,123,22)"/><text x="4.6149%" y="975.50"></text></g><g><title>libxpc.dylib`___xpc_bundle_resolve_block_invoke (1 samples, 0.02%)</title><rect x="4.3649%" y="949" width="0.0157%" height="15" fill="rgb(231,138,38)"/><text x="4.6149%" y="959.50"></text></g><g><title>libxpc.dylib`_xpc_bundle_resolve_impl (1 samples, 0.02%)</title><rect x="4.3649%" y="933" width="0.0157%" height="15" fill="rgb(231,145,46)"/><text x="4.6149%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`access (1 samples, 0.02%)</title><rect x="4.3649%" y="917" width="0.0157%" height="15" fill="rgb(251,118,11)"/><text x="4.6149%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (2 samples, 0.03%)</title><rect x="4.7888%" y="1173" width="0.0314%" height="15" fill="rgb(217,147,25)"/><text x="5.0388%" y="1183.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (1 samples, 0.02%)</title><rect x="4.8045%" y="1157" width="0.0157%" height="15" fill="rgb(247,81,37)"/><text x="5.0545%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_drain (1 samples, 0.02%)</title><rect x="4.8202%" y="1173" width="0.0157%" height="15" fill="rgb(209,12,38)"/><text x="5.0702%" y="1183.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$objc_release (1 samples, 0.02%)</title><rect x="5.0557%" y="1125" width="0.0157%" height="15" fill="rgb(227,1,9)"/><text x="5.3057%" y="1135.50"></text></g><g><title>Metal`__36-[MTLIOAccelDevice kickCleanupQueue]_block_invoke (1 samples, 0.02%)</title><rect x="5.0714%" y="1125" width="0.0157%" height="15" fill="rgb(248,47,43)"/><text x="5.3214%" y="1135.50"></text></g><g><title>Metal`__destroy_helper_block_e8_32o (1 samples, 0.02%)</title><rect x="5.0871%" y="1125" width="0.0157%" height="15" fill="rgb(221,10,30)"/><text x="5.3371%" y="1135.50"></text></g><g><title>libdyld.dylib`dlopen (1 samples, 0.02%)</title><rect x="5.1028%" y="997" width="0.0157%" height="15" fill="rgb(210,229,1)"/><text x="5.3528%" y="1007.50"></text></g><g><title>dyld`dlopen_internal (1 samples, 0.02%)</title><rect x="5.1028%" y="981" width="0.0157%" height="15" fill="rgb(222,148,37)"/><text x="5.3528%" y="991.50"></text></g><g><title>dyld`dyld::link (1 samples, 0.02%)</title><rect x="5.1028%" y="965" width="0.0157%" height="15" fill="rgb(234,67,33)"/><text x="5.3528%" y="975.50"></text></g><g><title>dyld`ImageLoader::link (1 samples, 0.02%)</title><rect x="5.1028%" y="949" width="0.0157%" height="15" fill="rgb(247,98,35)"/><text x="5.3528%" y="959.50"></text></g><g><title>dyld`dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*) (1 samples, 0.02%)</title><rect x="5.1028%" y="933" width="0.0157%" height="15" fill="rgb(247,138,52)"/><text x="5.3528%" y="943.50"></text></g><g><title>dyld`dyld::notifyMonitoringDyld (1 samples, 0.02%)</title><rect x="5.1028%" y="917" width="0.0157%" height="15" fill="rgb(213,79,30)"/><text x="5.3528%" y="927.50"></text></g><g><title>dyld`dyld::sendMessage (1 samples, 0.02%)</title><rect x="5.1028%" y="901" width="0.0157%" height="15" fill="rgb(246,177,23)"/><text x="5.3528%" y="911.50"></text></g><g><title>dyld`mach_msg_trap (1 samples, 0.02%)</title><rect x="5.1028%" y="885" width="0.0157%" height="15" fill="rgb(230,62,27)"/><text x="5.3528%" y="895.50"></text></g><g><title>AppKit`__35-[NSDockConnection startConnection]_block_invoke.41 (2 samples, 0.03%)</title><rect x="5.1028%" y="1109" width="0.0314%" height="15" fill="rgb(216,154,8)"/><text x="5.3528%" y="1119.50"></text></g><g><title>AppKit`-[NSDockConnection _makeConnectionIfNeededWithRetryInterval:onDemand:] (2 samples, 0.03%)</title><rect x="5.1028%" y="1093" width="0.0314%" height="15" fill="rgb(244,35,45)"/><text x="5.3528%" y="1103.50"></text></g><g><title>SkyLight`SLSessionCopyCurrentDictionary (2 samples, 0.03%)</title><rect x="5.1028%" y="1077" width="0.0314%" height="15" fill="rgb(251,115,12)"/><text x="5.3528%" y="1087.50"></text></g><g><title>SkyLight`SLSCopyCurrentSessionPropertiesInternalBridge (2 samples, 0.03%)</title><rect x="5.1028%" y="1061" width="0.0314%" height="15" fill="rgb(240,54,50)"/><text x="5.3528%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.03%)</title><rect x="5.1028%" y="1045" width="0.0314%" height="15" fill="rgb(233,84,52)"/><text x="5.3528%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.03%)</title><rect x="5.1028%" y="1029" width="0.0314%" height="15" fill="rgb(207,117,47)"/><text x="5.3528%" y="1039.50"></text></g><g><title>SkyLight`__loginframework_vtable_block_invoke (2 samples, 0.03%)</title><rect x="5.1028%" y="1013" width="0.0314%" height="15" fill="rgb(249,43,39)"/><text x="5.3528%" y="1023.50"></text></g><g><title>libdyld.dylib`dlsym (1 samples, 0.02%)</title><rect x="5.1185%" y="997" width="0.0157%" height="15" fill="rgb(209,38,44)"/><text x="5.3685%" y="1007.50"></text></g><g><title>dyld`dlsym_internal (1 samples, 0.02%)</title><rect x="5.1185%" y="981" width="0.0157%" height="15" fill="rgb(236,212,23)"/><text x="5.3685%" y="991.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInImageOrDependentImages (1 samples, 0.02%)</title><rect x="5.1185%" y="965" width="0.0157%" height="15" fill="rgb(242,79,21)"/><text x="5.3685%" y="975.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (1 samples, 0.02%)</title><rect x="5.1185%" y="949" width="0.0157%" height="15" fill="rgb(211,96,35)"/><text x="5.3685%" y="959.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (1 samples, 0.02%)</title><rect x="5.1185%" y="933" width="0.0157%" height="15" fill="rgb(253,215,40)"/><text x="5.3685%" y="943.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (1 samples, 0.02%)</title><rect x="5.1185%" y="917" width="0.0157%" height="15" fill="rgb(211,81,21)"/><text x="5.3685%" y="927.50"></text></g><g><title>dyld`ImageLoaderMachO::libPath (1 samples, 0.02%)</title><rect x="5.1185%" y="901" width="0.0157%" height="15" fill="rgb(208,190,38)"/><text x="5.3685%" y="911.50"></text></g><g><title>CoreImage`CI::MetalDAG::compile (1 samples, 0.02%)</title><rect x="5.1342%" y="1109" width="0.0157%" height="15" fill="rgb(235,213,38)"/><text x="5.3842%" y="1119.50"></text></g><g><title>CoreImage`CIMetalComputePipelineStateCreateFromDAG (1 samples, 0.02%)</title><rect x="5.1342%" y="1093" width="0.0157%" height="15" fill="rgb(237,122,38)"/><text x="5.3842%" y="1103.50"></text></g><g><title>CoreImage`CreateFunctionFromDAG (1 samples, 0.02%)</title><rect x="5.1342%" y="1077" width="0.0157%" height="15" fill="rgb(244,218,35)"/><text x="5.3842%" y="1087.50"></text></g><g><title>Metal`MTLLibraryBuilder::newLibraryWithCIFilters (1 samples, 0.02%)</title><rect x="5.1342%" y="1061" width="0.0157%" height="15" fill="rgb(240,68,47)"/><text x="5.3842%" y="1071.50"></text></g><g><title>Metal`MTLLibraryBuilder::newLibraryWithRequestData(void*, unsigned long, int, bool, void (id (1 samples, 0.02%)</title><rect x="5.1342%" y="1045" width="0.0157%" height="15" fill="rgb(210,16,53)"/><text x="5.3842%" y="1055.50"></text></g><g><title>Metal`getHash (1 samples, 0.02%)</title><rect x="5.1342%" y="1029" width="0.0157%" height="15" fill="rgb(235,124,12)"/><text x="5.3842%" y="1039.50"></text></g><g><title>libcommonCrypto.dylib`CC_SHA256_Update (1 samples, 0.02%)</title><rect x="5.1342%" y="1013" width="0.0157%" height="15" fill="rgb(224,169,11)"/><text x="5.3842%" y="1023.50"></text></g><g><title>libcommonCrypto.dylib`ccdigest_process (1 samples, 0.02%)</title><rect x="5.1342%" y="997" width="0.0157%" height="15" fill="rgb(250,166,2)"/><text x="5.3842%" y="1007.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA256_compress_AVX2 (1 samples, 0.02%)</title><rect x="5.1342%" y="981" width="0.0157%" height="15" fill="rgb(242,216,29)"/><text x="5.3842%" y="991.50"></text></g><g><title>IOKit`__chkstk_darwin (1 samples, 0.02%)</title><rect x="5.1499%" y="1061" width="0.0157%" height="15" fill="rgb(230,116,27)"/><text x="5.3999%" y="1071.50"></text></g><g><title>IOSurface`IOSurfaceClientBindAccel (106 samples, 1.66%)</title><rect x="5.1499%" y="1093" width="1.6643%" height="15" fill="rgb(228,99,48)"/><text x="5.3999%" y="1103.50"></text></g><g><title>IOKit`IOConnectCallMethod (106 samples, 1.66%)</title><rect x="5.1499%" y="1077" width="1.6643%" height="15" fill="rgb(253,11,6)"/><text x="5.3999%" y="1087.50"></text></g><g><title>IOKit`io_connect_method (105 samples, 1.65%)</title><rect x="5.1656%" y="1061" width="1.6486%" height="15" fill="rgb(247,143,39)"/><text x="5.4156%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (102 samples, 1.60%)</title><rect x="5.2127%" y="1045" width="1.6015%" height="15" fill="rgb(236,97,10)"/><text x="5.4627%" y="1055.50"></text></g><g><title>QuartzCore`__CAImageQueueInsertImageImpl_block_invoke (107 samples, 1.68%)</title><rect x="5.1499%" y="1109" width="1.6800%" height="15" fill="rgb(233,208,19)"/><text x="5.3999%" y="1119.50"></text></g><g><title>IOSurface`IOSurfaceGetID (1 samples, 0.02%)</title><rect x="6.8143%" y="1093" width="0.0157%" height="15" fill="rgb(216,164,2)"/><text x="7.0643%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (111 samples, 1.74%)</title><rect x="5.1028%" y="1125" width="1.7428%" height="15" fill="rgb(220,129,5)"/><text x="5.3528%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.02%)</title><rect x="6.8300%" y="1109" width="0.0157%" height="15" fill="rgb(242,17,10)"/><text x="7.0800%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (1 samples, 0.02%)</title><rect x="6.8300%" y="1093" width="0.0157%" height="15" fill="rgb(242,107,0)"/><text x="7.0800%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (1 samples, 0.02%)</title><rect x="6.8300%" y="1077" width="0.0157%" height="15" fill="rgb(251,28,31)"/><text x="7.0800%" y="1087.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.02%)</title><rect x="6.8457%" y="1125" width="0.0157%" height="15" fill="rgb(233,223,10)"/><text x="7.0957%" y="1135.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (1 samples, 0.02%)</title><rect x="6.8614%" y="1093" width="0.0157%" height="15" fill="rgb(215,21,27)"/><text x="7.1114%" y="1103.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (4 samples, 0.06%)</title><rect x="6.8614%" y="1125" width="0.0628%" height="15" fill="rgb(232,23,21)"/><text x="7.1114%" y="1135.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (4 samples, 0.06%)</title><rect x="6.8614%" y="1109" width="0.0628%" height="15" fill="rgb(244,5,23)"/><text x="7.1114%" y="1119.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (3 samples, 0.05%)</title><rect x="6.8771%" y="1093" width="0.0471%" height="15" fill="rgb(226,81,46)"/><text x="7.1271%" y="1103.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, unsigned long&gt; &gt;, DisguisedPtr&lt;objc_object&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, unsigned long&gt; &gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object&gt; &gt;(DisguisedPtr&lt;objc_object&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr (1 samples, 0.02%)</title><rect x="6.9085%" y="1077" width="0.0157%" height="15" fill="rgb(247,70,30)"/><text x="7.1585%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.05%)</title><rect x="6.9399%" y="1109" width="0.0471%" height="15" fill="rgb(212,68,19)"/><text x="7.1899%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.14%)</title><rect x="6.9242%" y="1125" width="0.1413%" height="15" fill="rgb(240,187,13)"/><text x="7.1742%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.08%)</title><rect x="6.9870%" y="1109" width="0.0785%" height="15" fill="rgb(223,113,26)"/><text x="7.2370%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.03%)</title><rect x="7.0341%" y="1093" width="0.0314%" height="15" fill="rgb(206,192,2)"/><text x="7.2841%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (130 samples, 2.04%)</title><rect x="5.0557%" y="1141" width="2.0411%" height="15" fill="rgb(241,108,4)"/><text x="5.3057%" y="1151.50">l..</text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.03%)</title><rect x="7.0655%" y="1125" width="0.0314%" height="15" fill="rgb(247,173,49)"/><text x="7.3155%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_free_to_heap (1 samples, 0.02%)</title><rect x="7.0969%" y="1141" width="0.0157%" height="15" fill="rgb(224,114,35)"/><text x="7.3469%" y="1151.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (1 samples, 0.02%)</title><rect x="7.1283%" y="1093" width="0.0157%" height="15" fill="rgb(245,159,27)"/><text x="7.3783%" y="1103.50"></text></g><g><title>libxpc.dylib`_xpc_connection_mach_event (1 samples, 0.02%)</title><rect x="7.1283%" y="1077" width="0.0157%" height="15" fill="rgb(245,172,44)"/><text x="7.3783%" y="1087.50"></text></g><g><title>libxpc.dylib`_xpc_connection_call_event_handler (1 samples, 0.02%)</title><rect x="7.1283%" y="1061" width="0.0157%" height="15" fill="rgb(236,23,11)"/><text x="7.3783%" y="1071.50"></text></g><g><title>LaunchServices`LSNotificationReceiver::receiveNotificationFromServer (1 samples, 0.02%)</title><rect x="7.1283%" y="1045" width="0.0157%" height="15" fill="rgb(205,117,38)"/><text x="7.3783%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_barrier_sync_f (1 samples, 0.02%)</title><rect x="7.1283%" y="1029" width="0.0157%" height="15" fill="rgb(237,72,25)"/><text x="7.3783%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (3 samples, 0.05%)</title><rect x="7.1126%" y="1141" width="0.0471%" height="15" fill="rgb(244,70,9)"/><text x="7.3626%" y="1151.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (3 samples, 0.05%)</title><rect x="7.1126%" y="1125" width="0.0471%" height="15" fill="rgb(217,125,39)"/><text x="7.3626%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (3 samples, 0.05%)</title><rect x="7.1126%" y="1109" width="0.0471%" height="15" fill="rgb(235,36,10)"/><text x="7.3626%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (1 samples, 0.02%)</title><rect x="7.1440%" y="1093" width="0.0157%" height="15" fill="rgb(251,123,47)"/><text x="7.3940%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="7.1440%" y="1077" width="0.0157%" height="15" fill="rgb(221,13,13)"/><text x="7.3940%" y="1087.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObjects:count:atIndex:] (2 samples, 0.03%)</title><rect x="7.2696%" y="1045" width="0.0314%" height="15" fill="rgb(238,131,9)"/><text x="7.5196%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_good_size (1 samples, 0.02%)</title><rect x="7.2853%" y="1029" width="0.0157%" height="15" fill="rgb(211,50,8)"/><text x="7.5353%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="7.3010%" y="1045" width="0.0157%" height="15" fill="rgb(245,182,24)"/><text x="7.5510%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="7.3010%" y="1029" width="0.0157%" height="15" fill="rgb(242,14,37)"/><text x="7.5510%" y="1039.50"></text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (4 samples, 0.06%)</title><rect x="7.2696%" y="1061" width="0.0628%" height="15" fill="rgb(246,228,12)"/><text x="7.5196%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc_good_size (1 samples, 0.02%)</title><rect x="7.3167%" y="1045" width="0.0157%" height="15" fill="rgb(213,55,15)"/><text x="7.5667%" y="1055.50"></text></g><g><title>CoreFoundation`_NSIsNSArray (1 samples, 0.02%)</title><rect x="7.3324%" y="1061" width="0.0157%" height="15" fill="rgb(209,9,3)"/><text x="7.5824%" y="1071.50"></text></g><g><title>libobjc.A.dylib`object_getMethodImplementation (1 samples, 0.02%)</title><rect x="7.3324%" y="1045" width="0.0157%" height="15" fill="rgb(230,59,30)"/><text x="7.5824%" y="1055.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (1 samples, 0.02%)</title><rect x="7.3324%" y="1029" width="0.0157%" height="15" fill="rgb(209,121,21)"/><text x="7.5824%" y="1039.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (6 samples, 0.09%)</title><rect x="7.2696%" y="1077" width="0.0942%" height="15" fill="rgb(220,109,13)"/><text x="7.5196%" y="1087.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.02%)</title><rect x="7.3481%" y="1061" width="0.0157%" height="15" fill="rgb(232,18,1)"/><text x="7.5981%" y="1071.50"></text></g><g><title>CoreFoundation`-[__NSArrayM getObjects:range:] (1 samples, 0.02%)</title><rect x="7.3638%" y="1077" width="0.0157%" height="15" fill="rgb(215,41,42)"/><text x="7.6138%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="7.3638%" y="1061" width="0.0157%" height="15" fill="rgb(224,123,36)"/><text x="7.6138%" y="1071.50"></text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (2 samples, 0.03%)</title><rect x="7.3795%" y="1077" width="0.0314%" height="15" fill="rgb(240,125,3)"/><text x="7.6295%" y="1087.50"></text></g><g><title>IOAccelerator`DYLD-STUB$$kdebug_trace (1 samples, 0.02%)</title><rect x="7.4109%" y="1077" width="0.0157%" height="15" fill="rgb(205,98,50)"/><text x="7.6609%" y="1087.50"></text></g><g><title>IOKit`io_connect_method (196 samples, 3.08%)</title><rect x="7.4737%" y="1029" width="3.0774%" height="15" fill="rgb(205,185,37)"/><text x="7.7237%" y="1039.50">IOK..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (196 samples, 3.08%)</title><rect x="7.4737%" y="1013" width="3.0774%" height="15" fill="rgb(238,207,15)"/><text x="7.7237%" y="1023.50">lib..</text></g><g><title>IOAccelerator`IOAccelCommandQueueSubmitCommandBuffers (197 samples, 3.09%)</title><rect x="7.4737%" y="1061" width="3.0931%" height="15" fill="rgb(213,199,42)"/><text x="7.7237%" y="1071.50">IOA..</text></g><g><title>IOKit`IOConnectCallMethod (197 samples, 3.09%)</title><rect x="7.4737%" y="1045" width="3.0931%" height="15" fill="rgb(235,201,11)"/><text x="7.7237%" y="1055.50">IOK..</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="10.5511%" y="1029" width="0.0157%" height="15" fill="rgb(207,46,11)"/><text x="10.8011%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_retain (1 samples, 0.02%)</title><rect x="10.5668%" y="1045" width="0.0157%" height="15" fill="rgb(241,35,35)"/><text x="10.8168%" y="1055.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue submitCommandBuffers:count:] (206 samples, 3.23%)</title><rect x="7.4266%" y="1077" width="3.2344%" height="15" fill="rgb(243,32,47)"/><text x="7.6766%" y="1087.50">Met..</text></g><g><title>libsystem_blocks.dylib`_Block_copy (6 samples, 0.09%)</title><rect x="10.5668%" y="1061" width="0.0942%" height="15" fill="rgb(247,202,23)"/><text x="10.8168%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.08%)</title><rect x="10.5825%" y="1045" width="0.0785%" height="15" fill="rgb(219,102,11)"/><text x="10.8325%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 0.08%)</title><rect x="10.5825%" y="1029" width="0.0785%" height="15" fill="rgb(243,110,44)"/><text x="10.8325%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.06%)</title><rect x="10.5982%" y="1013" width="0.0628%" height="15" fill="rgb(222,74,54)"/><text x="10.8482%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.05%)</title><rect x="10.6139%" y="997" width="0.0471%" height="15" fill="rgb(216,99,12)"/><text x="10.8639%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.05%)</title><rect x="10.6139%" y="981" width="0.0471%" height="15" fill="rgb(226,22,26)"/><text x="10.8639%" y="991.50"></text></g><g><title>Metal`-[_MTLCommandBuffer isProfilingEnabled] (1 samples, 0.02%)</title><rect x="10.6610%" y="1077" width="0.0157%" height="15" fill="rgb(217,163,10)"/><text x="10.9110%" y="1087.50"></text></g><g><title>Metal`-[_MTLDevice globalTraceObjectID] (2 samples, 0.03%)</title><rect x="10.6767%" y="1077" width="0.0314%" height="15" fill="rgb(213,25,53)"/><text x="10.9267%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (5 samples, 0.08%)</title><rect x="10.7081%" y="1077" width="0.0785%" height="15" fill="rgb(252,105,26)"/><text x="10.9581%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (5 samples, 0.08%)</title><rect x="10.7081%" y="1061" width="0.0785%" height="15" fill="rgb(220,39,43)"/><text x="10.9581%" y="1071.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (225 samples, 3.53%)</title><rect x="7.2696%" y="1093" width="3.5327%" height="15" fill="rgb(229,68,48)"/><text x="7.5196%" y="1103.50">Met..</text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="10.7866%" y="1077" width="0.0157%" height="15" fill="rgb(252,8,32)"/><text x="11.0366%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="10.7866%" y="1061" width="0.0157%" height="15" fill="rgb(223,20,43)"/><text x="11.0366%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="10.7866%" y="1045" width="0.0157%" height="15" fill="rgb(229,81,49)"/><text x="11.0366%" y="1055.50"></text></g><g><title>QuartzCore`CAImageQueueCollectable (1 samples, 0.02%)</title><rect x="10.8180%" y="1061" width="0.0157%" height="15" fill="rgb(236,28,36)"/><text x="11.0680%" y="1071.50"></text></g><g><title>QuartzCore`DYLD-STUB$$CFRetain (1 samples, 0.02%)</title><rect x="10.8337%" y="1061" width="0.0157%" height="15" fill="rgb(249,185,26)"/><text x="11.0837%" y="1071.50"></text></g><g><title>QuartzCore`invoke_collectable_callback(void*) (7 samples, 0.11%)</title><rect x="10.8494%" y="1061" width="0.1099%" height="15" fill="rgb(249,174,33)"/><text x="11.0994%" y="1071.50"></text></g><g><title>QuartzCore`layer_collectable_signal(_CAImageQueue*, void*) (.7645) (7 samples, 0.11%)</title><rect x="10.8494%" y="1045" width="0.1099%" height="15" fill="rgb(233,201,37)"/><text x="11.0994%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (6 samples, 0.09%)</title><rect x="10.8651%" y="1029" width="0.0942%" height="15" fill="rgb(221,78,26)"/><text x="11.1151%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (6 samples, 0.09%)</title><rect x="10.8651%" y="1013" width="0.0942%" height="15" fill="rgb(250,127,30)"/><text x="11.1151%" y="1023.50"></text></g><g><title>QuartzCore`_XImageQueueCollectable (10 samples, 0.16%)</title><rect x="10.8180%" y="1077" width="0.1570%" height="15" fill="rgb(230,49,44)"/><text x="11.0680%" y="1087.50"></text></g><g><title>QuartzCore`layer_collectable_signal(_CAImageQueue*, void*) (.7645) (1 samples, 0.02%)</title><rect x="10.9593%" y="1061" width="0.0157%" height="15" fill="rgb(229,67,23)"/><text x="11.2093%" y="1071.50"></text></g><g><title>CoreFoundation`CFRetain (1 samples, 0.02%)</title><rect x="10.9750%" y="1061" width="0.0157%" height="15" fill="rgb(249,83,47)"/><text x="11.2250%" y="1071.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (1 samples, 0.02%)</title><rect x="10.9907%" y="1029" width="0.0157%" height="15" fill="rgb(215,43,3)"/><text x="11.2407%" y="1039.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (1 samples, 0.02%)</title><rect x="10.9907%" y="1013" width="0.0157%" height="15" fill="rgb(238,154,13)"/><text x="11.2407%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.02%)</title><rect x="10.9907%" y="997" width="0.0157%" height="15" fill="rgb(219,56,2)"/><text x="11.2407%" y="1007.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (1 samples, 0.02%)</title><rect x="10.9907%" y="981" width="0.0157%" height="15" fill="rgb(233,0,4)"/><text x="11.2407%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="10.9907%" y="965" width="0.0157%" height="15" fill="rgb(235,30,7)"/><text x="11.2407%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.02%)</title><rect x="11.0064%" y="965" width="0.0157%" height="15" fill="rgb(250,79,13)"/><text x="11.2564%" y="975.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (1 samples, 0.02%)</title><rect x="11.0064%" y="949" width="0.0157%" height="15" fill="rgb(211,146,34)"/><text x="11.2564%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (1 samples, 0.02%)</title><rect x="11.0064%" y="933" width="0.0157%" height="15" fill="rgb(228,22,38)"/><text x="11.2564%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (2 samples, 0.03%)</title><rect x="11.0064%" y="1029" width="0.0314%" height="15" fill="rgb(235,168,5)"/><text x="11.2564%" y="1039.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (2 samples, 0.03%)</title><rect x="11.0064%" y="1013" width="0.0314%" height="15" fill="rgb(221,155,16)"/><text x="11.2564%" y="1023.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (2 samples, 0.03%)</title><rect x="11.0064%" y="997" width="0.0314%" height="15" fill="rgb(215,215,53)"/><text x="11.2564%" y="1007.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (2 samples, 0.03%)</title><rect x="11.0064%" y="981" width="0.0314%" height="15" fill="rgb(223,4,10)"/><text x="11.2564%" y="991.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (1 samples, 0.02%)</title><rect x="11.0221%" y="965" width="0.0157%" height="15" fill="rgb(234,103,6)"/><text x="11.2721%" y="975.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (1 samples, 0.02%)</title><rect x="11.0378%" y="1029" width="0.0157%" height="15" fill="rgb(227,97,0)"/><text x="11.2878%" y="1039.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (1 samples, 0.02%)</title><rect x="11.0378%" y="1013" width="0.0157%" height="15" fill="rgb(234,150,53)"/><text x="11.2878%" y="1023.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.02%)</title><rect x="11.0378%" y="997" width="0.0157%" height="15" fill="rgb(228,201,54)"/><text x="11.2878%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="11.0378%" y="981" width="0.0157%" height="15" fill="rgb(222,22,37)"/><text x="11.2878%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="11.0378%" y="965" width="0.0157%" height="15" fill="rgb(237,53,32)"/><text x="11.2878%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="11.0378%" y="949" width="0.0157%" height="15" fill="rgb(233,25,53)"/><text x="11.2878%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="11.0378%" y="933" width="0.0157%" height="15" fill="rgb(210,40,34)"/><text x="11.2878%" y="943.50"></text></g><g><title>Metal`-[MTLIOAccelTexture iosurface] (1 samples, 0.02%)</title><rect x="11.0535%" y="1029" width="0.0157%" height="15" fill="rgb(241,220,44)"/><text x="11.3035%" y="1039.50"></text></g><g><title>Metal`__37-[_MTLCommandBuffer presentDrawable:]_block_invoke.173 (1 samples, 0.02%)</title><rect x="11.0692%" y="1029" width="0.0157%" height="15" fill="rgb(235,28,35)"/><text x="11.3192%" y="1039.50"></text></g><g><title>Metal`__destroy_helper_block_e8_32o (1 samples, 0.02%)</title><rect x="11.0849%" y="997" width="0.0157%" height="15" fill="rgb(210,56,17)"/><text x="11.3349%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="11.1006%" y="997" width="0.0157%" height="15" fill="rgb(224,130,29)"/><text x="11.3506%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::terminate (1 samples, 0.02%)</title><rect x="11.1320%" y="965" width="0.0157%" height="15" fill="rgb(235,212,8)"/><text x="11.3820%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="11.1320%" y="949" width="0.0157%" height="15" fill="rgb(223,33,50)"/><text x="11.3820%" y="959.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (2 samples, 0.03%)</title><rect x="11.1634%" y="949" width="0.0314%" height="15" fill="rgb(219,149,13)"/><text x="11.4134%" y="959.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (2 samples, 0.03%)</title><rect x="11.1634%" y="933" width="0.0314%" height="15" fill="rgb(250,156,29)"/><text x="11.4134%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="11.1634%" y="917" width="0.0314%" height="15" fill="rgb(216,193,19)"/><text x="11.4134%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="11.1634%" y="901" width="0.0314%" height="15" fill="rgb(216,135,14)"/><text x="11.4134%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="11.1791%" y="885" width="0.0157%" height="15" fill="rgb(241,47,5)"/><text x="11.4291%" y="895.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (4 samples, 0.06%)</title><rect x="11.1477%" y="965" width="0.0628%" height="15" fill="rgb(233,42,35)"/><text x="11.3977%" y="975.50"></text></g><g><title>Metal`metal_atomic_add (1 samples, 0.02%)</title><rect x="11.1949%" y="949" width="0.0157%" height="15" fill="rgb(231,13,6)"/><text x="11.4449%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (7 samples, 0.11%)</title><rect x="11.1163%" y="981" width="0.1099%" height="15" fill="rgb(207,181,40)"/><text x="11.3663%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="11.2106%" y="965" width="0.0157%" height="15" fill="rgb(254,173,49)"/><text x="11.4606%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="11.2106%" y="949" width="0.0157%" height="15" fill="rgb(221,1,38)"/><text x="11.4606%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt; &gt;::~__hash_table (1 samples, 0.02%)</title><rect x="11.2263%" y="981" width="0.0157%" height="15" fill="rgb(206,124,46)"/><text x="11.4763%" y="991.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (9 samples, 0.14%)</title><rect x="11.1163%" y="997" width="0.1413%" height="15" fill="rgb(249,21,11)"/><text x="11.3663%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.02%)</title><rect x="11.2420%" y="981" width="0.0157%" height="15" fill="rgb(222,201,40)"/><text x="11.4920%" y="991.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, unsigned long&gt; &gt;, DisguisedPtr&lt;objc_object&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, unsigned long&gt; &gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object&gt; &gt;(DisguisedPtr&lt;objc_object&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr (1 samples, 0.02%)</title><rect x="11.2420%" y="965" width="0.0157%" height="15" fill="rgb(235,61,29)"/><text x="11.4920%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeAllObjects] (12 samples, 0.19%)</title><rect x="11.0849%" y="1013" width="0.1884%" height="15" fill="rgb(219,207,3)"/><text x="11.3349%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="11.2577%" y="997" width="0.0157%" height="15" fill="rgb(222,56,46)"/><text x="11.5077%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="11.2577%" y="981" width="0.0157%" height="15" fill="rgb(239,76,54)"/><text x="11.5077%" y="991.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable didScheduledPresent] (14 samples, 0.22%)</title><rect x="11.0849%" y="1029" width="0.2198%" height="15" fill="rgb(231,124,27)"/><text x="11.3349%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (2 samples, 0.03%)</title><rect x="11.2734%" y="1013" width="0.0314%" height="15" fill="rgb(249,195,6)"/><text x="11.5234%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (2 samples, 0.03%)</title><rect x="11.2734%" y="997" width="0.0314%" height="15" fill="rgb(237,174,47)"/><text x="11.5234%" y="1007.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (22 samples, 0.35%)</title><rect x="10.9907%" y="1045" width="0.3454%" height="15" fill="rgb(206,201,31)"/><text x="11.2407%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="11.3048%" y="1029" width="0.0314%" height="15" fill="rgb(231,57,52)"/><text x="11.5548%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (1 samples, 0.02%)</title><rect x="11.3362%" y="1045" width="0.0157%" height="15" fill="rgb(248,177,22)"/><text x="11.5862%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.08%)</title><rect x="11.3519%" y="1045" width="0.0785%" height="15" fill="rgb(215,211,37)"/><text x="11.6019%" y="1055.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (29 samples, 0.46%)</title><rect x="10.9907%" y="1061" width="0.4553%" height="15" fill="rgb(241,128,51)"/><text x="11.2407%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (1 samples, 0.02%)</title><rect x="11.4304%" y="1045" width="0.0157%" height="15" fill="rgb(227,165,31)"/><text x="11.6804%" y="1055.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (31 samples, 0.49%)</title><rect x="10.9750%" y="1077" width="0.4867%" height="15" fill="rgb(228,167,24)"/><text x="11.2250%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="11.4461%" y="1061" width="0.0157%" height="15" fill="rgb(228,143,12)"/><text x="11.6961%" y="1071.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (54 samples, 0.85%)</title><rect x="10.8023%" y="1093" width="0.8479%" height="15" fill="rgb(249,149,8)"/><text x="11.0523%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (12 samples, 0.19%)</title><rect x="11.4618%" y="1077" width="0.1884%" height="15" fill="rgb(243,35,44)"/><text x="11.7118%" y="1087.50"></text></g><g><title>CoreFoundation`CFRelease (2 samples, 0.03%)</title><rect x="11.6816%" y="1061" width="0.0314%" height="15" fill="rgb(246,89,9)"/><text x="11.9316%" y="1071.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.02%)</title><rect x="11.7130%" y="1061" width="0.0157%" height="15" fill="rgb(233,213,13)"/><text x="11.9630%" y="1071.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (1 samples, 0.02%)</title><rect x="11.7287%" y="1029" width="0.0157%" height="15" fill="rgb(233,141,41)"/><text x="11.9787%" y="1039.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (1 samples, 0.02%)</title><rect x="11.7444%" y="997" width="0.0157%" height="15" fill="rgb(239,167,4)"/><text x="11.9944%" y="1007.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable priv] (1 samples, 0.02%)</title><rect x="11.7601%" y="997" width="0.0157%" height="15" fill="rgb(209,217,16)"/><text x="12.0101%" y="1007.50"></text></g><g><title>QuartzCore`CA::Render::Surface::type (1 samples, 0.02%)</title><rect x="11.7915%" y="981" width="0.0157%" height="15" fill="rgb(219,88,35)"/><text x="12.0415%" y="991.50"></text></g><g><title>IOSurface`IOSurfaceClientGetRegistryID (1 samples, 0.02%)</title><rect x="11.8072%" y="965" width="0.0157%" height="15" fill="rgb(220,193,23)"/><text x="12.0572%" y="975.50"></text></g><g><title>QuartzCore`CA::Context::retain_context_with_id (1 samples, 0.02%)</title><rect x="11.8229%" y="949" width="0.0157%" height="15" fill="rgb(230,90,52)"/><text x="12.0729%" y="959.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (13 samples, 0.20%)</title><rect x="11.8229%" y="965" width="0.2041%" height="15" fill="rgb(252,106,19)"/><text x="12.0729%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (12 samples, 0.19%)</title><rect x="11.8386%" y="949" width="0.1884%" height="15" fill="rgb(206,74,20)"/><text x="12.0886%" y="959.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImageImpl (29 samples, 0.46%)</title><rect x="11.8072%" y="981" width="0.4553%" height="15" fill="rgb(230,138,44)"/><text x="12.0572%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (15 samples, 0.24%)</title><rect x="12.0270%" y="965" width="0.2355%" height="15" fill="rgb(235,182,43)"/><text x="12.2770%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (15 samples, 0.24%)</title><rect x="12.0270%" y="949" width="0.2355%" height="15" fill="rgb(242,16,51)"/><text x="12.2770%" y="959.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (32 samples, 0.50%)</title><rect x="11.7758%" y="997" width="0.5024%" height="15" fill="rgb(248,9,4)"/><text x="12.0258%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.02%)</title><rect x="12.2625%" y="981" width="0.0157%" height="15" fill="rgb(210,31,22)"/><text x="12.5125%" y="991.50"></text></g><g><title>QuartzCore`layer_private_release(_CAMetalLayerPrivate*) (1 samples, 0.02%)</title><rect x="12.2782%" y="997" width="0.0157%" height="15" fill="rgb(239,54,39)"/><text x="12.5282%" y="1007.50"></text></g><g><title>Metal`MTLDispatchListApply (36 samples, 0.57%)</title><rect x="11.7444%" y="1013" width="0.5652%" height="15" fill="rgb(230,99,41)"/><text x="11.9944%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="12.2939%" y="997" width="0.0157%" height="15" fill="rgb(253,106,12)"/><text x="12.5439%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="12.2939%" y="981" width="0.0157%" height="15" fill="rgb(213,46,41)"/><text x="12.5439%" y="991.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable releasePrivateReferences:] (1 samples, 0.02%)</title><rect x="12.3096%" y="1013" width="0.0157%" height="15" fill="rgb(215,133,35)"/><text x="12.5596%" y="1023.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="12.3253%" y="1013" width="0.0157%" height="15" fill="rgb(213,28,5)"/><text x="12.5753%" y="1023.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (2 samples, 0.03%)</title><rect x="12.3410%" y="1013" width="0.0314%" height="15" fill="rgb(215,77,49)"/><text x="12.5910%" y="1023.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (2 samples, 0.03%)</title><rect x="12.3410%" y="997" width="0.0314%" height="15" fill="rgb(248,100,22)"/><text x="12.5910%" y="1007.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (41 samples, 0.64%)</title><rect x="11.7444%" y="1029" width="0.6437%" height="15" fill="rgb(208,67,9)"/><text x="11.9944%" y="1039.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (1 samples, 0.02%)</title><rect x="12.3724%" y="1013" width="0.0157%" height="15" fill="rgb(219,133,21)"/><text x="12.6224%" y="1023.50"></text></g><g><title>CoreFoundation`-[__NSArrayM _mutate] (1 samples, 0.02%)</title><rect x="12.3881%" y="997" width="0.0157%" height="15" fill="rgb(246,46,29)"/><text x="12.6381%" y="1007.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (1 samples, 0.02%)</title><rect x="12.4038%" y="997" width="0.0157%" height="15" fill="rgb(246,185,52)"/><text x="12.6538%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_good_size (1 samples, 0.02%)</title><rect x="12.4038%" y="981" width="0.0157%" height="15" fill="rgb(252,136,11)"/><text x="12.6538%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.02%)</title><rect x="12.4195%" y="997" width="0.0157%" height="15" fill="rgb(219,138,53)"/><text x="12.6695%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="12.4352%" y="997" width="0.0157%" height="15" fill="rgb(211,51,23)"/><text x="12.6852%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="12.4352%" y="981" width="0.0157%" height="15" fill="rgb(247,221,28)"/><text x="12.6852%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="12.4509%" y="997" width="0.0157%" height="15" fill="rgb(251,222,45)"/><text x="12.7009%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="12.4509%" y="981" width="0.0157%" height="15" fill="rgb(217,162,53)"/><text x="12.7009%" y="991.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (6 samples, 0.09%)</title><rect x="12.3881%" y="1013" width="0.0942%" height="15" fill="rgb(229,93,14)"/><text x="12.6381%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (1 samples, 0.02%)</title><rect x="12.4666%" y="997" width="0.0157%" height="15" fill="rgb(209,67,49)"/><text x="12.7166%" y="1007.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectAtIndex:] (1 samples, 0.02%)</title><rect x="12.4823%" y="1013" width="0.0157%" height="15" fill="rgb(213,87,29)"/><text x="12.7323%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (29 samples, 0.46%)</title><rect x="12.4980%" y="981" width="0.4553%" height="15" fill="rgb(205,151,52)"/><text x="12.7480%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (28 samples, 0.44%)</title><rect x="12.5137%" y="965" width="0.4396%" height="15" fill="rgb(253,215,39)"/><text x="12.7637%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.05%)</title><rect x="13.0005%" y="933" width="0.0471%" height="15" fill="rgb(221,220,41)"/><text x="13.2505%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.05%)</title><rect x="13.0005%" y="917" width="0.0471%" height="15" fill="rgb(218,133,21)"/><text x="13.2505%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.05%)</title><rect x="13.0005%" y="901" width="0.0471%" height="15" fill="rgb(221,193,43)"/><text x="13.2505%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.05%)</title><rect x="13.0005%" y="885" width="0.0471%" height="15" fill="rgb(240,128,52)"/><text x="13.2505%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="13.0319%" y="869" width="0.0157%" height="15" fill="rgb(253,114,12)"/><text x="13.2819%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (5 samples, 0.08%)</title><rect x="12.9848%" y="965" width="0.0785%" height="15" fill="rgb(215,223,47)"/><text x="13.2348%" y="975.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (5 samples, 0.08%)</title><rect x="12.9848%" y="949" width="0.0785%" height="15" fill="rgb(248,225,23)"/><text x="13.2348%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="13.0476%" y="933" width="0.0157%" height="15" fill="rgb(250,108,0)"/><text x="13.2976%" y="943.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (38 samples, 0.60%)</title><rect x="12.4980%" y="997" width="0.5966%" height="15" fill="rgb(228,208,7)"/><text x="12.7480%" y="1007.50"></text></g><g><title>libdispatch.dylib`dispatch_async (9 samples, 0.14%)</title><rect x="12.9534%" y="981" width="0.1413%" height="15" fill="rgb(244,45,10)"/><text x="13.2034%" y="991.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (2 samples, 0.03%)</title><rect x="13.0633%" y="965" width="0.0314%" height="15" fill="rgb(207,125,25)"/><text x="13.3133%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 0.02%)</title><rect x="13.0947%" y="949" width="0.0157%" height="15" fill="rgb(210,195,18)"/><text x="13.3447%" y="959.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (1 samples, 0.02%)</title><rect x="13.0947%" y="933" width="0.0157%" height="15" fill="rgb(249,80,12)"/><text x="13.3447%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="13.1104%" y="949" width="0.0157%" height="15" fill="rgb(221,65,9)"/><text x="13.3604%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.05%)</title><rect x="13.1261%" y="933" width="0.0471%" height="15" fill="rgb(235,49,36)"/><text x="13.3761%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="13.1418%" y="917" width="0.0314%" height="15" fill="rgb(225,32,20)"/><text x="13.3918%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.03%)</title><rect x="13.1418%" y="901" width="0.0314%" height="15" fill="rgb(215,141,46)"/><text x="13.3918%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="13.1732%" y="933" width="0.0157%" height="15" fill="rgb(250,160,47)"/><text x="13.4232%" y="943.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (7 samples, 0.11%)</title><rect x="13.0947%" y="965" width="0.1099%" height="15" fill="rgb(216,222,40)"/><text x="13.3447%" y="975.50"></text></g><g><title>rvfm_main`block::block_context_dispose (5 samples, 0.08%)</title><rect x="13.1261%" y="949" width="0.0785%" height="15" fill="rgb(234,217,39)"/><text x="13.3761%" y="959.50"></text></g><g><title>rvfm_main`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="13.1889%" y="933" width="0.0157%" height="15" fill="rgb(207,178,40)"/><text x="13.4389%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.06%)</title><rect x="13.2046%" y="965" width="0.0628%" height="15" fill="rgb(221,136,13)"/><text x="13.4546%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="13.2360%" y="949" width="0.0314%" height="15" fill="rgb(249,199,10)"/><text x="13.4860%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="13.2517%" y="933" width="0.0157%" height="15" fill="rgb(249,222,13)"/><text x="13.5017%" y="943.50"></text></g><g><title>rvfm_main`&lt;X as block::IntoConcreteBlock&lt;(A,)&gt;&gt;::into_concrete_block::concrete_block_invoke_args1 (1 samples, 0.02%)</title><rect x="13.2674%" y="965" width="0.0157%" height="15" fill="rgb(244,185,38)"/><text x="13.5174%" y="975.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (13 samples, 0.20%)</title><rect x="13.0947%" y="997" width="0.2041%" height="15" fill="rgb(236,202,9)"/><text x="13.3447%" y="1007.50"></text></g><g><title>Metal`MTLDispatchListApply (13 samples, 0.20%)</title><rect x="13.0947%" y="981" width="0.2041%" height="15" fill="rgb(250,229,37)"/><text x="13.3447%" y="991.50"></text></g><g><title>rvfm_main`block::block_context_dispose (1 samples, 0.02%)</title><rect x="13.2831%" y="965" width="0.0157%" height="15" fill="rgb(206,174,23)"/><text x="13.5331%" y="975.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (4 samples, 0.06%)</title><rect x="13.3616%" y="965" width="0.0628%" height="15" fill="rgb(211,33,43)"/><text x="13.6116%" y="975.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageReset (13 samples, 0.20%)</title><rect x="13.3145%" y="981" width="0.2041%" height="15" fill="rgb(245,58,50)"/><text x="13.5645%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_release (6 samples, 0.09%)</title><rect x="13.4244%" y="965" width="0.0942%" height="15" fill="rgb(244,68,36)"/><text x="13.6744%" y="975.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageDealloc (18 samples, 0.28%)</title><rect x="13.2988%" y="997" width="0.2826%" height="15" fill="rgb(232,229,15)"/><text x="13.5488%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.06%)</title><rect x="13.5186%" y="981" width="0.0628%" height="15" fill="rgb(254,30,23)"/><text x="13.7686%" y="991.50"></text></g><g><title>libdispatch.dylib`dispatch_semaphore_signal (1 samples, 0.02%)</title><rect x="13.5814%" y="997" width="0.0157%" height="15" fill="rgb(235,160,14)"/><text x="13.8314%" y="1007.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (78 samples, 1.22%)</title><rect x="12.3881%" y="1029" width="1.2247%" height="15" fill="rgb(212,155,44)"/><text x="12.6381%" y="1039.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer didCompleteWithStartTime:endTime:error:] (71 samples, 1.11%)</title><rect x="12.4980%" y="1013" width="1.1148%" height="15" fill="rgb(226,2,50)"/><text x="12.7480%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (1 samples, 0.02%)</title><rect x="13.5971%" y="997" width="0.0157%" height="15" fill="rgb(234,177,6)"/><text x="13.8471%" y="1007.50"></text></g><g><title>Metal`MTLReportFailureTypeEnabled (1 samples, 0.02%)</title><rect x="13.6128%" y="1029" width="0.0157%" height="15" fill="rgb(217,24,9)"/><text x="13.8628%" y="1039.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke.19 (1 samples, 0.02%)</title><rect x="13.6285%" y="1029" width="0.0157%" height="15" fill="rgb(220,13,46)"/><text x="13.8785%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (1 samples, 0.02%)</title><rect x="13.6285%" y="1013" width="0.0157%" height="15" fill="rgb(239,221,27)"/><text x="13.8785%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (1 samples, 0.02%)</title><rect x="13.6285%" y="997" width="0.0157%" height="15" fill="rgb(222,198,25)"/><text x="13.8785%" y="1007.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke (1 samples, 0.02%)</title><rect x="13.6442%" y="1029" width="0.0157%" height="15" fill="rgb(211,99,13)"/><text x="13.8942%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (1 samples, 0.02%)</title><rect x="13.6442%" y="1013" width="0.0157%" height="15" fill="rgb(232,111,31)"/><text x="13.8942%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (1 samples, 0.02%)</title><rect x="13.6442%" y="997" width="0.0157%" height="15" fill="rgb(245,82,37)"/><text x="13.8942%" y="1007.50"></text></g><g><title>Metal`__destroy_helper_block_e8_32o (1 samples, 0.02%)</title><rect x="13.6599%" y="1029" width="0.0157%" height="15" fill="rgb(227,149,46)"/><text x="13.9099%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.08%)</title><rect x="13.6756%" y="1029" width="0.0785%" height="15" fill="rgb(218,36,50)"/><text x="13.9256%" y="1039.50"></text></g><g><title>Metal`__destroy_helper_block_e8_32o40o (1 samples, 0.02%)</title><rect x="13.7855%" y="1013" width="0.0157%" height="15" fill="rgb(226,80,48)"/><text x="14.0355%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (3 samples, 0.05%)</title><rect x="13.8012%" y="1013" width="0.0471%" height="15" fill="rgb(238,224,15)"/><text x="14.0512%" y="1023.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (3 samples, 0.05%)</title><rect x="13.8012%" y="997" width="0.0471%" height="15" fill="rgb(241,136,10)"/><text x="14.0512%" y="1007.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt; &gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (2 samples, 0.03%)</title><rect x="13.8169%" y="981" width="0.0314%" height="15" fill="rgb(208,32,45)"/><text x="14.0669%" y="991.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (8 samples, 0.13%)</title><rect x="13.7541%" y="1029" width="0.1256%" height="15" fill="rgb(207,135,9)"/><text x="14.0041%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_release (2 samples, 0.03%)</title><rect x="13.8483%" y="1013" width="0.0314%" height="15" fill="rgb(206,86,44)"/><text x="14.0983%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.05%)</title><rect x="13.8797%" y="1029" width="0.0471%" height="15" fill="rgb(245,177,15)"/><text x="14.1297%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.03%)</title><rect x="13.8954%" y="1013" width="0.0314%" height="15" fill="rgb(206,64,50)"/><text x="14.1454%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="13.9268%" y="1013" width="0.0157%" height="15" fill="rgb(234,36,40)"/><text x="14.1768%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.08%)</title><rect x="13.9268%" y="1029" width="0.0785%" height="15" fill="rgb(213,64,8)"/><text x="14.1768%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.06%)</title><rect x="13.9425%" y="1013" width="0.0628%" height="15" fill="rgb(210,75,36)"/><text x="14.1925%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.03%)</title><rect x="13.9739%" y="997" width="0.0314%" height="15" fill="rgb(229,88,21)"/><text x="14.2239%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="14.0053%" y="1029" width="0.0157%" height="15" fill="rgb(252,204,47)"/><text x="14.2553%" y="1039.50"></text></g><g><title>IOAccelerator`ioAccelCommandQueueBlockFenceCallback (148 samples, 2.32%)</title><rect x="11.7287%" y="1045" width="2.3238%" height="15" fill="rgb(208,77,27)"/><text x="11.9787%" y="1055.50">I..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.03%)</title><rect x="14.0210%" y="1029" width="0.0314%" height="15" fill="rgb(221,76,26)"/><text x="14.2710%" y="1039.50"></text></g><g><title>Metal`__53-[MTLIOAccelCommandQueue submitCommandBuffers:count:]_block_invoke.19 (1 samples, 0.02%)</title><rect x="14.0524%" y="1045" width="0.0157%" height="15" fill="rgb(225,139,18)"/><text x="14.3024%" y="1055.50"></text></g><g><title>libdispatch.dylib`dispatch_group_leave (1 samples, 0.02%)</title><rect x="14.0681%" y="1045" width="0.0157%" height="15" fill="rgb(230,137,11)"/><text x="14.3181%" y="1055.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (154 samples, 2.42%)</title><rect x="11.6816%" y="1077" width="2.4180%" height="15" fill="rgb(212,28,1)"/><text x="11.9316%" y="1087.50">IO..</text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (151 samples, 2.37%)</title><rect x="11.7287%" y="1061" width="2.3709%" height="15" fill="rgb(248,164,17)"/><text x="11.9787%" y="1071.50">IO..</text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="14.0838%" y="1045" width="0.0157%" height="15" fill="rgb(222,171,42)"/><text x="14.3338%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.03%)</title><rect x="14.0995%" y="1077" width="0.0314%" height="15" fill="rgb(243,84,45)"/><text x="14.3495%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (51 samples, 0.80%)</title><rect x="14.1309%" y="1077" width="0.8008%" height="15" fill="rgb(252,49,23)"/><text x="14.3809%" y="1087.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (210 samples, 3.30%)</title><rect x="11.6502%" y="1093" width="3.2972%" height="15" fill="rgb(215,19,7)"/><text x="11.9002%" y="1103.50">lib..</text></g><g><title>libsystem_kernel.dylib`mig_reply_setup (1 samples, 0.02%)</title><rect x="14.9317%" y="1077" width="0.0157%" height="15" fill="rgb(238,81,41)"/><text x="15.1817%" y="1087.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="14.9474%" y="1093" width="0.0314%" height="15" fill="rgb(210,199,37)"/><text x="15.1974%" y="1103.50"></text></g><g><title>libobjc.A.dylib`objc_release (2 samples, 0.03%)</title><rect x="14.9788%" y="1093" width="0.0314%" height="15" fill="rgb(244,192,49)"/><text x="15.2288%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (494 samples, 7.76%)</title><rect x="7.2696%" y="1109" width="7.7563%" height="15" fill="rgb(226,211,11)"/><text x="7.5196%" y="1119.50">libdispatch..</text></g><g><title>libobjc.A.dylib`objc_retain (1 samples, 0.02%)</title><rect x="15.0102%" y="1093" width="0.0157%" height="15" fill="rgb(236,162,54)"/><text x="15.2602%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (497 samples, 7.80%)</title><rect x="7.2382%" y="1125" width="7.8034%" height="15" fill="rgb(220,229,9)"/><text x="7.4882%" y="1135.50">libdispatch..</text></g><g><title>libdispatch.dylib`dispatch_mig_server (1 samples, 0.02%)</title><rect x="15.0259%" y="1109" width="0.0157%" height="15" fill="rgb(250,87,22)"/><text x="15.2759%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_dispose (1 samples, 0.02%)</title><rect x="15.0416%" y="1109" width="0.0157%" height="15" fill="rgb(239,43,17)"/><text x="15.2916%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="15.0416%" y="1093" width="0.0157%" height="15" fill="rgb(231,177,25)"/><text x="15.2916%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="15.0416%" y="1077" width="0.0157%" height="15" fill="rgb(219,179,1)"/><text x="15.2916%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="15.0416%" y="1061" width="0.0157%" height="15" fill="rgb(238,219,53)"/><text x="15.2916%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (3 samples, 0.05%)</title><rect x="15.0416%" y="1125" width="0.0471%" height="15" fill="rgb(232,167,36)"/><text x="15.2916%" y="1135.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (2 samples, 0.03%)</title><rect x="15.0573%" y="1109" width="0.0314%" height="15" fill="rgb(244,19,51)"/><text x="15.3073%" y="1119.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (2 samples, 0.03%)</title><rect x="15.0573%" y="1093" width="0.0314%" height="15" fill="rgb(224,6,22)"/><text x="15.3073%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_xref_dispose (1 samples, 0.02%)</title><rect x="15.0887%" y="1125" width="0.0157%" height="15" fill="rgb(224,145,5)"/><text x="15.3387%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_dispose (1 samples, 0.02%)</title><rect x="15.1044%" y="1125" width="0.0157%" height="15" fill="rgb(234,130,49)"/><text x="15.3544%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (509 samples, 7.99%)</title><rect x="7.1597%" y="1141" width="7.9918%" height="15" fill="rgb(254,6,2)"/><text x="7.4097%" y="1151.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_source_handler_dispose (2 samples, 0.03%)</title><rect x="15.1201%" y="1125" width="0.0314%" height="15" fill="rgb(208,96,46)"/><text x="15.3701%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="15.1201%" y="1109" width="0.0314%" height="15" fill="rgb(239,3,39)"/><text x="15.3701%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="15.1358%" y="1093" width="0.0157%" height="15" fill="rgb(233,210,1)"/><text x="15.3858%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="15.1358%" y="1077" width="0.0157%" height="15" fill="rgb(244,137,37)"/><text x="15.3858%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (657 samples, 10.32%)</title><rect x="4.8516%" y="1157" width="10.3156%" height="15" fill="rgb(240,136,2)"/><text x="5.1016%" y="1167.50">libdispatch.dyl..</text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="15.1515%" y="1141" width="0.0157%" height="15" fill="rgb(239,18,37)"/><text x="15.4015%" y="1151.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (1 samples, 0.02%)</title><rect x="15.1672%" y="1141" width="0.0157%" height="15" fill="rgb(218,185,22)"/><text x="15.4172%" y="1151.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_pop (2 samples, 0.03%)</title><rect x="15.1672%" y="1157" width="0.0314%" height="15" fill="rgb(225,218,4)"/><text x="15.4172%" y="1167.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.02%)</title><rect x="15.1829%" y="1141" width="0.0157%" height="15" fill="rgb(230,182,32)"/><text x="15.4329%" y="1151.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (1 samples, 0.02%)</title><rect x="15.1829%" y="1125" width="0.0157%" height="15" fill="rgb(242,56,43)"/><text x="15.4329%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (661 samples, 10.38%)</title><rect x="4.8359%" y="1173" width="10.3784%" height="15" fill="rgb(233,99,24)"/><text x="5.0859%" y="1183.50">libdispatch.dyl..</text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPush (1 samples, 0.02%)</title><rect x="15.1986%" y="1157" width="0.0157%" height="15" fill="rgb(234,209,42)"/><text x="15.4486%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_wakeup (1 samples, 0.02%)</title><rect x="15.2143%" y="1173" width="0.0157%" height="15" fill="rgb(227,7,12)"/><text x="15.4643%" y="1183.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (964 samples, 15.14%)</title><rect x="0.1256%" y="1221" width="15.1358%" height="15" fill="rgb(245,203,43)"/><text x="0.3756%" y="1231.50">libsystem_pthread.dylib..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (730 samples, 11.46%)</title><rect x="3.7997%" y="1205" width="11.4618%" height="15" fill="rgb(238,205,33)"/><text x="4.0497%" y="1215.50">libsystem_pthread..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (693 samples, 10.88%)</title><rect x="4.3806%" y="1189" width="10.8808%" height="15" fill="rgb(231,56,7)"/><text x="4.6306%" y="1199.50">libdispatch.dyli..</text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (2 samples, 0.03%)</title><rect x="15.2300%" y="1173" width="0.0314%" height="15" fill="rgb(244,186,29)"/><text x="15.4800%" y="1183.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (1 samples, 0.02%)</title><rect x="15.2614%" y="1141" width="0.0157%" height="15" fill="rgb(234,111,31)"/><text x="15.5114%" y="1151.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (2 samples, 0.03%)</title><rect x="15.2771%" y="1141" width="0.0314%" height="15" fill="rgb(241,149,10)"/><text x="15.5271%" y="1151.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (1 samples, 0.02%)</title><rect x="15.2928%" y="1125" width="0.0157%" height="15" fill="rgb(249,206,44)"/><text x="15.5428%" y="1135.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (2 samples, 0.03%)</title><rect x="15.3085%" y="1013" width="0.0314%" height="15" fill="rgb(251,153,30)"/><text x="15.5585%" y="1023.50"></text></g><g><title>CoreFoundation`CFEqual (1 samples, 0.02%)</title><rect x="15.3242%" y="997" width="0.0157%" height="15" fill="rgb(239,152,38)"/><text x="15.5742%" y="1007.50"></text></g><g><title>CoreFoundation`CFRunLoopPerformBlock (3 samples, 0.05%)</title><rect x="15.3085%" y="1061" width="0.0471%" height="15" fill="rgb(249,139,47)"/><text x="15.5585%" y="1071.50"></text></g><g><title>CoreFoundation`__CFRunLoopFindMode (3 samples, 0.05%)</title><rect x="15.3085%" y="1045" width="0.0471%" height="15" fill="rgb(244,64,35)"/><text x="15.5585%" y="1055.50"></text></g><g><title>CoreFoundation`CFSetGetValue (3 samples, 0.05%)</title><rect x="15.3085%" y="1029" width="0.0471%" height="15" fill="rgb(216,46,15)"/><text x="15.5585%" y="1039.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeEqual (1 samples, 0.02%)</title><rect x="15.3399%" y="1013" width="0.0157%" height="15" fill="rgb(250,74,19)"/><text x="15.5899%" y="1023.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (1 samples, 0.02%)</title><rect x="15.3556%" y="1061" width="0.0157%" height="15" fill="rgb(249,42,33)"/><text x="15.6056%" y="1071.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (1 samples, 0.02%)</title><rect x="15.3556%" y="1045" width="0.0157%" height="15" fill="rgb(242,149,17)"/><text x="15.6056%" y="1055.50"></text></g><g><title>CoreFoundation`__CFTSRToDispatchTime (1 samples, 0.02%)</title><rect x="15.3556%" y="1029" width="0.0157%" height="15" fill="rgb(244,29,21)"/><text x="15.6056%" y="1039.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (5 samples, 0.08%)</title><rect x="15.3713%" y="1061" width="0.0785%" height="15" fill="rgb(220,130,37)"/><text x="15.6213%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (5 samples, 0.08%)</title><rect x="15.3713%" y="1045" width="0.0785%" height="15" fill="rgb(211,67,2)"/><text x="15.6213%" y="1055.50"></text></g><g><title>HIToolbox`_GetMouseCoalescingStateWithPenButtons (1 samples, 0.02%)</title><rect x="15.4498%" y="1061" width="0.0157%" height="15" fill="rgb(235,68,52)"/><text x="15.6998%" y="1071.50"></text></g><g><title>SkyLight`CGSConnectionByID (1 samples, 0.02%)</title><rect x="15.4655%" y="1029" width="0.0157%" height="15" fill="rgb(246,142,3)"/><text x="15.7155%" y="1039.50"></text></g><g><title>SkyLight`(anonymous namespace)::GestureEventLog::getLogString (1 samples, 0.02%)</title><rect x="15.4812%" y="1013" width="0.0157%" height="15" fill="rgb(241,25,7)"/><text x="15.7312%" y="1023.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (1 samples, 0.02%)</title><rect x="15.4812%" y="997" width="0.0157%" height="15" fill="rgb(242,119,39)"/><text x="15.7312%" y="1007.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.02%)</title><rect x="15.4812%" y="981" width="0.0157%" height="15" fill="rgb(241,98,45)"/><text x="15.7312%" y="991.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (1 samples, 0.02%)</title><rect x="15.4812%" y="965" width="0.0157%" height="15" fill="rgb(254,28,30)"/><text x="15.7312%" y="975.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.02%)</title><rect x="15.4812%" y="949" width="0.0157%" height="15" fill="rgb(241,142,54)"/><text x="15.7312%" y="959.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.02%)</title><rect x="15.4812%" y="933" width="0.0157%" height="15" fill="rgb(222,85,15)"/><text x="15.7312%" y="943.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.02%)</title><rect x="15.4812%" y="917" width="0.0157%" height="15" fill="rgb(210,85,47)"/><text x="15.7312%" y="927.50"></text></g><g><title>SkyLight`CGSEventLogEvent (2 samples, 0.03%)</title><rect x="15.4812%" y="1029" width="0.0314%" height="15" fill="rgb(224,206,25)"/><text x="15.7312%" y="1039.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (1 samples, 0.02%)</title><rect x="15.4969%" y="1013" width="0.0157%" height="15" fill="rgb(243,201,19)"/><text x="15.7469%" y="1023.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (1 samples, 0.02%)</title><rect x="15.4969%" y="997" width="0.0157%" height="15" fill="rgb(236,59,4)"/><text x="15.7469%" y="1007.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.02%)</title><rect x="15.4969%" y="981" width="0.0157%" height="15" fill="rgb(254,179,45)"/><text x="15.7469%" y="991.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (1 samples, 0.02%)</title><rect x="15.4969%" y="965" width="0.0157%" height="15" fill="rgb(226,14,10)"/><text x="15.7469%" y="975.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.02%)</title><rect x="15.4969%" y="949" width="0.0157%" height="15" fill="rgb(244,27,41)"/><text x="15.7469%" y="959.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.02%)</title><rect x="15.4969%" y="933" width="0.0157%" height="15" fill="rgb(235,35,32)"/><text x="15.7469%" y="943.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.02%)</title><rect x="15.4969%" y="917" width="0.0157%" height="15" fill="rgb(218,68,31)"/><text x="15.7469%" y="927.50"></text></g><g><title>SkyLight`SLEventSetIntegerValueField (2 samples, 0.03%)</title><rect x="15.5283%" y="981" width="0.0314%" height="15" fill="rgb(207,120,37)"/><text x="15.7783%" y="991.50"></text></g><g><title>SkyLight`CGSEventAppendixCreate (1 samples, 0.02%)</title><rect x="15.5440%" y="965" width="0.0157%" height="15" fill="rgb(227,98,0)"/><text x="15.7940%" y="975.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (1 samples, 0.02%)</title><rect x="15.5440%" y="949" width="0.0157%" height="15" fill="rgb(207,7,3)"/><text x="15.7940%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="15.5440%" y="933" width="0.0157%" height="15" fill="rgb(206,98,19)"/><text x="15.7940%" y="943.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (1 samples, 0.02%)</title><rect x="15.5597%" y="981" width="0.0157%" height="15" fill="rgb(217,5,26)"/><text x="15.8097%" y="991.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.02%)</title><rect x="15.5597%" y="965" width="0.0157%" height="15" fill="rgb(235,190,38)"/><text x="15.8097%" y="975.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="15.5754%" y="981" width="0.0157%" height="15" fill="rgb(247,86,24)"/><text x="15.8254%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="15.5754%" y="965" width="0.0157%" height="15" fill="rgb(205,101,16)"/><text x="15.8254%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="15.5754%" y="949" width="0.0157%" height="15" fill="rgb(246,168,33)"/><text x="15.8254%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="15.5754%" y="933" width="0.0157%" height="15" fill="rgb(231,114,1)"/><text x="15.8254%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="15.5754%" y="917" width="0.0157%" height="15" fill="rgb(207,184,53)"/><text x="15.8254%" y="927.50"></text></g><g><title>SkyLight`SLEventCreateFromDataAndSource (7 samples, 0.11%)</title><rect x="15.5126%" y="997" width="0.1099%" height="15" fill="rgb(224,95,51)"/><text x="15.7626%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="15.5911%" y="981" width="0.0314%" height="15" fill="rgb(212,188,45)"/><text x="15.8411%" y="991.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (8 samples, 0.13%)</title><rect x="15.5126%" y="1013" width="0.1256%" height="15" fill="rgb(223,154,38)"/><text x="15.7626%" y="1023.50"></text></g><g><title>SkyLight`handle_decoded_event(SLSEventRecord*, void*) (1 samples, 0.02%)</title><rect x="15.6225%" y="997" width="0.0157%" height="15" fill="rgb(251,22,52)"/><text x="15.8725%" y="1007.50"></text></g><g><title>SkyLight`CGSEventQueueEnqueueEvent (1 samples, 0.02%)</title><rect x="15.6225%" y="981" width="0.0157%" height="15" fill="rgb(229,209,22)"/><text x="15.8725%" y="991.50"></text></g><g><title>SkyLight`CGSDeepCopyEventRecord (1 samples, 0.02%)</title><rect x="15.6225%" y="965" width="0.0157%" height="15" fill="rgb(234,138,34)"/><text x="15.8725%" y="975.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (1 samples, 0.02%)</title><rect x="15.6225%" y="949" width="0.0157%" height="15" fill="rgb(212,95,11)"/><text x="15.8725%" y="959.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.02%)</title><rect x="15.6225%" y="933" width="0.0157%" height="15" fill="rgb(240,179,47)"/><text x="15.8725%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="15.6225%" y="917" width="0.0157%" height="15" fill="rgb(240,163,11)"/><text x="15.8725%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="15.6225%" y="901" width="0.0157%" height="15" fill="rgb(236,37,12)"/><text x="15.8725%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="15.6225%" y="885" width="0.0157%" height="15" fill="rgb(232,164,16)"/><text x="15.8725%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="15.6225%" y="869" width="0.0157%" height="15" fill="rgb(244,205,15)"/><text x="15.8725%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.02%)</title><rect x="15.6382%" y="1013" width="0.0157%" height="15" fill="rgb(223,117,47)"/><text x="15.8882%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (17 samples, 0.27%)</title><rect x="15.6539%" y="1013" width="0.2669%" height="15" fill="rgb(244,107,35)"/><text x="15.9039%" y="1023.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (28 samples, 0.44%)</title><rect x="15.5126%" y="1029" width="0.4396%" height="15" fill="rgb(205,140,8)"/><text x="15.7626%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="15.9209%" y="1013" width="0.0314%" height="15" fill="rgb(228,84,46)"/><text x="16.1709%" y="1023.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (42 samples, 0.66%)</title><rect x="15.3085%" y="1141" width="0.6594%" height="15" fill="rgb(254,188,9)"/><text x="15.5585%" y="1151.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (42 samples, 0.66%)</title><rect x="15.3085%" y="1125" width="0.6594%" height="15" fill="rgb(206,112,54)"/><text x="15.5585%" y="1135.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (42 samples, 0.66%)</title><rect x="15.3085%" y="1109" width="0.6594%" height="15" fill="rgb(216,84,49)"/><text x="15.5585%" y="1119.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (42 samples, 0.66%)</title><rect x="15.3085%" y="1093" width="0.6594%" height="15" fill="rgb(214,194,35)"/><text x="15.5585%" y="1103.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (42 samples, 0.66%)</title><rect x="15.3085%" y="1077" width="0.6594%" height="15" fill="rgb(249,28,3)"/><text x="15.5585%" y="1087.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (32 samples, 0.50%)</title><rect x="15.4655%" y="1061" width="0.5024%" height="15" fill="rgb(222,56,52)"/><text x="15.7155%" y="1071.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (32 samples, 0.50%)</title><rect x="15.4655%" y="1045" width="0.5024%" height="15" fill="rgb(245,217,50)"/><text x="15.7155%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="15.9523%" y="1029" width="0.0157%" height="15" fill="rgb(213,201,24)"/><text x="16.2023%" y="1039.50"></text></g><g><title>AppKit`_NSEventThread (46 samples, 0.72%)</title><rect x="15.2614%" y="1189" width="0.7222%" height="15" fill="rgb(248,116,28)"/><text x="15.5114%" y="1199.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (46 samples, 0.72%)</title><rect x="15.2614%" y="1173" width="0.7222%" height="15" fill="rgb(219,72,43)"/><text x="15.5114%" y="1183.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (46 samples, 0.72%)</title><rect x="15.2614%" y="1157" width="0.7222%" height="15" fill="rgb(209,138,14)"/><text x="15.5114%" y="1167.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (1 samples, 0.02%)</title><rect x="15.9680%" y="1141" width="0.0157%" height="15" fill="rgb(222,18,33)"/><text x="16.2180%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="15.9680%" y="1125" width="0.0157%" height="15" fill="rgb(213,199,7)"/><text x="16.2180%" y="1135.50"></text></g><g><title>rvfm_main`&lt;rvfm_main::fm_mio::FmMemoryIO as rv_vsys::mem::MemIO&gt;::read_32_ifetch (37 samples, 0.58%)</title><rect x="15.9837%" y="1125" width="0.5809%" height="15" fill="rgb(250,110,10)"/><text x="16.2337%" y="1135.50"></text></g><g><title>rvfm_main`&lt;rvfm_main::fm_mio::FmMemoryIO as rv_vsys::mem::MemIO&gt;::write_32 (21 samples, 0.33%)</title><rect x="16.5646%" y="1125" width="0.3297%" height="15" fill="rgb(248,123,6)"/><text x="16.8146%" y="1135.50"></text></g><g><title>rvfm_main`&lt;rvfm_main::fm_interrupt_bus::FmInterruptBus as rv_vsys::interrupt::InterruptBus&gt;::poll_interrupts (5 samples, 0.08%)</title><rect x="37.8081%" y="1109" width="0.0785%" height="15" fill="rgb(206,91,31)"/><text x="38.0581%" y="1119.50"></text></g><g><title>rvfm_main`&lt;rvfm_main::fm_mio::FmMemoryIO as rv_vsys::mem::MemIO&gt;::access_break (1 samples, 0.02%)</title><rect x="37.8866%" y="1109" width="0.0157%" height="15" fill="rgb(211,154,13)"/><text x="38.1366%" y="1119.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="37.8866%" y="1093" width="0.0157%" height="15" fill="rgb(225,148,7)"/><text x="38.1366%" y="1103.50"></text></g><g><title>rvfm_main`&lt;rvfm_main::fm_mio::FmMemoryIO as rv_vsys::mem::MemIO&gt;::read_32 (1 samples, 0.02%)</title><rect x="37.9023%" y="1109" width="0.0157%" height="15" fill="rgb(220,160,43)"/><text x="38.1523%" y="1119.50"></text></g><g><title>rvfm_main`&lt;rvfm_main::fm_mio::FmMemoryIO as rv_vsys::mem::MemIO&gt;::read_32_ifetch (599 samples, 9.40%)</title><rect x="37.9180%" y="1109" width="9.4049%" height="15" fill="rgb(213,52,39)"/><text x="38.1680%" y="1119.50">rvfm_main`&lt;rv..</text></g><g><title>rvfm_main`core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="51.3110%" y="1093" width="0.0157%" height="15" fill="rgb(243,137,7)"/><text x="51.5610%" y="1103.50"></text></g><g><title>rvfm_main`rvfm_main::fm_mio::FmMemoryIO::ram_sync_write (164 samples, 2.57%)</title><rect x="51.3267%" y="1093" width="2.5750%" height="15" fill="rgb(230,79,13)"/><text x="51.5767%" y="1103.50">rv..</text></g><g><title>rvfm_main`core::ptr::drop_in_place (2 samples, 0.03%)</title><rect x="53.8703%" y="1077" width="0.0314%" height="15" fill="rgb(247,105,23)"/><text x="54.1203%" y="1087.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (1 samples, 0.02%)</title><rect x="53.8860%" y="1061" width="0.0157%" height="15" fill="rgb(223,179,41)"/><text x="54.1360%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.02%)</title><rect x="53.8860%" y="1045" width="0.0157%" height="15" fill="rgb(218,9,34)"/><text x="54.1360%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.06%)</title><rect x="53.9017%" y="1029" width="0.0628%" height="15" fill="rgb(222,106,8)"/><text x="54.1517%" y="1039.50"></text></g><g><title>rvfm_main`&lt;rvfm_main::fm_mio::FmMemoryIO as rv_vsys::mem::MemIO&gt;::write_32 (424 samples, 6.66%)</title><rect x="47.3230%" y="1109" width="6.6572%" height="15" fill="rgb(211,220,0)"/><text x="47.5730%" y="1119.50">rvfm_main..</text></g><g><title>rvfm_main`rvfm_main::gpu::GpuPeripheralInterface::write_u32 (5 samples, 0.08%)</title><rect x="53.9017%" y="1093" width="0.0785%" height="15" fill="rgb(229,52,16)"/><text x="54.1517%" y="1103.50"></text></g><g><title>rvfm_main`std::sync::mpsc::Sender&lt;T&gt;::send (5 samples, 0.08%)</title><rect x="53.9017%" y="1077" width="0.0785%" height="15" fill="rgb(212,155,18)"/><text x="54.1517%" y="1087.50"></text></g><g><title>rvfm_main`std::sync::mpsc::shared::Packet&lt;T&gt;::send (5 samples, 0.08%)</title><rect x="53.9017%" y="1061" width="0.0785%" height="15" fill="rgb(242,21,14)"/><text x="54.1517%" y="1071.50"></text></g><g><title>rvfm_main`std::sync::mpsc::blocking::SignalToken::signal (5 samples, 0.08%)</title><rect x="53.9017%" y="1045" width="0.0785%" height="15" fill="rgb(222,19,48)"/><text x="54.1517%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.02%)</title><rect x="53.9645%" y="1029" width="0.0157%" height="15" fill="rgb(232,45,27)"/><text x="54.2145%" y="1039.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (1 samples, 0.02%)</title><rect x="53.9645%" y="1013" width="0.0157%" height="15" fill="rgb(249,103,42)"/><text x="54.2145%" y="1023.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (1 samples, 0.02%)</title><rect x="54.0587%" y="1093" width="0.0157%" height="15" fill="rgb(246,81,33)"/><text x="54.3087%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.03%)</title><rect x="54.0744%" y="1093" width="0.0314%" height="15" fill="rgb(252,33,42)"/><text x="54.3244%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="54.1058%" y="1093" width="0.0157%" height="15" fill="rgb(209,212,41)"/><text x="54.3558%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="54.1215%" y="1093" width="0.0157%" height="15" fill="rgb(207,154,6)"/><text x="54.3715%" y="1103.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (1 samples, 0.02%)</title><rect x="54.1686%" y="1077" width="0.0157%" height="15" fill="rgb(223,64,47)"/><text x="54.4186%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.02%)</title><rect x="54.1686%" y="1061" width="0.0157%" height="15" fill="rgb(211,161,38)"/><text x="54.4186%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.02%)</title><rect x="54.1686%" y="1045" width="0.0157%" height="15" fill="rgb(219,138,40)"/><text x="54.4186%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__gettimeofday (13 samples, 0.20%)</title><rect x="54.1843%" y="1077" width="0.2041%" height="15" fill="rgb(241,228,46)"/><text x="54.4343%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (113 samples, 1.77%)</title><rect x="54.3884%" y="1077" width="1.7742%" height="15" fill="rgb(223,209,38)"/><text x="54.6384%" y="1087.50">l..</text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (3 samples, 0.05%)</title><rect x="56.1627%" y="1077" width="0.0471%" height="15" fill="rgb(236,164,45)"/><text x="56.4127%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.03%)</title><rect x="56.2098%" y="1077" width="0.0314%" height="15" fill="rgb(231,15,5)"/><text x="56.4598%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (1 samples, 0.02%)</title><rect x="56.3197%" y="1061" width="0.0157%" height="15" fill="rgb(252,35,15)"/><text x="56.5697%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="56.3354%" y="1061" width="0.0157%" height="15" fill="rgb(248,181,18)"/><text x="56.5854%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.02%)</title><rect x="56.3354%" y="1045" width="0.0157%" height="15" fill="rgb(233,39,42)"/><text x="56.5854%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (9 samples, 0.14%)</title><rect x="56.2412%" y="1077" width="0.1413%" height="15" fill="rgb(238,110,33)"/><text x="56.4912%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_testcancel (2 samples, 0.03%)</title><rect x="56.3511%" y="1061" width="0.0314%" height="15" fill="rgb(233,195,10)"/><text x="56.6011%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_testcancel (1 samples, 0.02%)</title><rect x="56.3825%" y="1077" width="0.0157%" height="15" fill="rgb(254,105,3)"/><text x="56.6325%" y="1087.50"></text></g><g><title>rvfm_main`parking_lot::condvar::Condvar::wait_until_internal (145 samples, 2.28%)</title><rect x="54.1372%" y="1093" width="2.2767%" height="15" fill="rgb(221,225,9)"/><text x="54.3872%" y="1103.50">r..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="56.3982%" y="1077" width="0.0157%" height="15" fill="rgb(224,227,45)"/><text x="56.6482%" y="1087.50"></text></g><g><title>rvfm_main`parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (1 samples, 0.02%)</title><rect x="56.4139%" y="1093" width="0.0157%" height="15" fill="rgb(229,198,43)"/><text x="56.6639%" y="1103.50"></text></g><g><title>rvfm_main`rv_vsys::cpu::CpuWakeupHandle::cpu_wait (157 samples, 2.47%)</title><rect x="53.9802%" y="1109" width="2.4651%" height="15" fill="rgb(206,209,35)"/><text x="54.2302%" y="1119.50">rv..</text></g><g><title>rvfm_main`std::time::Instant::now (1 samples, 0.02%)</title><rect x="56.4296%" y="1093" width="0.0157%" height="15" fill="rgb(245,195,53)"/><text x="56.6796%" y="1103.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::b_imm_signed (124 samples, 1.95%)</title><rect x="56.4453%" y="1109" width="1.9469%" height="15" fill="rgb(240,92,26)"/><text x="56.6953%" y="1119.50">r..</text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::funct3_branch (56 samples, 0.88%)</title><rect x="58.3922%" y="1109" width="0.8793%" height="15" fill="rgb(207,40,23)"/><text x="58.6422%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::funct3_op_imm (16 samples, 0.25%)</title><rect x="59.2715%" y="1109" width="0.2512%" height="15" fill="rgb(223,111,35)"/><text x="59.5215%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::funct3_store (17 samples, 0.27%)</title><rect x="59.5227%" y="1109" width="0.2669%" height="15" fill="rgb(229,147,28)"/><text x="59.7727%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::i_imm_signed (37 samples, 0.58%)</title><rect x="59.7896%" y="1109" width="0.5809%" height="15" fill="rgb(211,29,28)"/><text x="60.0396%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::new (42 samples, 0.66%)</title><rect x="60.3705%" y="1109" width="0.6594%" height="15" fill="rgb(228,72,33)"/><text x="60.6205%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::op (342 samples, 5.37%)</title><rect x="61.0300%" y="1109" width="5.3698%" height="15" fill="rgb(205,214,31)"/><text x="61.2800%" y="1119.50">rvfm_ma..</text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::rd (8 samples, 0.13%)</title><rect x="66.3997%" y="1109" width="0.1256%" height="15" fill="rgb(224,111,15)"/><text x="66.6497%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::rs1 (56 samples, 0.88%)</title><rect x="66.5254%" y="1109" width="0.8793%" height="15" fill="rgb(253,21,26)"/><text x="66.7754%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::rs2 (39 samples, 0.61%)</title><rect x="67.4046%" y="1109" width="0.6123%" height="15" fill="rgb(245,139,43)"/><text x="67.6546%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::s_imm_signed (58 samples, 0.91%)</title><rect x="68.0170%" y="1109" width="0.9107%" height="15" fill="rgb(252,170,7)"/><text x="68.2670%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::cpu::Cpu&lt;MIO,IntBus&gt;::run_loop (3,334 samples, 52.35%)</title><rect x="16.8943%" y="1125" width="52.3473%" height="15" fill="rgb(231,118,14)"/><text x="17.1443%" y="1135.50">rvfm_main`rv_vsys::cpu::Cpu&lt;MIO,IntBus&gt;::run_loop</text></g><g><title>rvfm_main`rvfm_main::fm_mio::FmMemoryIO::ram_sync_write (20 samples, 0.31%)</title><rect x="68.9276%" y="1109" width="0.3140%" height="15" fill="rgb(238,83,0)"/><text x="69.1776%" y="1119.50"></text></g><g><title>rvfm_main`rv_vsys::cpu::CpuWakeupHandle::cpu_wait (1 samples, 0.02%)</title><rect x="69.2416%" y="1125" width="0.0157%" height="15" fill="rgb(221,39,39)"/><text x="69.4916%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::b_imm_signed (22 samples, 0.35%)</title><rect x="69.2573%" y="1125" width="0.3454%" height="15" fill="rgb(222,119,46)"/><text x="69.5073%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::funct3_branch (17 samples, 0.27%)</title><rect x="69.6028%" y="1125" width="0.2669%" height="15" fill="rgb(222,165,49)"/><text x="69.8528%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::funct3_op_imm (24 samples, 0.38%)</title><rect x="69.8697%" y="1125" width="0.3768%" height="15" fill="rgb(219,113,52)"/><text x="70.1197%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::funct3_store (39 samples, 0.61%)</title><rect x="70.2465%" y="1125" width="0.6123%" height="15" fill="rgb(214,7,15)"/><text x="70.4965%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::i_imm_signed (10 samples, 0.16%)</title><rect x="70.8588%" y="1125" width="0.1570%" height="15" fill="rgb(235,32,4)"/><text x="71.1088%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::new (86 samples, 1.35%)</title><rect x="71.0159%" y="1125" width="1.3503%" height="15" fill="rgb(238,90,54)"/><text x="71.2659%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::op (23 samples, 0.36%)</title><rect x="72.3661%" y="1125" width="0.3611%" height="15" fill="rgb(213,208,19)"/><text x="72.6161%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::rd (22 samples, 0.35%)</title><rect x="72.7273%" y="1125" width="0.3454%" height="15" fill="rgb(233,156,4)"/><text x="72.9773%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::rs1 (73 samples, 1.15%)</title><rect x="73.0727%" y="1125" width="1.1462%" height="15" fill="rgb(207,194,5)"/><text x="73.3227%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::rs2 (53 samples, 0.83%)</title><rect x="74.2189%" y="1125" width="0.8322%" height="15" fill="rgb(206,111,30)"/><text x="74.4689%" y="1135.50"></text></g><g><title>rvfm_main`rv_vsys::opcode::Opcode::s_imm_signed (32 samples, 0.50%)</title><rect x="75.0510%" y="1125" width="0.5024%" height="15" fill="rgb(243,70,54)"/><text x="75.3010%" y="1135.50"></text></g><g><title>rvfm_main`rvfm_main::application_core::ApplicationCore::run (3,795 samples, 59.59%)</title><rect x="15.9837%" y="1141" width="59.5855%" height="15" fill="rgb(242,28,8)"/><text x="16.2337%" y="1151.50">rvfm_main`rvfm_main::application_core::ApplicationCore::run</text></g><g><title>rvfm_main`std::time::Instant::now (1 samples, 0.02%)</title><rect x="75.5535%" y="1125" width="0.0157%" height="15" fill="rgb(219,106,18)"/><text x="75.8035%" y="1135.50"></text></g><g><title>CoreFoundation`-[__NSCFString cStringUsingEncoding:] (1 samples, 0.02%)</title><rect x="75.6634%" y="1061" width="0.0157%" height="15" fill="rgb(244,222,10)"/><text x="75.9134%" y="1071.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (1 samples, 0.02%)</title><rect x="75.6634%" y="1045" width="0.0157%" height="15" fill="rgb(236,179,52)"/><text x="75.9134%" y="1055.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (2 samples, 0.03%)</title><rect x="75.6634%" y="1077" width="0.0314%" height="15" fill="rgb(213,23,39)"/><text x="75.9134%" y="1087.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel setLabel:] (1 samples, 0.02%)</title><rect x="75.6791%" y="1061" width="0.0157%" height="15" fill="rgb(238,48,10)"/><text x="75.9291%" y="1071.50"></text></g><g><title>CoreFoundation`_CFNonObjCStringCreateCopy (1 samples, 0.02%)</title><rect x="75.6791%" y="1045" width="0.0157%" height="15" fill="rgb(251,196,23)"/><text x="75.9291%" y="1055.50"></text></g><g><title>Foundation`+[NSString allocWithZone:] (1 samples, 0.02%)</title><rect x="75.6948%" y="1061" width="0.0157%" height="15" fill="rgb(250,152,24)"/><text x="75.9448%" y="1071.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (3 samples, 0.05%)</title><rect x="75.6948%" y="1077" width="0.0471%" height="15" fill="rgb(209,150,17)"/><text x="75.9448%" y="1087.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (2 samples, 0.03%)</title><rect x="75.7105%" y="1061" width="0.0314%" height="15" fill="rgb(234,202,34)"/><text x="75.9605%" y="1071.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (2 samples, 0.03%)</title><rect x="75.7105%" y="1045" width="0.0314%" height="15" fill="rgb(253,148,53)"/><text x="75.9605%" y="1055.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (2 samples, 0.03%)</title><rect x="75.7105%" y="1029" width="0.0314%" height="15" fill="rgb(218,129,16)"/><text x="75.9605%" y="1039.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.02%)</title><rect x="75.7262%" y="1013" width="0.0157%" height="15" fill="rgb(216,85,19)"/><text x="75.9762%" y="1023.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.03%)</title><rect x="75.7419%" y="1013" width="0.0314%" height="15" fill="rgb(235,228,7)"/><text x="75.9919%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="75.7576%" y="997" width="0.0157%" height="15" fill="rgb(245,175,0)"/><text x="76.0076%" y="1007.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.05%)</title><rect x="75.7419%" y="1029" width="0.0471%" height="15" fill="rgb(208,168,36)"/><text x="75.9919%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (1 samples, 0.02%)</title><rect x="75.7733%" y="1013" width="0.0157%" height="15" fill="rgb(246,171,24)"/><text x="76.0233%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.06%)</title><rect x="75.7419%" y="1045" width="0.0628%" height="15" fill="rgb(215,142,24)"/><text x="75.9919%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="75.7890%" y="1029" width="0.0157%" height="15" fill="rgb(250,187,7)"/><text x="76.0390%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="75.7890%" y="1013" width="0.0157%" height="15" fill="rgb(228,66,33)"/><text x="76.0390%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="75.7890%" y="997" width="0.0157%" height="15" fill="rgb(234,215,21)"/><text x="76.0390%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="75.7890%" y="981" width="0.0157%" height="15" fill="rgb(222,191,20)"/><text x="76.0390%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="75.7890%" y="965" width="0.0157%" height="15" fill="rgb(245,79,54)"/><text x="76.0390%" y="975.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="75.8047%" y="1045" width="0.0157%" height="15" fill="rgb(240,10,37)"/><text x="76.0547%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="75.8047%" y="1029" width="0.0157%" height="15" fill="rgb(214,192,32)"/><text x="76.0547%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="75.8047%" y="1013" width="0.0157%" height="15" fill="rgb(209,36,54)"/><text x="76.0547%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="75.8047%" y="997" width="0.0157%" height="15" fill="rgb(220,10,11)"/><text x="76.0547%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="75.8047%" y="981" width="0.0157%" height="15" fill="rgb(221,106,17)"/><text x="76.0547%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="75.8047%" y="965" width="0.0157%" height="15" fill="rgb(251,142,44)"/><text x="76.0547%" y="975.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (6 samples, 0.09%)</title><rect x="75.7419%" y="1061" width="0.0942%" height="15" fill="rgb(238,13,15)"/><text x="75.9919%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="75.8204%" y="1045" width="0.0157%" height="15" fill="rgb(208,107,27)"/><text x="76.0704%" y="1055.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (12 samples, 0.19%)</title><rect x="75.6634%" y="1093" width="0.1884%" height="15" fill="rgb(205,136,37)"/><text x="75.9134%" y="1103.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (7 samples, 0.11%)</title><rect x="75.7419%" y="1077" width="0.1099%" height="15" fill="rgb(250,205,27)"/><text x="75.9919%" y="1087.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="75.8361%" y="1061" width="0.0157%" height="15" fill="rgb(210,80,43)"/><text x="76.0861%" y="1071.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::finish (1 samples, 0.02%)</title><rect x="75.8518%" y="1093" width="0.0157%" height="15" fill="rgb(247,160,36)"/><text x="76.1018%" y="1103.50"></text></g><g><title>Metal`-[_MTLCommandQueue enqueueCommandBuffer:] (1 samples, 0.02%)</title><rect x="75.8675%" y="1029" width="0.0157%" height="15" fill="rgb(234,13,49)"/><text x="76.1175%" y="1039.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (1 samples, 0.02%)</title><rect x="75.8675%" y="1013" width="0.0157%" height="15" fill="rgb(234,122,0)"/><text x="76.1175%" y="1023.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (2 samples, 0.03%)</title><rect x="75.8675%" y="1045" width="0.0314%" height="15" fill="rgb(207,146,38)"/><text x="76.1175%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_retain (1 samples, 0.02%)</title><rect x="75.8832%" y="1029" width="0.0157%" height="15" fill="rgb(207,177,25)"/><text x="76.1332%" y="1039.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageFinalizeShmemHeader (2 samples, 0.03%)</title><rect x="75.8989%" y="1045" width="0.0314%" height="15" fill="rgb(211,178,42)"/><text x="76.1489%" y="1055.50"></text></g><g><title>Metal`_mtlIOAccelCommandBufferStorageBeginSegmentList (1 samples, 0.02%)</title><rect x="75.9146%" y="1029" width="0.0157%" height="15" fill="rgb(230,69,54)"/><text x="76.1646%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (1 samples, 0.02%)</title><rect x="75.9303%" y="1045" width="0.0157%" height="15" fill="rgb(214,135,41)"/><text x="76.1803%" y="1055.50"></text></g><g><title>libdispatch.dylib`dispatch_group_enter (1 samples, 0.02%)</title><rect x="75.9460%" y="1045" width="0.0157%" height="15" fill="rgb(237,67,25)"/><text x="76.1960%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (7 samples, 0.11%)</title><rect x="75.8675%" y="1077" width="0.1099%" height="15" fill="rgb(222,189,50)"/><text x="76.1175%" y="1087.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (7 samples, 0.11%)</title><rect x="75.8675%" y="1061" width="0.1099%" height="15" fill="rgb(245,148,34)"/><text x="76.1175%" y="1071.50"></text></g><g><title>libdispatch.dylib`dispatch_source_merge_data (1 samples, 0.02%)</title><rect x="75.9617%" y="1045" width="0.0157%" height="15" fill="rgb(222,29,6)"/><text x="76.2117%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (1 samples, 0.02%)</title><rect x="75.9774%" y="1077" width="0.0157%" height="15" fill="rgb(221,189,43)"/><text x="76.2274%" y="1087.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.02%)</title><rect x="75.9774%" y="1061" width="0.0157%" height="15" fill="rgb(207,36,27)"/><text x="76.2274%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="75.9774%" y="1045" width="0.0157%" height="15" fill="rgb(217,90,24)"/><text x="76.2274%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="75.9774%" y="1029" width="0.0157%" height="15" fill="rgb(224,66,35)"/><text x="76.2274%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="75.9774%" y="1013" width="0.0157%" height="15" fill="rgb(221,13,50)"/><text x="76.2274%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="75.9774%" y="997" width="0.0157%" height="15" fill="rgb(236,68,49)"/><text x="76.2274%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="75.9774%" y="981" width="0.0157%" height="15" fill="rgb(229,146,28)"/><text x="76.2274%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="75.9774%" y="965" width="0.0157%" height="15" fill="rgb(225,31,38)"/><text x="76.2274%" y="975.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (1 samples, 0.02%)</title><rect x="75.9931%" y="1077" width="0.0157%" height="15" fill="rgb(250,208,3)"/><text x="76.2431%" y="1087.50"></text></g><g><title>libobjc.A.dylib`objc_autorelease (1 samples, 0.02%)</title><rect x="75.9931%" y="1061" width="0.0157%" height="15" fill="rgb(246,54,23)"/><text x="76.2431%" y="1071.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (2 samples, 0.03%)</title><rect x="76.0088%" y="1077" width="0.0314%" height="15" fill="rgb(243,76,11)"/><text x="76.2588%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="76.0088%" y="1061" width="0.0314%" height="15" fill="rgb(245,21,50)"/><text x="76.2588%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.03%)</title><rect x="76.0088%" y="1045" width="0.0314%" height="15" fill="rgb(228,9,43)"/><text x="76.2588%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="76.0088%" y="1029" width="0.0314%" height="15" fill="rgb(208,100,47)"/><text x="76.2588%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.03%)</title><rect x="76.0088%" y="1013" width="0.0314%" height="15" fill="rgb(232,26,8)"/><text x="76.2588%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.03%)</title><rect x="76.0088%" y="997" width="0.0314%" height="15" fill="rgb(216,166,38)"/><text x="76.2588%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="76.0245%" y="981" width="0.0157%" height="15" fill="rgb(251,202,51)"/><text x="76.2745%" y="991.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit (12 samples, 0.19%)</title><rect x="75.8675%" y="1093" width="0.1884%" height="15" fill="rgb(254,216,34)"/><text x="76.1175%" y="1103.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (1 samples, 0.02%)</title><rect x="76.0402%" y="1077" width="0.0157%" height="15" fill="rgb(251,32,27)"/><text x="76.2902%" y="1087.50"></text></g><g><title>libobjc.A.dylib` (1 samples, 0.02%)</title><rect x="76.0402%" y="1061" width="0.0157%" height="15" fill="rgb(208,127,28)"/><text x="76.2902%" y="1071.50"></text></g><g><title>rvfm_main`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="76.0559%" y="1093" width="0.0157%" height="15" fill="rgb(224,137,22)"/><text x="76.3059%" y="1103.50"></text></g><g><title>rvfm_main`DYLD-STUB$$_Block_copy (1 samples, 0.02%)</title><rect x="76.0716%" y="1093" width="0.0157%" height="15" fill="rgb(254,70,32)"/><text x="76.3216%" y="1103.50"></text></g><g><title>rvfm_main`DYLD-STUB$$objc_msgSend (1 samples, 0.02%)</title><rect x="76.0873%" y="1093" width="0.0157%" height="15" fill="rgb(229,75,37)"/><text x="76.3373%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="76.1030%" y="1029" width="0.0157%" height="15" fill="rgb(252,64,23)"/><text x="76.3530%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="76.1030%" y="1013" width="0.0157%" height="15" fill="rgb(232,162,48)"/><text x="76.3530%" y="1023.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="76.1030%" y="1093" width="0.0314%" height="15" fill="rgb(246,160,12)"/><text x="76.3530%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.03%)</title><rect x="76.1030%" y="1077" width="0.0314%" height="15" fill="rgb(247,166,0)"/><text x="76.3530%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.03%)</title><rect x="76.1030%" y="1061" width="0.0314%" height="15" fill="rgb(249,219,21)"/><text x="76.3530%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.03%)</title><rect x="76.1030%" y="1045" width="0.0314%" height="15" fill="rgb(205,209,3)"/><text x="76.3530%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="76.1187%" y="1029" width="0.0157%" height="15" fill="rgb(243,44,1)"/><text x="76.3687%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="76.1187%" y="1013" width="0.0157%" height="15" fill="rgb(206,159,16)"/><text x="76.3687%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="76.1187%" y="997" width="0.0157%" height="15" fill="rgb(244,77,30)"/><text x="76.3687%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="76.1187%" y="981" width="0.0157%" height="15" fill="rgb(218,69,12)"/><text x="76.3687%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.02%)</title><rect x="76.1658%" y="1061" width="0.0157%" height="15" fill="rgb(212,87,7)"/><text x="76.4158%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (9 samples, 0.14%)</title><rect x="76.1815%" y="1061" width="0.1413%" height="15" fill="rgb(245,114,25)"/><text x="76.4315%" y="1071.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (13 samples, 0.20%)</title><rect x="76.1344%" y="1093" width="0.2041%" height="15" fill="rgb(210,61,42)"/><text x="76.3844%" y="1103.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::wait_for_readers (11 samples, 0.17%)</title><rect x="76.1658%" y="1077" width="0.1727%" height="15" fill="rgb(211,52,33)"/><text x="76.4158%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`sched_yield (1 samples, 0.02%)</title><rect x="76.3228%" y="1061" width="0.0157%" height="15" fill="rgb(234,58,33)"/><text x="76.5728%" y="1071.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (7 samples, 0.11%)</title><rect x="76.3385%" y="1093" width="0.1099%" height="15" fill="rgb(220,115,36)"/><text x="76.5885%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (7 samples, 0.11%)</title><rect x="76.3385%" y="1077" width="0.1099%" height="15" fill="rgb(243,153,54)"/><text x="76.5885%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.02%)</title><rect x="76.4484%" y="1077" width="0.0157%" height="15" fill="rgb(251,47,18)"/><text x="76.6984%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="76.4798%" y="1045" width="0.0157%" height="15" fill="rgb(242,102,42)"/><text x="76.7298%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="76.4798%" y="1029" width="0.0157%" height="15" fill="rgb(234,31,38)"/><text x="76.7298%" y="1039.50"></text></g><g><title>rvfm_main`wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (4 samples, 0.06%)</title><rect x="76.4484%" y="1093" width="0.0628%" height="15" fill="rgb(221,117,51)"/><text x="76.6984%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (3 samples, 0.05%)</title><rect x="76.4641%" y="1077" width="0.0471%" height="15" fill="rgb(212,20,18)"/><text x="76.7141%" y="1087.50"></text></g><g><title>rvfm_main`&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::merge (3 samples, 0.05%)</title><rect x="76.4641%" y="1061" width="0.0471%" height="15" fill="rgb(245,133,36)"/><text x="76.7141%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="76.4955%" y="1045" width="0.0157%" height="15" fill="rgb(212,6,19)"/><text x="76.7455%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="76.4955%" y="1029" width="0.0157%" height="15" fill="rgb(218,1,36)"/><text x="76.7455%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="76.4955%" y="1013" width="0.0157%" height="15" fill="rgb(246,84,54)"/><text x="76.7455%" y="1023.50"></text></g><g><title>rvfm_main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="76.5112%" y="1077" width="0.0314%" height="15" fill="rgb(242,110,6)"/><text x="76.7612%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="76.5269%" y="1061" width="0.0157%" height="15" fill="rgb(214,47,5)"/><text x="76.7769%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="76.5426%" y="1061" width="0.0157%" height="15" fill="rgb(218,159,25)"/><text x="76.7926%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="76.5583%" y="1061" width="0.0157%" height="15" fill="rgb(215,211,28)"/><text x="76.8083%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="76.5583%" y="1045" width="0.0157%" height="15" fill="rgb(238,59,32)"/><text x="76.8083%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="76.5740%" y="1061" width="0.0157%" height="15" fill="rgb(226,82,3)"/><text x="76.8240%" y="1071.50"></text></g><g><title>rvfm_main`wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::after_submit (6 samples, 0.09%)</title><rect x="76.5112%" y="1093" width="0.0942%" height="15" fill="rgb(240,164,32)"/><text x="76.7612%" y="1103.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (4 samples, 0.06%)</title><rect x="76.5426%" y="1077" width="0.0628%" height="15" fill="rgb(232,46,7)"/><text x="76.7926%" y="1087.50"></text></g><g><title>rvfm_main`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="76.5897%" y="1061" width="0.0157%" height="15" fill="rgb(229,129,53)"/><text x="76.8397%" y="1071.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::reset (2 samples, 0.03%)</title><rect x="76.6211%" y="1077" width="0.0314%" height="15" fill="rgb(234,188,29)"/><text x="76.8711%" y="1087.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::CommandBufferInner::reset (1 samples, 0.02%)</title><rect x="76.6368%" y="1061" width="0.0157%" height="15" fill="rgb(246,141,4)"/><text x="76.8868%" y="1071.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (1 samples, 0.02%)</title><rect x="76.6368%" y="1045" width="0.0157%" height="15" fill="rgb(229,23,39)"/><text x="76.8868%" y="1055.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (1 samples, 0.02%)</title><rect x="76.6368%" y="1029" width="0.0157%" height="15" fill="rgb(206,12,3)"/><text x="76.8868%" y="1039.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (1 samples, 0.02%)</title><rect x="76.6368%" y="1013" width="0.0157%" height="15" fill="rgb(252,226,20)"/><text x="76.8868%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.02%)</title><rect x="76.6368%" y="997" width="0.0157%" height="15" fill="rgb(216,123,35)"/><text x="76.8868%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.02%)</title><rect x="76.6368%" y="981" width="0.0157%" height="15" fill="rgb(212,68,40)"/><text x="76.8868%" y="991.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::get_fence_status (1 samples, 0.02%)</title><rect x="76.6525%" y="1077" width="0.0157%" height="15" fill="rgb(254,125,32)"/><text x="76.9025%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.02%)</title><rect x="76.6682%" y="1077" width="0.0157%" height="15" fill="rgb(253,97,22)"/><text x="76.9182%" y="1087.50"></text></g><g><title>rvfm_main`gfx_descriptor::allocator::DescriptorAllocator&lt;B&gt;::cleanup (1 samples, 0.02%)</title><rect x="76.6682%" y="1061" width="0.0157%" height="15" fill="rgb(241,101,14)"/><text x="76.9182%" y="1071.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (1 samples, 0.02%)</title><rect x="76.6839%" y="1077" width="0.0157%" height="15" fill="rgb(238,103,29)"/><text x="76.9339%" y="1087.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="76.6839%" y="1061" width="0.0157%" height="15" fill="rgb(233,195,47)"/><text x="76.9339%" y="1071.50"></text></g><g><title>rvfm_main`wgpu_core::device::Device&lt;B&gt;::maintain (7 samples, 0.11%)</title><rect x="76.6054%" y="1093" width="0.1099%" height="15" fill="rgb(246,218,30)"/><text x="76.8554%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (1 samples, 0.02%)</title><rect x="76.6996%" y="1077" width="0.0157%" height="15" fill="rgb(219,145,47)"/><text x="76.9496%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (1 samples, 0.02%)</title><rect x="76.6996%" y="1061" width="0.0157%" height="15" fill="rgb(243,12,26)"/><text x="76.9496%" y="1071.50"></text></g><g><title>rvfm_main`&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="76.6996%" y="1045" width="0.0157%" height="15" fill="rgb(214,87,16)"/><text x="76.9496%" y="1055.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (2 samples, 0.03%)</title><rect x="76.7153%" y="1093" width="0.0314%" height="15" fill="rgb(208,99,42)"/><text x="76.9653%" y="1103.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (76 samples, 1.19%)</title><rect x="75.5692%" y="1125" width="1.1933%" height="15" fill="rgb(253,99,2)"/><text x="75.8192%" y="1135.50"></text></g><g><title>rvfm_main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (76 samples, 1.19%)</title><rect x="75.5692%" y="1109" width="1.1933%" height="15" fill="rgb(220,168,23)"/><text x="75.8192%" y="1119.50"></text></g><g><title>rvfm_main`wgpu_core::track::TrackerSet::optimize (1 samples, 0.02%)</title><rect x="76.7467%" y="1093" width="0.0157%" height="15" fill="rgb(242,38,24)"/><text x="76.9967%" y="1103.50"></text></g><g><title>rvfm_main`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="76.7624%" y="1125" width="0.0157%" height="15" fill="rgb(225,182,9)"/><text x="77.0124%" y="1135.50"></text></g><g><title>rvfm_main`rvfm_main::gpu::Gpu::clear_display (1 samples, 0.02%)</title><rect x="76.7781%" y="1125" width="0.0157%" height="15" fill="rgb(243,178,37)"/><text x="77.0281%" y="1135.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (1 samples, 0.02%)</title><rect x="76.7781%" y="1109" width="0.0157%" height="15" fill="rgb(232,139,19)"/><text x="77.0281%" y="1119.50"></text></g><g><title>rvfm_main`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.02%)</title><rect x="76.7781%" y="1093" width="0.0157%" height="15" fill="rgb(225,201,24)"/><text x="77.0281%" y="1103.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin_render_pass (1 samples, 0.02%)</title><rect x="76.7781%" y="1077" width="0.0157%" height="15" fill="rgb(221,47,46)"/><text x="77.0281%" y="1087.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::next_subpass (1 samples, 0.02%)</title><rect x="76.7781%" y="1061" width="0.0157%" height="15" fill="rgb(249,23,13)"/><text x="77.0281%" y="1071.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (1 samples, 0.02%)</title><rect x="76.7781%" y="1045" width="0.0157%" height="15" fill="rgb(219,9,5)"/><text x="77.0281%" y="1055.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::CommandSink::switch_render (1 samples, 0.02%)</title><rect x="76.7781%" y="1029" width="0.0157%" height="15" fill="rgb(254,171,16)"/><text x="77.0281%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (1 samples, 0.02%)</title><rect x="76.7781%" y="1013" width="0.0157%" height="15" fill="rgb(230,171,20)"/><text x="77.0281%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (1 samples, 0.02%)</title><rect x="76.7781%" y="997" width="0.0157%" height="15" fill="rgb(210,71,41)"/><text x="77.0281%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (1 samples, 0.02%)</title><rect x="76.7781%" y="981" width="0.0157%" height="15" fill="rgb(206,173,20)"/><text x="77.0281%" y="991.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (1 samples, 0.02%)</title><rect x="76.7781%" y="965" width="0.0157%" height="15" fill="rgb(233,88,34)"/><text x="77.0281%" y="975.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateBindingTable::initNullSurfaceState (1 samples, 0.02%)</title><rect x="76.7781%" y="949" width="0.0157%" height="15" fill="rgb(223,209,46)"/><text x="77.0281%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::initialize (1 samples, 0.02%)</title><rect x="76.7781%" y="933" width="0.0157%" height="15" fill="rgb(250,43,18)"/><text x="77.0281%" y="943.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::allocateHeap (1 samples, 0.02%)</title><rect x="76.7781%" y="917" width="0.0157%" height="15" fill="rgb(208,13,10)"/><text x="77.0281%" y="927.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (1 samples, 0.02%)</title><rect x="76.7781%" y="901" width="0.0157%" height="15" fill="rgb(212,200,36)"/><text x="77.0281%" y="911.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (1 samples, 0.02%)</title><rect x="76.7781%" y="885" width="0.0157%" height="15" fill="rgb(225,90,30)"/><text x="77.0281%" y="895.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="76.7781%" y="869" width="0.0157%" height="15" fill="rgb(236,182,39)"/><text x="77.0281%" y="879.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="76.7781%" y="853" width="0.0157%" height="15" fill="rgb(212,144,35)"/><text x="77.0281%" y="863.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (1 samples, 0.02%)</title><rect x="76.7781%" y="837" width="0.0157%" height="15" fill="rgb(228,63,44)"/><text x="77.0281%" y="847.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="76.7781%" y="821" width="0.0157%" height="15" fill="rgb(228,109,6)"/><text x="77.0281%" y="831.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="76.7781%" y="805" width="0.0157%" height="15" fill="rgb(238,117,24)"/><text x="77.0281%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="76.7781%" y="789" width="0.0157%" height="15" fill="rgb(242,26,26)"/><text x="77.0281%" y="799.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelTexture initializeFastClearMCS:descPriv:texData:] (1 samples, 0.02%)</title><rect x="76.8095%" y="981" width="0.0157%" height="15" fill="rgb(221,92,48)"/><text x="77.0595%" y="991.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="76.8095%" y="965" width="0.0157%" height="15" fill="rgb(209,209,32)"/><text x="77.0595%" y="975.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="76.8095%" y="949" width="0.0157%" height="15" fill="rgb(221,70,22)"/><text x="77.0595%" y="959.50"></text></g><g><title>Metal`-[MTLIOAccelDevice currentAllocatedSize] (1 samples, 0.02%)</title><rect x="76.8095%" y="933" width="0.0157%" height="15" fill="rgb(248,145,5)"/><text x="77.0595%" y="943.50"></text></g><g><title>IOAccelerator`IOAccelSharedGetMemoryData (1 samples, 0.02%)</title><rect x="76.8095%" y="917" width="0.0157%" height="15" fill="rgb(226,116,26)"/><text x="77.0595%" y="927.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (1 samples, 0.02%)</title><rect x="76.8095%" y="901" width="0.0157%" height="15" fill="rgb(244,5,17)"/><text x="77.0595%" y="911.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="76.8095%" y="885" width="0.0157%" height="15" fill="rgb(252,159,33)"/><text x="77.0595%" y="895.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="76.8095%" y="869" width="0.0157%" height="15" fill="rgb(206,71,0)"/><text x="77.0595%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="76.8095%" y="853" width="0.0157%" height="15" fill="rgb(233,118,54)"/><text x="77.0595%" y="863.50"></text></g><g><title>rvfm_main`rvfm_main::gpu::Gpu::swap_fb (3 samples, 0.05%)</title><rect x="76.7938%" y="1125" width="0.0471%" height="15" fill="rgb(234,83,48)"/><text x="77.0438%" y="1135.50"></text></g><g><title>rvfm_main`wgpu::Device::create_texture (2 samples, 0.03%)</title><rect x="76.8095%" y="1109" width="0.0314%" height="15" fill="rgb(228,3,54)"/><text x="77.0595%" y="1119.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_texture (2 samples, 0.03%)</title><rect x="76.8095%" y="1093" width="0.0314%" height="15" fill="rgb(226,155,13)"/><text x="77.0595%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_texture (2 samples, 0.03%)</title><rect x="76.8095%" y="1077" width="0.0314%" height="15" fill="rgb(241,28,37)"/><text x="77.0595%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::device::Device&lt;B&gt;::create_texture (2 samples, 0.03%)</title><rect x="76.8095%" y="1061" width="0.0314%" height="15" fill="rgb(233,93,10)"/><text x="77.0595%" y="1071.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::bind_image_memory (2 samples, 0.03%)</title><rect x="76.8095%" y="1045" width="0.0314%" height="15" fill="rgb(225,113,19)"/><text x="77.0595%" y="1055.50"></text></g><g><title>rvfm_main`metal::device::DeviceRef::new_texture (2 samples, 0.03%)</title><rect x="76.8095%" y="1029" width="0.0314%" height="15" fill="rgb(241,2,18)"/><text x="77.0595%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelDevice newTextureWithDescriptor:] (2 samples, 0.03%)</title><rect x="76.8095%" y="1013" width="0.0314%" height="15" fill="rgb(228,207,21)"/><text x="77.0595%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (2 samples, 0.03%)</title><rect x="76.8095%" y="997" width="0.0314%" height="15" fill="rgb(213,211,35)"/><text x="77.0595%" y="1007.50"></text></g><g><title>Metal`-[MTLIOAccelTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (1 samples, 0.02%)</title><rect x="76.8252%" y="981" width="0.0157%" height="15" fill="rgb(209,83,10)"/><text x="77.0752%" y="991.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="76.8252%" y="965" width="0.0157%" height="15" fill="rgb(209,164,1)"/><text x="77.0752%" y="975.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="76.8252%" y="949" width="0.0157%" height="15" fill="rgb(213,184,43)"/><text x="77.0752%" y="959.50"></text></g><g><title>Metal`-[MTLIOAccelDevice currentAllocatedSize] (1 samples, 0.02%)</title><rect x="76.8252%" y="933" width="0.0157%" height="15" fill="rgb(231,61,34)"/><text x="77.0752%" y="943.50"></text></g><g><title>IOAccelerator`IOAccelSharedGetMemoryData (1 samples, 0.02%)</title><rect x="76.8252%" y="917" width="0.0157%" height="15" fill="rgb(235,75,3)"/><text x="77.0752%" y="927.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (1 samples, 0.02%)</title><rect x="76.8252%" y="901" width="0.0157%" height="15" fill="rgb(220,106,47)"/><text x="77.0752%" y="911.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="76.8252%" y="885" width="0.0157%" height="15" fill="rgb(210,196,33)"/><text x="77.0752%" y="895.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="76.8252%" y="869" width="0.0157%" height="15" fill="rgb(229,154,42)"/><text x="77.0752%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="76.8252%" y="853" width="0.0157%" height="15" fill="rgb(228,114,26)"/><text x="77.0752%" y="863.50"></text></g><g><title>rvfm_main`glslang::TParseContext::getDefaultPrecision (1 samples, 0.02%)</title><rect x="76.8409%" y="965" width="0.0157%" height="15" fill="rgb(208,144,1)"/><text x="77.0909%" y="975.50"></text></g><g><title>rvfm_main`glslang::TParseContextBase::renameShaderFunction(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="76.8566%" y="965" width="0.0157%" height="15" fill="rgb(239,112,37)"/><text x="77.1066%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.16%)</title><rect x="76.9666%" y="949" width="0.1570%" height="15" fill="rgb(210,96,50)"/><text x="77.2166%" y="959.50"></text></g><g><title>rvfm_main`glslang::GetThreadPoolAllocator (1 samples, 0.02%)</title><rect x="77.1236%" y="949" width="0.0157%" height="15" fill="rgb(222,178,2)"/><text x="77.3736%" y="959.50"></text></g><g><title>rvfm_main`glslang::TFunction::TFunction(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="77.1393%" y="949" width="0.0157%" height="15" fill="rgb(226,74,18)"/><text x="77.3893%" y="959.50"></text></g><g><title>rvfm_main`glslang::TFunction::addParameter (2 samples, 0.03%)</title><rect x="77.1550%" y="949" width="0.0314%" height="15" fill="rgb(225,67,54)"/><text x="77.4050%" y="959.50"></text></g><g><title>rvfm_main`glslang::TType::appendMangledName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="77.1707%" y="933" width="0.0157%" height="15" fill="rgb(251,92,32)"/><text x="77.4207%" y="943.50"></text></g><g><title>rvfm_main`glslang::TType::buildMangledName(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="77.1707%" y="917" width="0.0157%" height="15" fill="rgb(228,149,22)"/><text x="77.4207%" y="927.50"></text></g><g><title>rvfm_main`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="77.1864%" y="917" width="0.0157%" height="15" fill="rgb(243,54,13)"/><text x="77.4364%" y="927.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::insert (4 samples, 0.06%)</title><rect x="77.1864%" y="933" width="0.0628%" height="15" fill="rgb(243,180,28)"/><text x="77.4364%" y="943.50"></text></g><g><title>rvfm_main`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (3 samples, 0.05%)</title><rect x="77.2021%" y="917" width="0.0471%" height="15" fill="rgb(208,167,24)"/><text x="77.4521%" y="927.50"></text></g><g><title>rvfm_main`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt; &gt; &gt;::__find_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;(std::__1::__tree_end_node&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;*&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (3 samples, 0.05%)</title><rect x="77.2021%" y="901" width="0.0471%" height="15" fill="rgb(245,73,45)"/><text x="77.4521%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.03%)</title><rect x="77.2178%" y="885" width="0.0314%" height="15" fill="rgb(237,203,48)"/><text x="77.4678%" y="895.50"></text></g><g><title>rvfm_main`glslang::TParseContext::handleFunctionDeclarator (5 samples, 0.08%)</title><rect x="77.1864%" y="949" width="0.0785%" height="15" fill="rgb(211,197,16)"/><text x="77.4364%" y="959.50"></text></g><g><title>rvfm_main`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="77.2492%" y="933" width="0.0157%" height="15" fill="rgb(243,99,51)"/><text x="77.4992%" y="943.50"></text></g><g><title>rvfm_main`glslang::TParseContext::paramCheckFix (1 samples, 0.02%)</title><rect x="77.2649%" y="949" width="0.0157%" height="15" fill="rgb(215,123,29)"/><text x="77.5149%" y="959.50"></text></g><g><title>rvfm_main`spvtools::opt::analysis::CompositeConstant::GetComponents (1 samples, 0.02%)</title><rect x="77.2649%" y="933" width="0.0157%" height="15" fill="rgb(239,186,37)"/><text x="77.5149%" y="943.50"></text></g><g><title>rvfm_main`glslang::TPoolAllocator::allocate (1 samples, 0.02%)</title><rect x="77.2806%" y="949" width="0.0157%" height="15" fill="rgb(252,136,39)"/><text x="77.5306%" y="959.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.02%)</title><rect x="77.3120%" y="885" width="0.0157%" height="15" fill="rgb(223,213,32)"/><text x="77.5620%" y="895.50"></text></g><g><title>libsystem_c.dylib`snprintf (8 samples, 0.13%)</title><rect x="77.3120%" y="901" width="0.1256%" height="15" fill="rgb(233,115,5)"/><text x="77.5620%" y="911.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (7 samples, 0.11%)</title><rect x="77.3277%" y="885" width="0.1099%" height="15" fill="rgb(207,226,44)"/><text x="77.5777%" y="895.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (7 samples, 0.11%)</title><rect x="77.3277%" y="869" width="0.1099%" height="15" fill="rgb(208,126,0)"/><text x="77.5777%" y="879.50"></text></g><g><title>libsystem_c.dylib`__v2printf (6 samples, 0.09%)</title><rect x="77.3434%" y="853" width="0.0942%" height="15" fill="rgb(244,66,21)"/><text x="77.5934%" y="863.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (5 samples, 0.08%)</title><rect x="77.3591%" y="837" width="0.0785%" height="15" fill="rgb(222,97,12)"/><text x="77.6091%" y="847.50"></text></g><g><title>libsystem_c.dylib`__sfvwrite (1 samples, 0.02%)</title><rect x="77.4219%" y="821" width="0.0157%" height="15" fill="rgb(219,213,19)"/><text x="77.6719%" y="831.50"></text></g><g><title>rvfm_main`glslang::TPpContext::MacroExpand (2 samples, 0.03%)</title><rect x="77.4376%" y="901" width="0.0314%" height="15" fill="rgb(252,169,30)"/><text x="77.6876%" y="911.50"></text></g><g><title>rvfm_main`glslang::TStringAtomMap::getAtom (2 samples, 0.03%)</title><rect x="77.4376%" y="885" width="0.0314%" height="15" fill="rgb(206,32,51)"/><text x="77.6876%" y="895.50"></text></g><g><title>rvfm_main`std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits (2 samples, 0.03%)</title><rect x="77.4376%" y="869" width="0.0314%" height="15" fill="rgb(250,172,42)"/><text x="77.6876%" y="879.50"></text></g><g><title>rvfm_main`glslang::TInputScanner::get (1 samples, 0.02%)</title><rect x="77.5004%" y="885" width="0.0157%" height="15" fill="rgb(209,34,43)"/><text x="77.7504%" y="895.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::scan (6 samples, 0.09%)</title><rect x="77.4690%" y="901" width="0.0942%" height="15" fill="rgb(223,11,35)"/><text x="77.7190%" y="911.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::getch (3 samples, 0.05%)</title><rect x="77.5161%" y="885" width="0.0471%" height="15" fill="rgb(251,219,26)"/><text x="77.7661%" y="895.50"></text></g><g><title>rvfm_main`glslang::TInputScanner::get (3 samples, 0.05%)</title><rect x="77.5161%" y="869" width="0.0471%" height="15" fill="rgb(231,119,3)"/><text x="77.7661%" y="879.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tokenize (18 samples, 0.28%)</title><rect x="77.2963%" y="917" width="0.2826%" height="15" fill="rgb(216,97,11)"/><text x="77.5463%" y="927.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tokenPaste (1 samples, 0.02%)</title><rect x="77.5632%" y="901" width="0.0157%" height="15" fill="rgb(223,59,9)"/><text x="77.8132%" y="911.50"></text></g><g><title>rvfm_main`spvtools::opt::analysis::Constant::AsCompositeConstant (1 samples, 0.02%)</title><rect x="77.5632%" y="885" width="0.0157%" height="15" fill="rgb(233,93,31)"/><text x="77.8132%" y="895.50"></text></g><g><title>rvfm_main`(anonymous namespace)::InitializeSymbolTable(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (51 samples, 0.80%)</title><rect x="76.8409%" y="997" width="0.8008%" height="15" fill="rgb(239,81,33)"/><text x="77.0909%" y="1007.50"></text></g><g><title>rvfm_main`glslang::TParseContext::parseShaderStrings (51 samples, 0.80%)</title><rect x="76.8409%" y="981" width="0.8008%" height="15" fill="rgb(213,120,34)"/><text x="77.0909%" y="991.50"></text></g><g><title>rvfm_main`yyparse(glslang::TParseContext*) (49 samples, 0.77%)</title><rect x="76.8724%" y="965" width="0.7694%" height="15" fill="rgb(243,49,53)"/><text x="77.1224%" y="975.50"></text></g><g><title>rvfm_main`yylex(YYSTYPE*, glslang::TParseContext&amp;) (22 samples, 0.35%)</title><rect x="77.2963%" y="949" width="0.3454%" height="15" fill="rgb(247,216,33)"/><text x="77.5463%" y="959.50"></text></g><g><title>rvfm_main`glslang::TScanContext::tokenize (22 samples, 0.35%)</title><rect x="77.2963%" y="933" width="0.3454%" height="15" fill="rgb(226,26,14)"/><text x="77.5463%" y="943.50"></text></g><g><title>rvfm_main`glslang::TScanContext::identifierOrType (4 samples, 0.06%)</title><rect x="77.5789%" y="917" width="0.0628%" height="15" fill="rgb(215,49,53)"/><text x="77.8289%" y="927.50"></text></g><g><title>rvfm_main`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (4 samples, 0.06%)</title><rect x="77.5789%" y="901" width="0.0628%" height="15" fill="rgb(245,162,40)"/><text x="77.8289%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="77.6260%" y="885" width="0.0157%" height="15" fill="rgb(229,68,17)"/><text x="77.8760%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="77.6417%" y="981" width="0.0157%" height="15" fill="rgb(213,182,10)"/><text x="77.8917%" y="991.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::relateTabledBuiltins (3 samples, 0.05%)</title><rect x="77.6574%" y="981" width="0.0471%" height="15" fill="rgb(245,125,30)"/><text x="77.9074%" y="991.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::relateToOperator (3 samples, 0.05%)</title><rect x="77.6574%" y="965" width="0.0471%" height="15" fill="rgb(232,202,2)"/><text x="77.9074%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.02%)</title><rect x="77.6888%" y="949" width="0.0157%" height="15" fill="rgb(237,140,51)"/><text x="77.9388%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="77.7987%" y="965" width="0.0314%" height="15" fill="rgb(236,157,25)"/><text x="78.0487%" y="975.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::relateToOperator (10 samples, 0.16%)</title><rect x="77.7045%" y="981" width="0.1570%" height="15" fill="rgb(219,209,0)"/><text x="77.9545%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.03%)</title><rect x="77.8301%" y="965" width="0.0314%" height="15" fill="rgb(240,116,54)"/><text x="78.0801%" y="975.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::identifyBuiltIns (15 samples, 0.24%)</title><rect x="77.6417%" y="997" width="0.2355%" height="15" fill="rgb(216,10,36)"/><text x="77.8917%" y="1007.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::setFunctionExtensions (1 samples, 0.02%)</title><rect x="77.8615%" y="981" width="0.0157%" height="15" fill="rgb(222,72,44)"/><text x="78.1115%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="77.8615%" y="965" width="0.0157%" height="15" fill="rgb(232,159,9)"/><text x="78.1115%" y="975.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.02%)</title><rect x="77.8772%" y="981" width="0.0157%" height="15" fill="rgb(210,39,32)"/><text x="78.1272%" y="991.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (1 samples, 0.02%)</title><rect x="77.8772%" y="965" width="0.0157%" height="15" fill="rgb(216,194,45)"/><text x="78.1272%" y="975.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.02%)</title><rect x="77.8772%" y="949" width="0.0157%" height="15" fill="rgb(218,18,35)"/><text x="78.1272%" y="959.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::add2ndGenerationSamplingImaging (1 samples, 0.02%)</title><rect x="77.8929%" y="981" width="0.0157%" height="15" fill="rgb(207,83,51)"/><text x="78.1429%" y="991.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::addSamplingFunctions(glslang::TSampler, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="77.8929%" y="965" width="0.0157%" height="15" fill="rgb(225,63,43)"/><text x="78.1429%" y="975.50"></text></g><g><title>rvfm_main`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.02%)</title><rect x="77.8929%" y="949" width="0.0157%" height="15" fill="rgb(207,57,36)"/><text x="78.1429%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="77.8929%" y="933" width="0.0157%" height="15" fill="rgb(216,99,33)"/><text x="78.1429%" y="943.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::initialize (3 samples, 0.05%)</title><rect x="77.8772%" y="997" width="0.0471%" height="15" fill="rgb(225,42,16)"/><text x="78.1272%" y="1007.50"></text></g><g><title>rvfm_main`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.02%)</title><rect x="77.9086%" y="981" width="0.0157%" height="15" fill="rgb(220,201,45)"/><text x="78.1586%" y="991.50"></text></g><g><title>libc+ (1 samples, 0.02%)</title><rect x="77.9086%" y="965" width="0.0157%" height="15" fill="rgb(225,33,4)"/><text x="78.1586%" y="975.50"></text></g><g><title>rvfm_main`glslang::TPoolAllocator::~TPoolAllocator (1 samples, 0.02%)</title><rect x="77.9243%" y="997" width="0.0157%" height="15" fill="rgb(224,33,50)"/><text x="78.1743%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="77.9243%" y="981" width="0.0157%" height="15" fill="rgb(246,198,51)"/><text x="78.1743%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="77.9243%" y="965" width="0.0157%" height="15" fill="rgb(205,22,4)"/><text x="78.1743%" y="975.50"></text></g><g><title>rvfm_main`glslang::TFunction::clone (1 samples, 0.02%)</title><rect x="77.9557%" y="965" width="0.0157%" height="15" fill="rgb(206,3,8)"/><text x="78.2057%" y="975.50"></text></g><g><title>rvfm_main`glslang::TFunction::TFunction (1 samples, 0.02%)</title><rect x="77.9557%" y="949" width="0.0157%" height="15" fill="rgb(251,23,15)"/><text x="78.2057%" y="959.50"></text></g><g><title>rvfm_main`glslang::TType::deepCopy(glslang::TType const&amp;, glslang::TMap&lt;glslang::TVector&lt;glslang::TTypeLoc&gt;*, glslang::TVector&lt;glslang::TTypeLoc&gt;*, std::__1::less&lt;glslang::TVector (1 samples, 0.02%)</title><rect x="77.9557%" y="933" width="0.0157%" height="15" fill="rgb(252,88,28)"/><text x="78.2057%" y="943.50"></text></g><g><title>rvfm_main`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (4 samples, 0.06%)</title><rect x="77.9714%" y="949" width="0.0628%" height="15" fill="rgb(212,127,14)"/><text x="78.2214%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="78.0185%" y="933" width="0.0157%" height="15" fill="rgb(247,145,37)"/><text x="78.2685%" y="943.50"></text></g><g><title>rvfm_main`DYLD-STUB$$memcmp (1 samples, 0.02%)</title><rect x="78.0656%" y="933" width="0.0157%" height="15" fill="rgb(209,117,53)"/><text x="78.3156%" y="943.50"></text></g><g><title>rvfm_main`glslang::TSymbolTable::copyTable (16 samples, 0.25%)</title><rect x="77.9400%" y="997" width="0.2512%" height="15" fill="rgb(212,90,42)"/><text x="78.1900%" y="1007.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::clone (16 samples, 0.25%)</title><rect x="77.9400%" y="981" width="0.2512%" height="15" fill="rgb(218,164,37)"/><text x="78.1900%" y="991.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::insert (14 samples, 0.22%)</title><rect x="77.9714%" y="965" width="0.2198%" height="15" fill="rgb(246,65,34)"/><text x="78.2214%" y="975.50"></text></g><g><title>rvfm_main`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (10 samples, 0.16%)</title><rect x="78.0342%" y="949" width="0.1570%" height="15" fill="rgb(231,100,33)"/><text x="78.2842%" y="959.50"></text></g><g><title>rvfm_main`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt; &gt; &gt;::__find_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;(std::__1::__tree_end_node&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;*&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (7 samples, 0.11%)</title><rect x="78.0813%" y="933" width="0.1099%" height="15" fill="rgb(228,126,14)"/><text x="78.3313%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.09%)</title><rect x="78.0970%" y="917" width="0.0942%" height="15" fill="rgb(215,173,21)"/><text x="78.3470%" y="927.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::readOnly (4 samples, 0.06%)</title><rect x="78.1912%" y="997" width="0.0628%" height="15" fill="rgb(210,6,40)"/><text x="78.4412%" y="1007.50"></text></g><g><title>rvfm_main`(anonymous namespace)::SetupBuiltinSymbolTable (91 samples, 1.43%)</title><rect x="76.8409%" y="1013" width="1.4288%" height="15" fill="rgb(212,48,18)"/><text x="77.0909%" y="1023.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::~TSymbolTableLevel (1 samples, 0.02%)</title><rect x="78.2540%" y="997" width="0.0157%" height="15" fill="rgb(230,214,11)"/><text x="78.5040%" y="1007.50"></text></g><g><title>rvfm_main`glslang::TParseContext::handleFunctionCall (1 samples, 0.02%)</title><rect x="78.2697%" y="981" width="0.0157%" height="15" fill="rgb(254,105,39)"/><text x="78.5197%" y="991.50"></text></g><g><title>rvfm_main`glslang::TType::isArray (1 samples, 0.02%)</title><rect x="78.2697%" y="965" width="0.0157%" height="15" fill="rgb(245,158,5)"/><text x="78.5197%" y="975.50"></text></g><g><title>rvfm_main`shaderc::Compiler::compile_into_spirv (93 samples, 1.46%)</title><rect x="76.8409%" y="1109" width="1.4602%" height="15" fill="rgb(249,208,11)"/><text x="77.0909%" y="1119.50"></text></g><g><title>rvfm_main`shaderc_compile_into_spv (93 samples, 1.46%)</title><rect x="76.8409%" y="1093" width="1.4602%" height="15" fill="rgb(210,39,28)"/><text x="77.0909%" y="1103.50"></text></g><g><title>rvfm_main`(anonymous namespace)::CompileToSpecifiedOutputType (93 samples, 1.46%)</title><rect x="76.8409%" y="1077" width="1.4602%" height="15" fill="rgb(211,56,53)"/><text x="77.0909%" y="1087.50"></text></g><g><title>rvfm_main`shaderc_util::Compiler::Compile(shaderc_util::string_piece const&amp;, EShLanguage, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, char const*, std::__1::function&lt;EShLanguage (std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;*, shaderc_util::string_piece const&amp;)&gt; const&amp;, shaderc_util::CountingIncluder&amp;, shaderc_util::Compiler::OutputType, std::__1::basic_ostream&lt;char, std::__1::char_traits (93 samples, 1.46%)</title><rect x="76.8409%" y="1061" width="1.4602%" height="15" fill="rgb(226,201,30)"/><text x="77.0909%" y="1071.50"></text></g><g><title>rvfm_main`glslang::TShader::parse (93 samples, 1.46%)</title><rect x="76.8409%" y="1045" width="1.4602%" height="15" fill="rgb(239,101,34)"/><text x="77.0909%" y="1055.50"></text></g><g><title>rvfm_main`(anonymous namespace)::CompileDeferred(TCompiler*, char const* const*, int, int const*, char const* const*, char const*, EShOptimizationLevel, TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TIntermediate&amp;, glslang::TShader::Includer&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (93 samples, 1.46%)</title><rect x="76.8409%" y="1029" width="1.4602%" height="15" fill="rgb(226,209,5)"/><text x="77.0909%" y="1039.50"></text></g><g><title>rvfm_main`glslang::TParseContext::parseShaderStrings (2 samples, 0.03%)</title><rect x="78.2697%" y="1013" width="0.0314%" height="15" fill="rgb(250,105,47)"/><text x="78.5197%" y="1023.50"></text></g><g><title>rvfm_main`yyparse(glslang::TParseContext*) (2 samples, 0.03%)</title><rect x="78.2697%" y="997" width="0.0314%" height="15" fill="rgb(230,72,3)"/><text x="78.5197%" y="1007.50"></text></g><g><title>rvfm_main`yylex(YYSTYPE*, glslang::TParseContext&amp;) (1 samples, 0.02%)</title><rect x="78.2854%" y="981" width="0.0157%" height="15" fill="rgb(232,218,39)"/><text x="78.5354%" y="991.50"></text></g><g><title>rvfm_main`glslang::TScanContext::tokenize (1 samples, 0.02%)</title><rect x="78.2854%" y="965" width="0.0157%" height="15" fill="rgb(248,166,6)"/><text x="78.5354%" y="975.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tokenize (1 samples, 0.02%)</title><rect x="78.2854%" y="949" width="0.0157%" height="15" fill="rgb(247,89,20)"/><text x="78.5354%" y="959.50"></text></g><g><title>rvfm_main`glslang::TPpContext::readCPPline (1 samples, 0.02%)</title><rect x="78.2854%" y="933" width="0.0157%" height="15" fill="rgb(248,130,54)"/><text x="78.5354%" y="943.50"></text></g><g><title>rvfm_main`glslang::TPpContext::CPPdefine (1 samples, 0.02%)</title><rect x="78.2854%" y="917" width="0.0157%" height="15" fill="rgb(234,196,4)"/><text x="78.5354%" y="927.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::scan (1 samples, 0.02%)</title><rect x="78.2854%" y="901" width="0.0157%" height="15" fill="rgb(250,143,31)"/><text x="78.5354%" y="911.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::ungetch (1 samples, 0.02%)</title><rect x="78.2854%" y="885" width="0.0157%" height="15" fill="rgb(211,110,34)"/><text x="78.5354%" y="895.50"></text></g><g><title>rvfm_main`glslang::HlslScanContext::deleteKeywordMap (1 samples, 0.02%)</title><rect x="78.3011%" y="1061" width="0.0157%" height="15" fill="rgb(215,124,48)"/><text x="78.5511%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="78.3011%" y="1045" width="0.0157%" height="15" fill="rgb(216,46,13)"/><text x="78.5511%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="78.3011%" y="1029" width="0.0157%" height="15" fill="rgb(205,184,25)"/><text x="78.5511%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="78.3011%" y="1013" width="0.0157%" height="15" fill="rgb(228,1,10)"/><text x="78.5511%" y="1023.50"></text></g><g><title>rvfm_main`rvfm_main::raw_fb_renderer::RawFBRenderer::new (95 samples, 1.49%)</title><rect x="76.8409%" y="1125" width="1.4916%" height="15" fill="rgb(213,116,27)"/><text x="77.0909%" y="1135.50"></text></g><g><title>rvfm_main`shaderc_compiler_release (2 samples, 0.03%)</title><rect x="78.3011%" y="1109" width="0.0314%" height="15" fill="rgb(241,95,50)"/><text x="78.5511%" y="1119.50"></text></g><g><title>rvfm_main`shaderc_util::GlslangInitializer::~GlslangInitializer (2 samples, 0.03%)</title><rect x="78.3011%" y="1093" width="0.0314%" height="15" fill="rgb(238,48,32)"/><text x="78.5511%" y="1103.50"></text></g><g><title>rvfm_main`ShFinalize (2 samples, 0.03%)</title><rect x="78.3011%" y="1077" width="0.0314%" height="15" fill="rgb(235,113,49)"/><text x="78.5511%" y="1087.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::~TSymbolTableLevel (1 samples, 0.02%)</title><rect x="78.3168%" y="1061" width="0.0157%" height="15" fill="rgb(205,127,43)"/><text x="78.5668%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (34 samples, 0.53%)</title><rect x="78.3325%" y="1109" width="0.5338%" height="15" fill="rgb(250,162,2)"/><text x="78.5825%" y="1119.50"></text></g><g><title>rvfm_main`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="78.8821%" y="1093" width="0.0157%" height="15" fill="rgb(220,13,41)"/><text x="79.1321%" y="1103.50"></text></g><g><title>libobjc.A.dylib`_objc_rootRetain (1 samples, 0.02%)</title><rect x="78.9606%" y="1077" width="0.0157%" height="15" fill="rgb(249,221,25)"/><text x="79.2106%" y="1087.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="78.9763%" y="1077" width="0.0157%" height="15" fill="rgb(215,208,19)"/><text x="79.2263%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="78.9920%" y="1077" width="0.0157%" height="15" fill="rgb(236,175,2)"/><text x="79.2420%" y="1087.50"></text></g><g><title>rvfm_main`&lt;arrayvec::ArrayVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="79.0077%" y="1077" width="0.0157%" height="15" fill="rgb(241,52,2)"/><text x="79.2577%" y="1087.50"></text></g><g><title>rvfm_main`&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="79.0234%" y="1077" width="0.0157%" height="15" fill="rgb(248,140,14)"/><text x="79.2734%" y="1087.50"></text></g><g><title>Foundation`+[NSString allocWithZone:] (1 samples, 0.02%)</title><rect x="79.0391%" y="1045" width="0.0157%" height="15" fill="rgb(253,22,42)"/><text x="79.2891%" y="1055.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (2 samples, 0.03%)</title><rect x="79.0391%" y="1061" width="0.0314%" height="15" fill="rgb(234,61,47)"/><text x="79.2891%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="79.0548%" y="1045" width="0.0157%" height="15" fill="rgb(208,226,15)"/><text x="79.3048%" y="1055.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.03%)</title><rect x="79.0705%" y="1013" width="0.0314%" height="15" fill="rgb(217,221,4)"/><text x="79.3205%" y="1023.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStoragePoolCreateStorage (1 samples, 0.02%)</title><rect x="79.0862%" y="997" width="0.0157%" height="15" fill="rgb(212,174,34)"/><text x="79.3362%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.05%)</title><rect x="79.0705%" y="1029" width="0.0471%" height="15" fill="rgb(253,83,4)"/><text x="79.3205%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="79.1019%" y="1013" width="0.0157%" height="15" fill="rgb(250,195,49)"/><text x="79.3519%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="79.1019%" y="997" width="0.0157%" height="15" fill="rgb(241,192,25)"/><text x="79.3519%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="79.1019%" y="981" width="0.0157%" height="15" fill="rgb(208,124,10)"/><text x="79.3519%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="79.1019%" y="965" width="0.0157%" height="15" fill="rgb(222,33,0)"/><text x="79.3519%" y="975.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (6 samples, 0.09%)</title><rect x="79.0391%" y="1077" width="0.0942%" height="15" fill="rgb(234,209,28)"/><text x="79.2891%" y="1087.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (4 samples, 0.06%)</title><rect x="79.0705%" y="1061" width="0.0628%" height="15" fill="rgb(224,11,23)"/><text x="79.3205%" y="1071.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (4 samples, 0.06%)</title><rect x="79.0705%" y="1045" width="0.0628%" height="15" fill="rgb(232,99,1)"/><text x="79.3205%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::IntelStateHeaps (1 samples, 0.02%)</title><rect x="79.1176%" y="1029" width="0.0157%" height="15" fill="rgb(237,95,45)"/><text x="79.3676%" y="1039.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal setRenderTargetArrayLength:] (1 samples, 0.02%)</title><rect x="79.1490%" y="1061" width="0.0157%" height="15" fill="rgb(208,109,11)"/><text x="79.3990%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="79.1647%" y="1061" width="0.0157%" height="15" fill="rgb(216,190,48)"/><text x="79.4147%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="79.1804%" y="1045" width="0.0157%" height="15" fill="rgb(251,171,36)"/><text x="79.4304%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (3 samples, 0.05%)</title><rect x="79.2118%" y="981" width="0.0471%" height="15" fill="rgb(230,62,22)"/><text x="79.4618%" y="991.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateBindingTable::IGRenderStateBindingTable (2 samples, 0.03%)</title><rect x="79.2275%" y="965" width="0.0314%" height="15" fill="rgb(225,114,35)"/><text x="79.4775%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="79.2275%" y="949" width="0.0314%" height="15" fill="rgb(215,118,42)"/><text x="79.4775%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelDevice getScratchPageGPUAddress] (1 samples, 0.02%)</title><rect x="79.2589%" y="965" width="0.0157%" height="15" fill="rgb(243,119,21)"/><text x="79.5089%" y="975.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::acquireHeap (1 samples, 0.02%)</title><rect x="79.2903%" y="917" width="0.0157%" height="15" fill="rgb(252,177,53)"/><text x="79.5403%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="79.2903%" y="901" width="0.0157%" height="15" fill="rgb(237,209,29)"/><text x="79.5403%" y="911.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (6 samples, 0.09%)</title><rect x="79.3060%" y="837" width="0.0942%" height="15" fill="rgb(212,65,23)"/><text x="79.5560%" y="847.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.09%)</title><rect x="79.3060%" y="821" width="0.0942%" height="15" fill="rgb(230,222,46)"/><text x="79.5560%" y="831.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.09%)</title><rect x="79.3060%" y="805" width="0.0942%" height="15" fill="rgb(215,135,32)"/><text x="79.5560%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (6 samples, 0.09%)</title><rect x="79.3060%" y="789" width="0.0942%" height="15" fill="rgb(246,101,22)"/><text x="79.5560%" y="799.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateBindingTable::initNullSurfaceState (8 samples, 0.13%)</title><rect x="79.2903%" y="949" width="0.1256%" height="15" fill="rgb(206,107,13)"/><text x="79.5403%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::initialize (8 samples, 0.13%)</title><rect x="79.2903%" y="933" width="0.1256%" height="15" fill="rgb(250,100,44)"/><text x="79.5403%" y="943.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::allocateHeap (7 samples, 0.11%)</title><rect x="79.3060%" y="917" width="0.1099%" height="15" fill="rgb(231,147,38)"/><text x="79.5560%" y="927.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (7 samples, 0.11%)</title><rect x="79.3060%" y="901" width="0.1099%" height="15" fill="rgb(229,8,40)"/><text x="79.5560%" y="911.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (7 samples, 0.11%)</title><rect x="79.3060%" y="885" width="0.1099%" height="15" fill="rgb(221,135,30)"/><text x="79.5560%" y="895.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (7 samples, 0.11%)</title><rect x="79.3060%" y="869" width="0.1099%" height="15" fill="rgb(249,193,18)"/><text x="79.5560%" y="879.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (7 samples, 0.11%)</title><rect x="79.3060%" y="853" width="0.1099%" height="15" fill="rgb(209,133,39)"/><text x="79.5560%" y="863.50"></text></g><g><title>Metal`-[MTLIOAccelDevice currentAllocatedSize] (1 samples, 0.02%)</title><rect x="79.4002%" y="837" width="0.0157%" height="15" fill="rgb(232,100,14)"/><text x="79.6502%" y="847.50"></text></g><g><title>IOAccelerator`IOAccelSharedGetMemoryData (1 samples, 0.02%)</title><rect x="79.4002%" y="821" width="0.0157%" height="15" fill="rgb(224,185,1)"/><text x="79.6502%" y="831.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (1 samples, 0.02%)</title><rect x="79.4002%" y="805" width="0.0157%" height="15" fill="rgb(223,139,8)"/><text x="79.6502%" y="815.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="79.4002%" y="789" width="0.0157%" height="15" fill="rgb(232,213,38)"/><text x="79.6502%" y="799.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="79.4002%" y="773" width="0.0157%" height="15" fill="rgb(207,94,22)"/><text x="79.6502%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="79.4002%" y="757" width="0.0157%" height="15" fill="rgb(219,183,54)"/><text x="79.6502%" y="767.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateURB::init (1 samples, 0.02%)</title><rect x="79.4159%" y="949" width="0.0157%" height="15" fill="rgb(216,185,54)"/><text x="79.6659%" y="959.50"></text></g><g><title>Metal`+[_MTLDevice useNewPrimitiveRestartBehavior] (1 samples, 0.02%)</title><rect x="79.4316%" y="933" width="0.0157%" height="15" fill="rgb(254,217,39)"/><text x="79.6816%" y="943.50"></text></g><g><title>libdyld.dylib`dyld3::dyld_get_sdk_version (1 samples, 0.02%)</title><rect x="79.4316%" y="917" width="0.0157%" height="15" fill="rgb(240,178,23)"/><text x="79.6816%" y="927.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateVertexFetch::init (2 samples, 0.03%)</title><rect x="79.4316%" y="949" width="0.0314%" height="15" fill="rgb(218,11,47)"/><text x="79.6816%" y="959.50"></text></g><g><title>libdyld.dylib`dyld_get_program_sdk_version (1 samples, 0.02%)</title><rect x="79.4473%" y="933" width="0.0157%" height="15" fill="rgb(218,51,51)"/><text x="79.6973%" y="943.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (1 samples, 0.02%)</title><rect x="79.4630%" y="853" width="0.0157%" height="15" fill="rgb(238,126,27)"/><text x="79.7130%" y="863.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="79.4630%" y="837" width="0.0157%" height="15" fill="rgb(249,202,22)"/><text x="79.7130%" y="847.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="79.4630%" y="821" width="0.0157%" height="15" fill="rgb(254,195,49)"/><text x="79.7130%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="79.4630%" y="805" width="0.0157%" height="15" fill="rgb(208,123,14)"/><text x="79.7130%" y="815.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (15 samples, 0.24%)</title><rect x="79.2746%" y="965" width="0.2355%" height="15" fill="rgb(224,200,8)"/><text x="79.5246%" y="975.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`ShaderBindingStage::init (3 samples, 0.05%)</title><rect x="79.4630%" y="949" width="0.0471%" height="15" fill="rgb(217,61,36)"/><text x="79.7130%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGBufferMemory&lt;64ul&gt;::init (3 samples, 0.05%)</title><rect x="79.4630%" y="933" width="0.0471%" height="15" fill="rgb(206,35,45)"/><text x="79.7130%" y="943.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (3 samples, 0.05%)</title><rect x="79.4630%" y="917" width="0.0471%" height="15" fill="rgb(217,65,33)"/><text x="79.7130%" y="927.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (3 samples, 0.05%)</title><rect x="79.4630%" y="901" width="0.0471%" height="15" fill="rgb(222,158,48)"/><text x="79.7130%" y="911.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (3 samples, 0.05%)</title><rect x="79.4630%" y="885" width="0.0471%" height="15" fill="rgb(254,2,54)"/><text x="79.7130%" y="895.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (3 samples, 0.05%)</title><rect x="79.4630%" y="869" width="0.0471%" height="15" fill="rgb(250,143,38)"/><text x="79.7130%" y="879.50"></text></g><g><title>Metal`-[MTLIOAccelDevice currentAllocatedSize] (2 samples, 0.03%)</title><rect x="79.4787%" y="853" width="0.0314%" height="15" fill="rgb(248,25,0)"/><text x="79.7287%" y="863.50"></text></g><g><title>IOAccelerator`IOAccelSharedGetMemoryData (2 samples, 0.03%)</title><rect x="79.4787%" y="837" width="0.0314%" height="15" fill="rgb(206,152,27)"/><text x="79.7287%" y="847.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (2 samples, 0.03%)</title><rect x="79.4787%" y="821" width="0.0314%" height="15" fill="rgb(240,77,30)"/><text x="79.7287%" y="831.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.03%)</title><rect x="79.4787%" y="805" width="0.0314%" height="15" fill="rgb(231,5,3)"/><text x="79.7287%" y="815.50"></text></g><g><title>IOKit`io_connect_method (2 samples, 0.03%)</title><rect x="79.4787%" y="789" width="0.0314%" height="15" fill="rgb(207,226,32)"/><text x="79.7287%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.03%)</title><rect x="79.4787%" y="773" width="0.0314%" height="15" fill="rgb(222,207,47)"/><text x="79.7287%" y="783.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (1 samples, 0.02%)</title><rect x="79.5258%" y="933" width="0.0157%" height="15" fill="rgb(229,115,45)"/><text x="79.7758%" y="943.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderClearEncoder::writeBlendState (1 samples, 0.02%)</title><rect x="79.5258%" y="917" width="0.0157%" height="15" fill="rgb(224,191,6)"/><text x="79.7758%" y="927.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderClearEncoder::IGRenderClearEncoder (1 samples, 0.02%)</title><rect x="79.5415%" y="933" width="0.0157%" height="15" fill="rgb(230,227,24)"/><text x="79.7915%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="79.5415%" y="917" width="0.0157%" height="15" fill="rgb(228,80,19)"/><text x="79.7915%" y="927.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderClearEncoder::setupClearPasses (1 samples, 0.02%)</title><rect x="79.5572%" y="933" width="0.0157%" height="15" fill="rgb(247,229,0)"/><text x="79.8072%" y="943.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderClearEncoder::setupDirtyFlags (1 samples, 0.02%)</title><rect x="79.5729%" y="933" width="0.0157%" height="15" fill="rgb(237,194,15)"/><text x="79.8229%" y="943.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderClearEncoder::writeBlendState (1 samples, 0.02%)</title><rect x="79.5886%" y="933" width="0.0157%" height="15" fill="rgb(219,203,20)"/><text x="79.8386%" y="943.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (7 samples, 0.11%)</title><rect x="79.5101%" y="949" width="0.1099%" height="15" fill="rgb(234,128,8)"/><text x="79.7601%" y="959.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="79.6043%" y="933" width="0.0157%" height="15" fill="rgb(248,202,8)"/><text x="79.8543%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="79.6043%" y="917" width="0.0157%" height="15" fill="rgb(206,104,37)"/><text x="79.8543%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="79.6043%" y="901" width="0.0157%" height="15" fill="rgb(223,8,27)"/><text x="79.8543%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="79.6043%" y="885" width="0.0157%" height="15" fill="rgb(216,217,28)"/><text x="79.8543%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="79.6043%" y="869" width="0.0157%" height="15" fill="rgb(249,199,1)"/><text x="79.8543%" y="879.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (10 samples, 0.16%)</title><rect x="79.5101%" y="965" width="0.1570%" height="15" fill="rgb(240,85,17)"/><text x="79.7601%" y="975.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderPass::initWithDescriptor (3 samples, 0.05%)</title><rect x="79.6200%" y="949" width="0.0471%" height="15" fill="rgb(206,108,45)"/><text x="79.8700%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderPass::generateSurfaceState (1 samples, 0.02%)</title><rect x="79.6514%" y="933" width="0.0157%" height="15" fill="rgb(245,210,41)"/><text x="79.9014%" y="943.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderPass::generateClearOptions (1 samples, 0.02%)</title><rect x="79.6514%" y="917" width="0.0157%" height="15" fill="rgb(206,13,37)"/><text x="79.9014%" y="927.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (1 samples, 0.02%)</title><rect x="79.6828%" y="869" width="0.0157%" height="15" fill="rgb(250,61,18)"/><text x="79.9328%" y="879.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="79.6828%" y="853" width="0.0157%" height="15" fill="rgb(235,172,48)"/><text x="79.9328%" y="863.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="79.6828%" y="837" width="0.0157%" height="15" fill="rgb(249,201,17)"/><text x="79.9328%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="79.6828%" y="821" width="0.0157%" height="15" fill="rgb(219,208,6)"/><text x="79.9328%" y="831.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`bool IntelCommandBuffer::initialize&lt;(IntelConstants::eEngineID)1&gt; (3 samples, 0.05%)</title><rect x="79.6671%" y="949" width="0.0471%" height="15" fill="rgb(248,31,23)"/><text x="79.9171%" y="959.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (2 samples, 0.03%)</title><rect x="79.6828%" y="933" width="0.0314%" height="15" fill="rgb(245,15,42)"/><text x="79.9328%" y="943.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (2 samples, 0.03%)</title><rect x="79.6828%" y="917" width="0.0314%" height="15" fill="rgb(222,217,39)"/><text x="79.9328%" y="927.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (2 samples, 0.03%)</title><rect x="79.6828%" y="901" width="0.0314%" height="15" fill="rgb(210,219,27)"/><text x="79.9328%" y="911.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (2 samples, 0.03%)</title><rect x="79.6828%" y="885" width="0.0314%" height="15" fill="rgb(252,166,36)"/><text x="79.9328%" y="895.50"></text></g><g><title>Metal`-[MTLIOAccelDevice currentAllocatedSize] (1 samples, 0.02%)</title><rect x="79.6985%" y="869" width="0.0157%" height="15" fill="rgb(245,132,34)"/><text x="79.9485%" y="879.50"></text></g><g><title>IOAccelerator`IOAccelSharedGetMemoryData (1 samples, 0.02%)</title><rect x="79.6985%" y="853" width="0.0157%" height="15" fill="rgb(236,54,3)"/><text x="79.9485%" y="863.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (1 samples, 0.02%)</title><rect x="79.6985%" y="837" width="0.0157%" height="15" fill="rgb(241,173,43)"/><text x="79.9485%" y="847.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="79.6985%" y="821" width="0.0157%" height="15" fill="rgb(215,190,9)"/><text x="79.9485%" y="831.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="79.6985%" y="805" width="0.0157%" height="15" fill="rgb(242,101,16)"/><text x="79.9485%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="79.6985%" y="789" width="0.0157%" height="15" fill="rgb(223,190,21)"/><text x="79.9485%" y="799.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (30 samples, 0.47%)</title><rect x="79.2589%" y="981" width="0.4710%" height="15" fill="rgb(215,228,25)"/><text x="79.5089%" y="991.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`bool IGAccelEncoderBase::initialize&lt;(IntelConstants::eEngineID)1&gt; (4 samples, 0.06%)</title><rect x="79.6671%" y="965" width="0.0628%" height="15" fill="rgb(225,36,22)"/><text x="79.9171%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="79.7142%" y="949" width="0.0157%" height="15" fill="rgb(251,106,46)"/><text x="79.9642%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateSamplers::IGRenderStateSamplers (1 samples, 0.02%)</title><rect x="79.7299%" y="981" width="0.0157%" height="15" fill="rgb(208,90,1)"/><text x="79.9799%" y="991.50"></text></g><g><title>Metal`-[_MTLCommandEncoder initWithCommandBuffer:] (2 samples, 0.03%)</title><rect x="79.7456%" y="949" width="0.0314%" height="15" fill="rgb(243,10,4)"/><text x="79.9956%" y="959.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setCurrentCommandEncoder:] (1 samples, 0.02%)</title><rect x="79.7613%" y="933" width="0.0157%" height="15" fill="rgb(212,137,27)"/><text x="80.0113%" y="943.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder globalTraceObjectID] (1 samples, 0.02%)</title><rect x="79.7613%" y="917" width="0.0157%" height="15" fill="rgb(231,220,49)"/><text x="80.0113%" y="927.50"></text></g><g><title>Metal`-[MTLIOAccelRenderCommandEncoder initWithCommandBuffer:descriptor:] (3 samples, 0.05%)</title><rect x="79.7456%" y="981" width="0.0471%" height="15" fill="rgb(237,96,20)"/><text x="79.9956%" y="991.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder initWithCommandBuffer:] (3 samples, 0.05%)</title><rect x="79.7456%" y="965" width="0.0471%" height="15" fill="rgb(239,229,30)"/><text x="79.9956%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="79.7770%" y="949" width="0.0157%" height="15" fill="rgb(219,65,33)"/><text x="80.0270%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (39 samples, 0.61%)</title><rect x="79.1961%" y="997" width="0.6123%" height="15" fill="rgb(243,134,7)"/><text x="79.4461%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="79.7927%" y="981" width="0.0157%" height="15" fill="rgb(216,177,54)"/><text x="80.0427%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="79.7927%" y="965" width="0.0157%" height="15" fill="rgb(211,160,20)"/><text x="80.0427%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="79.7927%" y="949" width="0.0157%" height="15" fill="rgb(239,85,39)"/><text x="80.0427%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1 samples, 0.02%)</title><rect x="79.7927%" y="933" width="0.0157%" height="15" fill="rgb(232,125,22)"/><text x="80.0427%" y="943.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (40 samples, 0.63%)</title><rect x="79.1961%" y="1013" width="0.6280%" height="15" fill="rgb(244,57,34)"/><text x="79.4461%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="79.8084%" y="997" width="0.0157%" height="15" fill="rgb(214,203,32)"/><text x="80.0584%" y="1007.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::CommandSink::switch_render (41 samples, 0.64%)</title><rect x="79.1961%" y="1029" width="0.6437%" height="15" fill="rgb(207,58,43)"/><text x="79.4461%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="79.8241%" y="1013" width="0.0157%" height="15" fill="rgb(215,193,15)"/><text x="80.0741%" y="1023.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::next_subpass (48 samples, 0.75%)</title><rect x="79.1804%" y="1061" width="0.7537%" height="15" fill="rgb(232,15,44)"/><text x="79.4304%" y="1071.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (47 samples, 0.74%)</title><rect x="79.1961%" y="1045" width="0.7379%" height="15" fill="rgb(212,3,48)"/><text x="79.4461%" y="1055.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::PreRender::issue_many (6 samples, 0.09%)</title><rect x="79.8398%" y="1029" width="0.0942%" height="15" fill="rgb(218,128,7)"/><text x="80.0898%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::setPipelineState (2 samples, 0.03%)</title><rect x="79.9027%" y="1013" width="0.0314%" height="15" fill="rgb(226,216,39)"/><text x="80.1527%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="79.9027%" y="997" width="0.0314%" height="15" fill="rgb(243,47,51)"/><text x="80.1527%" y="1007.50"></text></g><g><title>Metal`+[MTLRenderPassColorAttachmentDescriptor allocWithZone:] (1 samples, 0.02%)</title><rect x="79.9498%" y="1029" width="0.0157%" height="15" fill="rgb(241,183,40)"/><text x="80.1998%" y="1039.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="79.9498%" y="1013" width="0.0157%" height="15" fill="rgb(231,217,32)"/><text x="80.1998%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="79.9498%" y="997" width="0.0157%" height="15" fill="rgb(229,61,38)"/><text x="80.1998%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="79.9498%" y="981" width="0.0157%" height="15" fill="rgb(225,210,5)"/><text x="80.1998%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (1 samples, 0.02%)</title><rect x="79.9498%" y="965" width="0.0157%" height="15" fill="rgb(231,79,45)"/><text x="80.1998%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="79.9655%" y="1029" width="0.0157%" height="15" fill="rgb(224,100,7)"/><text x="80.2155%" y="1039.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:] (3 samples, 0.05%)</title><rect x="79.9498%" y="1045" width="0.0471%" height="15" fill="rgb(241,198,18)"/><text x="80.1998%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="79.9812%" y="1029" width="0.0157%" height="15" fill="rgb(252,97,53)"/><text x="80.2312%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin_render_pass (56 samples, 0.88%)</title><rect x="79.1333%" y="1077" width="0.8793%" height="15" fill="rgb(220,88,7)"/><text x="79.3833%" y="1087.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (5 samples, 0.08%)</title><rect x="79.9341%" y="1061" width="0.0785%" height="15" fill="rgb(213,176,14)"/><text x="80.1841%" y="1071.50"></text></g><g><title>rvfm_main`gfx_backend_metal::conversions::map_load_operation (1 samples, 0.02%)</title><rect x="79.9969%" y="1045" width="0.0157%" height="15" fill="rgb(246,73,7)"/><text x="80.2469%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="80.0126%" y="1061" width="0.0157%" height="15" fill="rgb(245,64,36)"/><text x="80.2626%" y="1071.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::PreRender::issue (1 samples, 0.02%)</title><rect x="80.0283%" y="1061" width="0.0157%" height="15" fill="rgb(245,80,10)"/><text x="80.2783%" y="1071.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder setFragmentSamplerStates:withRange:] (1 samples, 0.02%)</title><rect x="80.0283%" y="1045" width="0.0157%" height="15" fill="rgb(232,107,50)"/><text x="80.2783%" y="1055.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::bind_graphics_descriptor_sets (3 samples, 0.05%)</title><rect x="80.0126%" y="1077" width="0.0471%" height="15" fill="rgb(253,3,0)"/><text x="80.2626%" y="1087.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::StageResources::bind_set (1 samples, 0.02%)</title><rect x="80.0440%" y="1061" width="0.0157%" height="15" fill="rgb(212,99,53)"/><text x="80.2940%" y="1071.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::bind_graphics_pipeline (2 samples, 0.03%)</title><rect x="80.0597%" y="1077" width="0.0314%" height="15" fill="rgb(249,111,54)"/><text x="80.3097%" y="1087.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelEncoderBase::writePipelineFlush (1 samples, 0.02%)</title><rect x="80.1225%" y="1013" width="0.0157%" height="15" fill="rgb(249,55,30)"/><text x="80.3725%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelEncoderBase::writePipeControl (1 samples, 0.02%)</title><rect x="80.1225%" y="997" width="0.0157%" height="15" fill="rgb(237,47,42)"/><text x="80.3725%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateConstants::writeConstantState (1 samples, 0.02%)</title><rect x="80.1382%" y="1013" width="0.0157%" height="15" fill="rgb(211,20,18)"/><text x="80.3882%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateConstants::writeConstants (1 samples, 0.02%)</title><rect x="80.1382%" y="997" width="0.0157%" height="15" fill="rgb(231,203,46)"/><text x="80.3882%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateSamplers::writeIf (2 samples, 0.03%)</title><rect x="80.1539%" y="1013" width="0.0314%" height="15" fill="rgb(237,142,3)"/><text x="80.4039%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`SamplerStage::writeSamplerState (2 samples, 0.03%)</title><rect x="80.1539%" y="997" width="0.0314%" height="15" fill="rgb(241,107,1)"/><text x="80.4039%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateURB::writeAllPushConstantsState (1 samples, 0.02%)</title><rect x="80.1853%" y="1013" width="0.0157%" height="15" fill="rgb(229,83,13)"/><text x="80.4353%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`ShaderBindingStage::updateBindingTableData (1 samples, 0.02%)</title><rect x="80.2010%" y="1013" width="0.0157%" height="15" fill="rgb(241,91,40)"/><text x="80.4510%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`PixelShaderBindingStage::updateBindingTableData (1 samples, 0.02%)</title><rect x="80.2167%" y="997" width="0.0157%" height="15" fill="rgb(225,3,45)"/><text x="80.4667%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::drawPrimitives (12 samples, 0.19%)</title><rect x="80.0911%" y="1045" width="0.1884%" height="15" fill="rgb(244,223,14)"/><text x="80.3411%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (12 samples, 0.19%)</title><rect x="80.0911%" y="1029" width="0.1884%" height="15" fill="rgb(224,124,37)"/><text x="80.3411%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`ShaderBindingStage::writeIf (4 samples, 0.06%)</title><rect x="80.2167%" y="1013" width="0.0628%" height="15" fill="rgb(251,171,30)"/><text x="80.4667%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`ShaderBindingStage::updateBindingTableData (3 samples, 0.05%)</title><rect x="80.2324%" y="997" width="0.0471%" height="15" fill="rgb(236,46,54)"/><text x="80.4824%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="80.2638%" y="981" width="0.0157%" height="15" fill="rgb(245,213,5)"/><text x="80.5138%" y="991.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::draw (13 samples, 0.20%)</title><rect x="80.0911%" y="1077" width="0.2041%" height="15" fill="rgb(230,144,27)"/><text x="80.3411%" y="1087.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:] (13 samples, 0.20%)</title><rect x="80.0911%" y="1061" width="0.2041%" height="15" fill="rgb(220,86,6)"/><text x="80.3411%" y="1071.50"></text></g><g><title>Metal`-[MTLIndirectArgumentBufferEmulationData bindIndirectArgumentsWithFunctions:] (1 samples, 0.02%)</title><rect x="80.2795%" y="1045" width="0.0157%" height="15" fill="rgb(240,20,13)"/><text x="80.5295%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::endEncoding (2 samples, 0.03%)</title><rect x="80.2952%" y="1029" width="0.0314%" height="15" fill="rgb(217,89,34)"/><text x="80.5452%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::handleClearResolves (2 samples, 0.03%)</title><rect x="80.2952%" y="1013" width="0.0314%" height="15" fill="rgb(229,13,5)"/><text x="80.5452%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (1 samples, 0.02%)</title><rect x="80.3109%" y="997" width="0.0157%" height="15" fill="rgb(244,67,35)"/><text x="80.5609%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateConstants::writeInit (1 samples, 0.02%)</title><rect x="80.3109%" y="981" width="0.0157%" height="15" fill="rgb(221,40,2)"/><text x="80.5609%" y="991.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal dealloc] (1 samples, 0.02%)</title><rect x="80.3266%" y="1013" width="0.0157%" height="15" fill="rgb(237,157,21)"/><text x="80.5766%" y="1023.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal dealloc] (1 samples, 0.02%)</title><rect x="80.3266%" y="997" width="0.0157%" height="15" fill="rgb(222,94,11)"/><text x="80.5766%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="80.3266%" y="981" width="0.0157%" height="15" fill="rgb(249,113,6)"/><text x="80.5766%" y="991.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderPass::~IGRenderPass (2 samples, 0.03%)</title><rect x="80.3266%" y="1029" width="0.0314%" height="15" fill="rgb(238,137,36)"/><text x="80.5766%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.02%)</title><rect x="80.3423%" y="1013" width="0.0157%" height="15" fill="rgb(210,102,26)"/><text x="80.5923%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`void IntelCommandBuffer::commit&lt;(IntelConstants::eEngineID)1&gt; (1 samples, 0.02%)</title><rect x="80.3580%" y="1029" width="0.0157%" height="15" fill="rgb(218,30,30)"/><text x="80.6080%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.08%)</title><rect x="80.3737%" y="1029" width="0.0785%" height="15" fill="rgb(214,67,26)"/><text x="80.6237%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::end_render_pass (11 samples, 0.17%)</title><rect x="80.2952%" y="1077" width="0.1727%" height="15" fill="rgb(251,9,53)"/><text x="80.5452%" y="1087.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::EncoderState::end (11 samples, 0.17%)</title><rect x="80.2952%" y="1061" width="0.1727%" height="15" fill="rgb(228,204,25)"/><text x="80.5452%" y="1071.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (11 samples, 0.17%)</title><rect x="80.2952%" y="1045" width="0.1727%" height="15" fill="rgb(207,153,8)"/><text x="80.5452%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_large (1 samples, 0.02%)</title><rect x="80.4522%" y="1029" width="0.0157%" height="15" fill="rgb(242,9,16)"/><text x="80.7022%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::finish (1 samples, 0.02%)</title><rect x="80.4679%" y="1077" width="0.0157%" height="15" fill="rgb(217,211,10)"/><text x="80.7179%" y="1087.50"></text></g><g><title>rvfm_main`&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="80.4836%" y="1077" width="0.0157%" height="15" fill="rgb(219,228,52)"/><text x="80.7336%" y="1087.50"></text></g><g><title>rvfm_main`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="80.4993%" y="1077" width="0.0157%" height="15" fill="rgb(231,92,29)"/><text x="80.7493%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="80.5150%" y="1061" width="0.0314%" height="15" fill="rgb(232,8,23)"/><text x="80.7650%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.03%)</title><rect x="80.5150%" y="1045" width="0.0314%" height="15" fill="rgb(216,211,34)"/><text x="80.7650%" y="1055.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (3 samples, 0.05%)</title><rect x="80.5150%" y="1077" width="0.0471%" height="15" fill="rgb(236,151,0)"/><text x="80.7650%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="80.5464%" y="1061" width="0.0157%" height="15" fill="rgb(209,168,3)"/><text x="80.7964%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="80.5464%" y="1045" width="0.0157%" height="15" fill="rgb(208,129,28)"/><text x="80.7964%" y="1055.50"></text></g><g><title>rvfm_main`gfx_hal::format::Format::base_format (1 samples, 0.02%)</title><rect x="80.5621%" y="1077" width="0.0157%" height="15" fill="rgb(229,78,22)"/><text x="80.8121%" y="1087.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (1 samples, 0.02%)</title><rect x="80.5778%" y="1077" width="0.0157%" height="15" fill="rgb(228,187,13)"/><text x="80.8278%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="80.5778%" y="1061" width="0.0157%" height="15" fill="rgb(240,119,24)"/><text x="80.8278%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="80.5778%" y="1045" width="0.0157%" height="15" fill="rgb(209,194,42)"/><text x="80.8278%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (5 samples, 0.08%)</title><rect x="80.5935%" y="1061" width="0.0785%" height="15" fill="rgb(247,200,46)"/><text x="80.8435%" y="1071.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::unlock_shared_slow (6 samples, 0.09%)</title><rect x="80.5935%" y="1077" width="0.0942%" height="15" fill="rgb(218,76,16)"/><text x="80.8435%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.02%)</title><rect x="80.6720%" y="1061" width="0.0157%" height="15" fill="rgb(225,21,48)"/><text x="80.9220%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="80.7034%" y="1045" width="0.0157%" height="15" fill="rgb(239,223,50)"/><text x="80.9534%" y="1055.50"></text></g><g><title>rvfm_main`wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (4 samples, 0.06%)</title><rect x="80.6877%" y="1077" width="0.0628%" height="15" fill="rgb(244,45,21)"/><text x="80.9377%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (4 samples, 0.06%)</title><rect x="80.6877%" y="1061" width="0.0628%" height="15" fill="rgb(232,33,43)"/><text x="80.9377%" y="1071.50"></text></g><g><title>rvfm_main`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (2 samples, 0.03%)</title><rect x="80.7191%" y="1045" width="0.0314%" height="15" fill="rgb(209,8,3)"/><text x="80.9691%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="80.7348%" y="1029" width="0.0157%" height="15" fill="rgb(214,25,53)"/><text x="80.9848%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="80.7348%" y="1013" width="0.0157%" height="15" fill="rgb(254,186,54)"/><text x="80.9848%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="80.7348%" y="997" width="0.0157%" height="15" fill="rgb(208,174,49)"/><text x="80.9848%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="80.7348%" y="981" width="0.0157%" height="15" fill="rgb(233,191,51)"/><text x="80.9848%" y="991.50"></text></g><g><title>rvfm_main`wgpu_core::command::bind::BindGroupEntry::expect_layout (1 samples, 0.02%)</title><rect x="80.7505%" y="1077" width="0.0157%" height="15" fill="rgb(222,134,10)"/><text x="81.0005%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::command::bind::Binder::new (1 samples, 0.02%)</title><rect x="80.7662%" y="1077" width="0.0157%" height="15" fill="rgb(230,226,20)"/><text x="81.0162%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="80.7662%" y="1061" width="0.0157%" height="15" fill="rgb(251,111,25)"/><text x="81.0162%" y="1071.50"></text></g><g><title>rvfm_main`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="80.7819%" y="1061" width="0.0157%" height="15" fill="rgb(224,40,46)"/><text x="81.0319%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="80.7819%" y="1045" width="0.0157%" height="15" fill="rgb(236,108,47)"/><text x="81.0319%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="80.7819%" y="1029" width="0.0157%" height="15" fill="rgb(234,93,0)"/><text x="81.0319%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="80.7819%" y="1013" width="0.0157%" height="15" fill="rgb(224,213,32)"/><text x="81.0319%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="80.7819%" y="997" width="0.0157%" height="15" fill="rgb(251,11,48)"/><text x="81.0319%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="80.7819%" y="981" width="0.0157%" height="15" fill="rgb(236,173,5)"/><text x="81.0319%" y="991.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (2 samples, 0.03%)</title><rect x="80.7819%" y="1077" width="0.0314%" height="15" fill="rgb(230,95,12)"/><text x="81.0319%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.02%)</title><rect x="80.7976%" y="1061" width="0.0157%" height="15" fill="rgb(232,209,1)"/><text x="81.0476%" y="1071.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (128 samples, 2.01%)</title><rect x="78.8664%" y="1109" width="2.0097%" height="15" fill="rgb(232,6,1)"/><text x="79.1164%" y="1119.50">r..</text></g><g><title>rvfm_main`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (126 samples, 1.98%)</title><rect x="78.8978%" y="1093" width="1.9783%" height="15" fill="rgb(210,224,50)"/><text x="79.1478%" y="1103.50">r..</text></g><g><title>rvfm_main`wgpu_core::track::TrackerSet::merge_extend (4 samples, 0.06%)</title><rect x="80.8133%" y="1077" width="0.0628%" height="15" fill="rgb(228,127,35)"/><text x="81.0633%" y="1087.50"></text></g><g><title>rvfm_main`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="80.8604%" y="1061" width="0.0157%" height="15" fill="rgb(245,102,45)"/><text x="81.1104%" y="1071.50"></text></g><g><title>rvfm_main`wgpu_core::device::Device&lt;B&gt;::maintain (2 samples, 0.03%)</title><rect x="80.8761%" y="1093" width="0.0314%" height="15" fill="rgb(214,1,49)"/><text x="81.1261%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::SuspectedResources::clear (1 samples, 0.02%)</title><rect x="80.9075%" y="1093" width="0.0157%" height="15" fill="rgb(226,163,40)"/><text x="81.1575%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="80.9860%" y="1077" width="0.0157%" height="15" fill="rgb(239,212,28)"/><text x="81.2360%" y="1087.50"></text></g><g><title>rvfm_main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="81.0017%" y="1077" width="0.0157%" height="15" fill="rgb(220,20,13)"/><text x="81.2517%" y="1087.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelBlitCommandEncoder::~IGAccelBlitCommandEncoder (1 samples, 0.02%)</title><rect x="81.0174%" y="1029" width="0.0157%" height="15" fill="rgb(210,164,35)"/><text x="81.2674%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="81.0174%" y="1013" width="0.0157%" height="15" fill="rgb(248,109,41)"/><text x="81.2674%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="81.0174%" y="997" width="0.0157%" height="15" fill="rgb(238,23,50)"/><text x="81.2674%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="81.0331%" y="1029" width="0.0157%" height="15" fill="rgb(211,48,49)"/><text x="81.2831%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::finish (3 samples, 0.05%)</title><rect x="81.0174%" y="1077" width="0.0471%" height="15" fill="rgb(223,36,21)"/><text x="81.2674%" y="1087.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::EncoderState::end (3 samples, 0.05%)</title><rect x="81.0174%" y="1061" width="0.0471%" height="15" fill="rgb(207,123,46)"/><text x="81.2674%" y="1071.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder endEncoding] (3 samples, 0.05%)</title><rect x="81.0174%" y="1045" width="0.0471%" height="15" fill="rgb(240,218,32)"/><text x="81.2674%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="81.0488%" y="1029" width="0.0157%" height="15" fill="rgb(252,5,43)"/><text x="81.2988%" y="1039.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (2 samples, 0.03%)</title><rect x="81.0802%" y="1029" width="0.0314%" height="15" fill="rgb(252,84,19)"/><text x="81.3302%" y="1039.50"></text></g><g><title>Metal`MTLReportFailureTypeEnabled (1 samples, 0.02%)</title><rect x="81.1116%" y="1029" width="0.0157%" height="15" fill="rgb(243,152,39)"/><text x="81.3616%" y="1039.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (4 samples, 0.06%)</title><rect x="81.0802%" y="1045" width="0.0628%" height="15" fill="rgb(234,160,15)"/><text x="81.3302%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="81.1273%" y="1029" width="0.0157%" height="15" fill="rgb(237,34,20)"/><text x="81.3773%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (5 samples, 0.08%)</title><rect x="81.0802%" y="1061" width="0.0785%" height="15" fill="rgb(229,97,13)"/><text x="81.3302%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="81.1430%" y="1045" width="0.0157%" height="15" fill="rgb(234,71,50)"/><text x="81.3930%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (1 samples, 0.02%)</title><rect x="81.1587%" y="1061" width="0.0157%" height="15" fill="rgb(253,155,4)"/><text x="81.4087%" y="1071.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.02%)</title><rect x="81.1587%" y="1045" width="0.0157%" height="15" fill="rgb(222,185,37)"/><text x="81.4087%" y="1055.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.02%)</title><rect x="81.1587%" y="1029" width="0.0157%" height="15" fill="rgb(251,177,13)"/><text x="81.4087%" y="1039.50"></text></g><g><title>libdispatch.dylib`dispatch_semaphore_wait (1 samples, 0.02%)</title><rect x="81.1587%" y="1013" width="0.0157%" height="15" fill="rgb(250,179,40)"/><text x="81.4087%" y="1023.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (1 samples, 0.02%)</title><rect x="81.1744%" y="1061" width="0.0157%" height="15" fill="rgb(242,44,2)"/><text x="81.4244%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_autorelease (1 samples, 0.02%)</title><rect x="81.1744%" y="1045" width="0.0157%" height="15" fill="rgb(216,177,13)"/><text x="81.4244%" y="1055.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (1 samples, 0.02%)</title><rect x="81.1901%" y="1061" width="0.0157%" height="15" fill="rgb(216,106,43)"/><text x="81.4401%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="81.1901%" y="1045" width="0.0157%" height="15" fill="rgb(216,183,2)"/><text x="81.4401%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="81.1901%" y="1029" width="0.0157%" height="15" fill="rgb(249,75,3)"/><text x="81.4401%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="81.1901%" y="1013" width="0.0157%" height="15" fill="rgb(219,67,39)"/><text x="81.4401%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="81.1901%" y="997" width="0.0157%" height="15" fill="rgb(253,228,2)"/><text x="81.4401%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="81.1901%" y="981" width="0.0157%" height="15" fill="rgb(235,138,27)"/><text x="81.4401%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="81.1901%" y="965" width="0.0157%" height="15" fill="rgb(236,97,51)"/><text x="81.4401%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="81.2058%" y="1061" width="0.0314%" height="15" fill="rgb(240,80,30)"/><text x="81.4558%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="81.2215%" y="1045" width="0.0157%" height="15" fill="rgb(230,178,19)"/><text x="81.4715%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="81.2215%" y="1029" width="0.0157%" height="15" fill="rgb(210,190,27)"/><text x="81.4715%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit (12 samples, 0.19%)</title><rect x="81.0645%" y="1077" width="0.1884%" height="15" fill="rgb(222,107,31)"/><text x="81.3145%" y="1087.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (1 samples, 0.02%)</title><rect x="81.2372%" y="1061" width="0.0157%" height="15" fill="rgb(216,127,34)"/><text x="81.4872%" y="1071.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (1 samples, 0.02%)</title><rect x="81.2372%" y="1045" width="0.0157%" height="15" fill="rgb(234,116,52)"/><text x="81.4872%" y="1055.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.02%)</title><rect x="81.2372%" y="1029" width="0.0157%" height="15" fill="rgb(222,124,15)"/><text x="81.4872%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="81.2372%" y="1013" width="0.0157%" height="15" fill="rgb(231,179,28)"/><text x="81.4872%" y="1023.50"></text></g><g><title>rvfm_main`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.03%)</title><rect x="81.2529%" y="1077" width="0.0314%" height="15" fill="rgb(226,93,45)"/><text x="81.5029%" y="1087.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (7 samples, 0.11%)</title><rect x="81.2843%" y="1077" width="0.1099%" height="15" fill="rgb(215,8,51)"/><text x="81.5343%" y="1087.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::wait_for_readers (7 samples, 0.11%)</title><rect x="81.2843%" y="1061" width="0.1099%" height="15" fill="rgb(223,106,5)"/><text x="81.5343%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (7 samples, 0.11%)</title><rect x="81.2843%" y="1045" width="0.1099%" height="15" fill="rgb(250,191,5)"/><text x="81.5343%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.02%)</title><rect x="81.4100%" y="1061" width="0.0157%" height="15" fill="rgb(242,132,44)"/><text x="81.6600%" y="1071.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (3 samples, 0.05%)</title><rect x="81.3943%" y="1077" width="0.0471%" height="15" fill="rgb(251,152,29)"/><text x="81.6443%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="81.4257%" y="1061" width="0.0157%" height="15" fill="rgb(218,179,5)"/><text x="81.6757%" y="1071.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::wait_for_readers (1 samples, 0.02%)</title><rect x="81.4414%" y="1077" width="0.0157%" height="15" fill="rgb(227,67,19)"/><text x="81.6914%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::after_submit_internal (2 samples, 0.03%)</title><rect x="81.4571%" y="1077" width="0.0314%" height="15" fill="rgb(233,119,31)"/><text x="81.7071%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="81.4728%" y="1061" width="0.0157%" height="15" fill="rgb(241,120,22)"/><text x="81.7228%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="81.5827%" y="1061" width="0.0471%" height="15" fill="rgb(224,102,30)"/><text x="81.8327%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="81.6298%" y="1045" width="0.0157%" height="15" fill="rgb(210,164,37)"/><text x="81.8798%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::terminate (2 samples, 0.03%)</title><rect x="81.6926%" y="1013" width="0.0314%" height="15" fill="rgb(226,191,16)"/><text x="81.9426%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="81.6926%" y="997" width="0.0314%" height="15" fill="rgb(214,40,45)"/><text x="81.9426%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (10 samples, 0.16%)</title><rect x="81.7240%" y="981" width="0.1570%" height="15" fill="rgb(244,29,26)"/><text x="81.9740%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (10 samples, 0.16%)</title><rect x="81.7240%" y="965" width="0.1570%" height="15" fill="rgb(216,16,5)"/><text x="81.9740%" y="975.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (12 samples, 0.19%)</title><rect x="81.7240%" y="997" width="0.1884%" height="15" fill="rgb(249,76,35)"/><text x="81.9740%" y="1007.50"></text></g><g><title>libdispatch.dylib`dispatch_async (2 samples, 0.03%)</title><rect x="81.8810%" y="981" width="0.0314%" height="15" fill="rgb(207,11,44)"/><text x="82.1310%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (1 samples, 0.02%)</title><rect x="81.8967%" y="965" width="0.0157%" height="15" fill="rgb(228,190,49)"/><text x="82.1467%" y="975.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (1 samples, 0.02%)</title><rect x="81.8967%" y="949" width="0.0157%" height="15" fill="rgb(214,173,12)"/><text x="82.1467%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="81.8967%" y="933" width="0.0157%" height="15" fill="rgb(218,26,35)"/><text x="82.1467%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="81.8967%" y="917" width="0.0157%" height="15" fill="rgb(220,200,19)"/><text x="82.1467%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="81.8967%" y="901" width="0.0157%" height="15" fill="rgb(239,95,49)"/><text x="82.1467%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="81.8967%" y="885" width="0.0157%" height="15" fill="rgb(235,85,53)"/><text x="82.1467%" y="895.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (2 samples, 0.03%)</title><rect x="81.9281%" y="981" width="0.0314%" height="15" fill="rgb(233,133,31)"/><text x="82.1781%" y="991.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.03%)</title><rect x="81.9281%" y="965" width="0.0314%" height="15" fill="rgb(218,25,20)"/><text x="82.1781%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="81.9438%" y="949" width="0.0157%" height="15" fill="rgb(252,210,38)"/><text x="82.1938%" y="959.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (4 samples, 0.06%)</title><rect x="81.9124%" y="997" width="0.0628%" height="15" fill="rgb(242,134,21)"/><text x="82.1624%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.02%)</title><rect x="81.9595%" y="981" width="0.0157%" height="15" fill="rgb(213,28,48)"/><text x="82.2095%" y="991.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageDealloc (3 samples, 0.05%)</title><rect x="81.9752%" y="997" width="0.0471%" height="15" fill="rgb(250,196,2)"/><text x="82.2252%" y="1007.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageReset (2 samples, 0.03%)</title><rect x="81.9909%" y="981" width="0.0314%" height="15" fill="rgb(227,5,17)"/><text x="82.2409%" y="991.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (20 samples, 0.31%)</title><rect x="81.7240%" y="1013" width="0.3140%" height="15" fill="rgb(221,226,24)"/><text x="81.9740%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (1 samples, 0.02%)</title><rect x="82.0223%" y="997" width="0.0157%" height="15" fill="rgb(211,5,48)"/><text x="82.2723%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="82.0380%" y="997" width="0.0157%" height="15" fill="rgb(219,150,6)"/><text x="82.2880%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (24 samples, 0.38%)</title><rect x="81.6926%" y="1029" width="0.3768%" height="15" fill="rgb(251,46,16)"/><text x="81.9426%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.03%)</title><rect x="82.0380%" y="1013" width="0.0314%" height="15" fill="rgb(220,204,40)"/><text x="82.2880%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="82.0537%" y="997" width="0.0157%" height="15" fill="rgb(211,85,2)"/><text x="82.3037%" y="1007.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::reset (29 samples, 0.46%)</title><rect x="81.6298%" y="1061" width="0.4553%" height="15" fill="rgb(229,17,7)"/><text x="81.8798%" y="1071.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::CommandBufferInner::reset (28 samples, 0.44%)</title><rect x="81.6455%" y="1045" width="0.4396%" height="15" fill="rgb(239,72,28)"/><text x="81.8955%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="82.0694%" y="1029" width="0.0157%" height="15" fill="rgb(230,47,54)"/><text x="82.3194%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::get_fence_status (1 samples, 0.02%)</title><rect x="82.0851%" y="1061" width="0.0157%" height="15" fill="rgb(214,50,8)"/><text x="82.3351%" y="1071.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="82.1008%" y="1061" width="0.0157%" height="15" fill="rgb(216,198,43)"/><text x="82.3508%" y="1071.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="82.1165%" y="1061" width="0.0157%" height="15" fill="rgb(234,20,35)"/><text x="82.3665%" y="1071.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.02%)</title><rect x="82.1322%" y="1061" width="0.0157%" height="15" fill="rgb(254,45,19)"/><text x="82.3822%" y="1071.50"></text></g><g><title>rvfm_main`gfx_descriptor::allocator::DescriptorAllocator&lt;B&gt;::free (1 samples, 0.02%)</title><rect x="82.1322%" y="1045" width="0.0157%" height="15" fill="rgb(219,14,44)"/><text x="82.3822%" y="1055.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_framebuffers (2 samples, 0.03%)</title><rect x="82.1479%" y="1061" width="0.0314%" height="15" fill="rgb(217,220,26)"/><text x="82.3979%" y="1071.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="82.1636%" y="1045" width="0.0157%" height="15" fill="rgb(213,158,28)"/><text x="82.4136%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="82.1636%" y="1029" width="0.0157%" height="15" fill="rgb(252,51,52)"/><text x="82.4136%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="82.1636%" y="1013" width="0.0157%" height="15" fill="rgb(246,89,16)"/><text x="82.4136%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::terminate (2 samples, 0.03%)</title><rect x="82.1950%" y="1029" width="0.0314%" height="15" fill="rgb(216,158,49)"/><text x="82.4450%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="82.2107%" y="1013" width="0.0157%" height="15" fill="rgb(236,107,19)"/><text x="82.4607%" y="1023.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (2 samples, 0.03%)</title><rect x="82.2264%" y="1013" width="0.0314%" height="15" fill="rgb(228,185,30)"/><text x="82.4764%" y="1023.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (1 samples, 0.02%)</title><rect x="82.2421%" y="997" width="0.0157%" height="15" fill="rgb(246,134,8)"/><text x="82.4921%" y="1007.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (3 samples, 0.05%)</title><rect x="82.2264%" y="1029" width="0.0471%" height="15" fill="rgb(214,143,50)"/><text x="82.4764%" y="1039.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (1 samples, 0.02%)</title><rect x="82.2578%" y="1013" width="0.0157%" height="15" fill="rgb(228,75,8)"/><text x="82.5078%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (6 samples, 0.09%)</title><rect x="82.1950%" y="1045" width="0.0942%" height="15" fill="rgb(207,175,4)"/><text x="82.4450%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="82.2735%" y="1029" width="0.0157%" height="15" fill="rgb(205,108,24)"/><text x="82.5235%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`small_size (1 samples, 0.02%)</title><rect x="82.2735%" y="1013" width="0.0157%" height="15" fill="rgb(244,120,49)"/><text x="82.5235%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="82.2892%" y="1045" width="0.0314%" height="15" fill="rgb(223,47,38)"/><text x="82.5392%" y="1055.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (11 samples, 0.17%)</title><rect x="82.1793%" y="1061" width="0.1727%" height="15" fill="rgb(229,179,11)"/><text x="82.4293%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="82.3206%" y="1045" width="0.0314%" height="15" fill="rgb(231,122,1)"/><text x="82.5706%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="82.3206%" y="1029" width="0.0314%" height="15" fill="rgb(245,119,9)"/><text x="82.5706%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.03%)</title><rect x="82.3206%" y="1013" width="0.0314%" height="15" fill="rgb(241,163,25)"/><text x="82.5706%" y="1023.50"></text></g><g><title>rvfm_main`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.3677%" y="1045" width="0.0157%" height="15" fill="rgb(217,214,3)"/><text x="82.6177%" y="1055.50"></text></g><g><title>rvfm_main`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="82.3834%" y="1045" width="0.0157%" height="15" fill="rgb(240,86,28)"/><text x="82.6334%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="82.3991%" y="965" width="0.0157%" height="15" fill="rgb(215,47,9)"/><text x="82.6491%" y="975.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="82.3991%" y="1045" width="0.0314%" height="15" fill="rgb(252,25,45)"/><text x="82.6491%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="82.3991%" y="1029" width="0.0314%" height="15" fill="rgb(251,164,9)"/><text x="82.6491%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.03%)</title><rect x="82.3991%" y="1013" width="0.0314%" height="15" fill="rgb(233,194,0)"/><text x="82.6491%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="82.3991%" y="997" width="0.0314%" height="15" fill="rgb(249,111,24)"/><text x="82.6491%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.03%)</title><rect x="82.3991%" y="981" width="0.0314%" height="15" fill="rgb(250,223,3)"/><text x="82.6491%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="82.4148%" y="965" width="0.0157%" height="15" fill="rgb(236,178,37)"/><text x="82.6648%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="82.4305%" y="1029" width="0.0157%" height="15" fill="rgb(241,158,50)"/><text x="82.6805%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="82.4305%" y="1013" width="0.0157%" height="15" fill="rgb(213,121,41)"/><text x="82.6805%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.03%)</title><rect x="82.4462%" y="1029" width="0.0314%" height="15" fill="rgb(240,92,3)"/><text x="82.6962%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="82.4619%" y="1013" width="0.0157%" height="15" fill="rgb(205,123,3)"/><text x="82.7119%" y="1023.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (4 samples, 0.06%)</title><rect x="82.4305%" y="1045" width="0.0628%" height="15" fill="rgb(205,97,47)"/><text x="82.6805%" y="1055.50"></text></g><g><title>rvfm_main`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.4776%" y="1029" width="0.0157%" height="15" fill="rgb(247,152,14)"/><text x="82.7276%" y="1039.50"></text></g><g><title>rvfm_main`&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.4776%" y="1013" width="0.0157%" height="15" fill="rgb(248,195,53)"/><text x="82.7276%" y="1023.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::SuspectedResources::add_trackers (1 samples, 0.02%)</title><rect x="82.4933%" y="1045" width="0.0157%" height="15" fill="rgb(226,201,16)"/><text x="82.7433%" y="1055.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (2 samples, 0.03%)</title><rect x="82.5090%" y="1045" width="0.0314%" height="15" fill="rgb(205,98,0)"/><text x="82.7590%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.03%)</title><rect x="82.5718%" y="997" width="0.0314%" height="15" fill="rgb(214,191,48)"/><text x="82.8218%" y="1007.50"></text></g><g><title>rvfm_main`wgpu_core::device::Device&lt;B&gt;::maintain (72 samples, 1.13%)</title><rect x="81.4885%" y="1077" width="1.1305%" height="15" fill="rgb(237,112,39)"/><text x="81.7385%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (17 samples, 0.27%)</title><rect x="82.3520%" y="1061" width="0.2669%" height="15" fill="rgb(247,203,27)"/><text x="82.6020%" y="1071.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (5 samples, 0.08%)</title><rect x="82.5404%" y="1045" width="0.0785%" height="15" fill="rgb(235,124,28)"/><text x="82.7904%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.06%)</title><rect x="82.5561%" y="1029" width="0.0628%" height="15" fill="rgb(208,207,46)"/><text x="82.8061%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.06%)</title><rect x="82.5561%" y="1013" width="0.0628%" height="15" fill="rgb(234,176,4)"/><text x="82.8061%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="82.6032%" y="997" width="0.0157%" height="15" fill="rgb(230,133,28)"/><text x="82.8532%" y="1007.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (112 samples, 1.76%)</title><rect x="80.8761%" y="1109" width="1.7585%" height="15" fill="rgb(211,137,40)"/><text x="81.1261%" y="1119.50"></text></g><g><title>rvfm_main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (109 samples, 1.71%)</title><rect x="80.9232%" y="1093" width="1.7114%" height="15" fill="rgb(254,35,13)"/><text x="81.1732%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::track_submission (1 samples, 0.02%)</title><rect x="82.6189%" y="1077" width="0.0157%" height="15" fill="rgb(225,49,51)"/><text x="82.8689%" y="1087.50"></text></g><g><title>rvfm_main`&lt;alloc::vec::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.6189%" y="1061" width="0.0157%" height="15" fill="rgb(251,10,15)"/><text x="82.8689%" y="1071.50"></text></g><g><title>rvfm_main`rvfm_main::fm_mio::FmMemoryIO::ram_sync_read (6 samples, 0.09%)</title><rect x="82.6346%" y="1109" width="0.0942%" height="15" fill="rgb(228,207,15)"/><text x="82.8846%" y="1119.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (5 samples, 0.08%)</title><rect x="82.6503%" y="1093" width="0.0785%" height="15" fill="rgb(241,99,19)"/><text x="82.9003%" y="1103.50"></text></g><g><title>rvfm_main`wgpu::CommandEncoder::begin_render_pass (2 samples, 0.03%)</title><rect x="82.7288%" y="1109" width="0.0314%" height="15" fill="rgb(207,104,49)"/><text x="82.9788%" y="1119.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_begin_render_pass (1 samples, 0.02%)</title><rect x="82.7445%" y="1093" width="0.0157%" height="15" fill="rgb(234,99,18)"/><text x="82.9945%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::command::render::RenderPass::new (1 samples, 0.02%)</title><rect x="82.7445%" y="1077" width="0.0157%" height="15" fill="rgb(213,191,49)"/><text x="82.9945%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::LifeGuard::use_at (1 samples, 0.02%)</title><rect x="82.7602%" y="1093" width="0.0157%" height="15" fill="rgb(210,226,19)"/><text x="83.0102%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::device::all_image_stages (1 samples, 0.02%)</title><rect x="82.7759%" y="1093" width="0.0157%" height="15" fill="rgb(229,97,18)"/><text x="83.0259%" y="1103.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (47 samples, 0.74%)</title><rect x="82.8230%" y="1077" width="0.7379%" height="15" fill="rgb(211,167,15)"/><text x="83.0730%" y="1087.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`FenceList::clearFences (1 samples, 0.02%)</title><rect x="83.5924%" y="1029" width="0.0157%" height="15" fill="rgb(210,169,34)"/><text x="83.8424%" y="1039.50"></text></g><g><title>IOAccelerator`ioAccelResourceListAddNewGroupAndResource (1 samples, 0.02%)</title><rect x="83.6238%" y="981" width="0.0157%" height="15" fill="rgb(241,121,31)"/><text x="83.8738%" y="991.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (1 samples, 0.02%)</title><rect x="83.6395%" y="981" width="0.0157%" height="15" fill="rgb(232,40,11)"/><text x="83.8895%" y="991.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (1 samples, 0.02%)</title><rect x="83.6395%" y="965" width="0.0157%" height="15" fill="rgb(205,86,26)"/><text x="83.8895%" y="975.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="83.6395%" y="949" width="0.0157%" height="15" fill="rgb(231,126,28)"/><text x="83.8895%" y="959.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="83.6395%" y="933" width="0.0157%" height="15" fill="rgb(219,221,18)"/><text x="83.8895%" y="943.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (1 samples, 0.02%)</title><rect x="83.6395%" y="917" width="0.0157%" height="15" fill="rgb(211,40,0)"/><text x="83.8895%" y="927.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="83.6395%" y="901" width="0.0157%" height="15" fill="rgb(239,85,43)"/><text x="83.8895%" y="911.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="83.6395%" y="885" width="0.0157%" height="15" fill="rgb(231,55,21)"/><text x="83.8895%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="83.6395%" y="869" width="0.0157%" height="15" fill="rgb(225,184,43)"/><text x="83.8895%" y="879.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`bool IntelCommandBuffer::initialize&lt;(IntelConstants::eEngineID)2&gt; (5 samples, 0.08%)</title><rect x="83.6081%" y="997" width="0.0785%" height="15" fill="rgb(251,158,41)"/><text x="83.8581%" y="1007.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageBeginSegment (2 samples, 0.03%)</title><rect x="83.6552%" y="981" width="0.0314%" height="15" fill="rgb(234,159,37)"/><text x="83.9052%" y="991.50"></text></g><g><title>Metal`_mtlIOAccelCommandBufferStorageBeginSegmentList (2 samples, 0.03%)</title><rect x="83.6552%" y="965" width="0.0314%" height="15" fill="rgb(216,204,22)"/><text x="83.9052%" y="975.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (1 samples, 0.02%)</title><rect x="83.6866%" y="997" width="0.0157%" height="15" fill="rgb(214,17,3)"/><text x="83.9366%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelBlitCommandEncoder::beginEncoding (7 samples, 0.11%)</title><rect x="83.6081%" y="1029" width="0.1099%" height="15" fill="rgb(212,111,17)"/><text x="83.8581%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`bool IGAccelEncoderBase::initialize&lt;(IntelConstants::eEngineID)2&gt; (7 samples, 0.11%)</title><rect x="83.6081%" y="1013" width="0.1099%" height="15" fill="rgb(221,157,24)"/><text x="83.8581%" y="1023.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageBeginSegment (1 samples, 0.02%)</title><rect x="83.7023%" y="997" width="0.0157%" height="15" fill="rgb(252,16,13)"/><text x="83.9523%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGBufferMemory&lt;1ul&gt;::init (1 samples, 0.02%)</title><rect x="83.7180%" y="1029" width="0.0157%" height="15" fill="rgb(221,62,2)"/><text x="83.9680%" y="1039.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder initWithCommandBuffer:] (1 samples, 0.02%)</title><rect x="83.7337%" y="1029" width="0.0157%" height="15" fill="rgb(247,87,22)"/><text x="83.9837%" y="1039.50"></text></g><g><title>Metal`-[_MTLCommandEncoder initWithCommandBuffer:] (1 samples, 0.02%)</title><rect x="83.7337%" y="1013" width="0.0157%" height="15" fill="rgb(215,73,9)"/><text x="83.9837%" y="1023.50"></text></g><g><title>Metal`-[_MTLCommandBuffer isStatEnabled] (1 samples, 0.02%)</title><rect x="83.7337%" y="997" width="0.0157%" height="15" fill="rgb(207,175,33)"/><text x="83.9837%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="83.7494%" y="1029" width="0.0157%" height="15" fill="rgb(243,129,54)"/><text x="83.9994%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder initWithCommandBuffer:stateDescriptor:] (14 samples, 0.22%)</title><rect x="83.5767%" y="1045" width="0.2198%" height="15" fill="rgb(227,119,45)"/><text x="83.8267%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="83.7651%" y="1029" width="0.0314%" height="15" fill="rgb(205,109,36)"/><text x="84.0151%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.03%)</title><rect x="83.7651%" y="1013" width="0.0314%" height="15" fill="rgb(205,6,39)"/><text x="84.0151%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="83.7651%" y="997" width="0.0314%" height="15" fill="rgb(221,32,16)"/><text x="84.0151%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="83.7651%" y="981" width="0.0314%" height="15" fill="rgb(228,144,50)"/><text x="84.0151%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="83.7651%" y="965" width="0.0314%" height="15" fill="rgb(229,201,53)"/><text x="84.0151%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="83.7808%" y="949" width="0.0157%" height="15" fill="rgb(249,153,27)"/><text x="84.0308%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="83.7965%" y="1045" width="0.0157%" height="15" fill="rgb(227,106,25)"/><text x="84.0465%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer blitCommandEncoder] (17 samples, 0.27%)</title><rect x="83.5610%" y="1061" width="0.2669%" height="15" fill="rgb(230,65,29)"/><text x="83.8110%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="83.8122%" y="1045" width="0.0157%" height="15" fill="rgb(221,57,46)"/><text x="84.0622%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="83.8279%" y="1061" width="0.0314%" height="15" fill="rgb(229,161,17)"/><text x="84.0779%" y="1071.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::EncoderState::end (1 samples, 0.02%)</title><rect x="83.8593%" y="1061" width="0.0157%" height="15" fill="rgb(222,213,11)"/><text x="84.1093%" y="1071.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelBlitCommandEncoder::initializeIndirectState (1 samples, 0.02%)</title><rect x="83.8907%" y="981" width="0.0157%" height="15" fill="rgb(235,35,13)"/><text x="84.1407%" y="991.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelBlitCommandEncoder::updateBlitKernels (3 samples, 0.05%)</title><rect x="83.9064%" y="981" width="0.0471%" height="15" fill="rgb(233,158,34)"/><text x="84.1564%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="83.9064%" y="965" width="0.0471%" height="15" fill="rgb(215,151,48)"/><text x="84.1564%" y="975.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGBL::blit3d_prepare_commands (1 samples, 0.02%)</title><rect x="83.9535%" y="981" width="0.0157%" height="15" fill="rgb(229,84,14)"/><text x="84.2035%" y="991.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (1 samples, 0.02%)</title><rect x="83.9692%" y="949" width="0.0157%" height="15" fill="rgb(229,68,14)"/><text x="84.2192%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::acquireHeap (4 samples, 0.06%)</title><rect x="83.9692%" y="965" width="0.0628%" height="15" fill="rgb(243,106,26)"/><text x="84.2192%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="83.9849%" y="949" width="0.0471%" height="15" fill="rgb(206,45,38)"/><text x="84.2349%" y="959.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelBlitCommandEncoder::programBlit (13 samples, 0.20%)</title><rect x="83.8750%" y="997" width="0.2041%" height="15" fill="rgb(226,6,15)"/><text x="84.1250%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::initialize (7 samples, 0.11%)</title><rect x="83.9692%" y="981" width="0.1099%" height="15" fill="rgb(232,22,54)"/><text x="84.2192%" y="991.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::allocateHeap (3 samples, 0.05%)</title><rect x="84.0320%" y="965" width="0.0471%" height="15" fill="rgb(229,222,32)"/><text x="84.2820%" y="975.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (2 samples, 0.03%)</title><rect x="84.0477%" y="949" width="0.0314%" height="15" fill="rgb(228,62,29)"/><text x="84.2977%" y="959.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (2 samples, 0.03%)</title><rect x="84.0477%" y="933" width="0.0314%" height="15" fill="rgb(251,103,34)"/><text x="84.2977%" y="943.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (2 samples, 0.03%)</title><rect x="84.0477%" y="917" width="0.0314%" height="15" fill="rgb(233,12,30)"/><text x="84.2977%" y="927.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (2 samples, 0.03%)</title><rect x="84.0477%" y="901" width="0.0314%" height="15" fill="rgb(238,52,0)"/><text x="84.2977%" y="911.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (2 samples, 0.03%)</title><rect x="84.0477%" y="885" width="0.0314%" height="15" fill="rgb(223,98,5)"/><text x="84.2977%" y="895.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.03%)</title><rect x="84.0477%" y="869" width="0.0314%" height="15" fill="rgb(228,75,37)"/><text x="84.2977%" y="879.50"></text></g><g><title>IOKit`io_connect_method (2 samples, 0.03%)</title><rect x="84.0477%" y="853" width="0.0314%" height="15" fill="rgb(205,115,49)"/><text x="84.2977%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.03%)</title><rect x="84.0477%" y="837" width="0.0314%" height="15" fill="rgb(250,154,43)"/><text x="84.2977%" y="847.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:] (14 samples, 0.22%)</title><rect x="83.8750%" y="1029" width="0.2198%" height="15" fill="rgb(226,43,29)"/><text x="84.1250%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToTexture (14 samples, 0.22%)</title><rect x="83.8750%" y="1013" width="0.2198%" height="15" fill="rgb(249,228,39)"/><text x="84.1250%" y="1023.50"></text></g><g><title>Metal`-[MTLIOAccelTexture sampleCount] (1 samples, 0.02%)</title><rect x="84.0791%" y="997" width="0.0157%" height="15" fill="rgb(216,79,43)"/><text x="84.3291%" y="1007.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::exec_blit (15 samples, 0.24%)</title><rect x="83.8750%" y="1061" width="0.2355%" height="15" fill="rgb(228,95,12)"/><text x="84.1250%" y="1071.50"></text></g><g><title>rvfm_main`metal::encoder::BlitCommandEncoderRef::copy_from_buffer_to_texture (15 samples, 0.24%)</title><rect x="83.8750%" y="1045" width="0.2355%" height="15" fill="rgb(249,221,15)"/><text x="84.1250%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToTexture (1 samples, 0.02%)</title><rect x="84.0948%" y="1029" width="0.0157%" height="15" fill="rgb(233,34,13)"/><text x="84.3448%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::copy_buffer_to_image (36 samples, 0.57%)</title><rect x="83.5610%" y="1077" width="0.5652%" height="15" fill="rgb(214,103,39)"/><text x="83.8110%" y="1087.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::new_blit_command_encoder (1 samples, 0.02%)</title><rect x="84.1105%" y="1061" width="0.0157%" height="15" fill="rgb(251,126,39)"/><text x="84.3605%" y="1071.50"></text></g><g><title>rvfm_main`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="84.1262%" y="1077" width="0.0157%" height="15" fill="rgb(214,216,36)"/><text x="84.3762%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.02%)</title><rect x="84.1419%" y="1061" width="0.0157%" height="15" fill="rgb(220,221,8)"/><text x="84.3919%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.02%)</title><rect x="84.2047%" y="1045" width="0.0157%" height="15" fill="rgb(240,216,3)"/><text x="84.4547%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (6 samples, 0.09%)</title><rect x="84.2204%" y="1045" width="0.0942%" height="15" fill="rgb(232,218,17)"/><text x="84.4704%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.02%)</title><rect x="84.3146%" y="1045" width="0.0157%" height="15" fill="rgb(229,163,45)"/><text x="84.5646%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_testcancel (1 samples, 0.02%)</title><rect x="84.3146%" y="1029" width="0.0157%" height="15" fill="rgb(231,110,42)"/><text x="84.5646%" y="1039.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (13 samples, 0.20%)</title><rect x="84.1419%" y="1077" width="0.2041%" height="15" fill="rgb(208,170,48)"/><text x="84.3919%" y="1087.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::wait_for_readers (12 samples, 0.19%)</title><rect x="84.1576%" y="1061" width="0.1884%" height="15" fill="rgb(239,116,25)"/><text x="84.4076%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_testcancel (1 samples, 0.02%)</title><rect x="84.3304%" y="1045" width="0.0157%" height="15" fill="rgb(219,200,50)"/><text x="84.5804%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.03%)</title><rect x="84.3618%" y="1061" width="0.0314%" height="15" fill="rgb(245,200,0)"/><text x="84.6118%" y="1071.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (6 samples, 0.09%)</title><rect x="84.3461%" y="1077" width="0.0942%" height="15" fill="rgb(245,119,33)"/><text x="84.5961%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.05%)</title><rect x="84.3932%" y="1061" width="0.0471%" height="15" fill="rgb(231,125,12)"/><text x="84.6432%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.05%)</title><rect x="84.3932%" y="1045" width="0.0471%" height="15" fill="rgb(216,96,41)"/><text x="84.6432%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.06%)</title><rect x="84.4403%" y="1061" width="0.0628%" height="15" fill="rgb(248,43,45)"/><text x="84.6903%" y="1071.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (2 samples, 0.03%)</title><rect x="84.5031%" y="1045" width="0.0314%" height="15" fill="rgb(217,222,7)"/><text x="84.7531%" y="1055.50"></text></g><g><title>CoreFoundation`-[__NSCFString cStringUsingEncoding:] (1 samples, 0.02%)</title><rect x="84.5188%" y="1029" width="0.0157%" height="15" fill="rgb(233,28,6)"/><text x="84.7688%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="84.5345%" y="1045" width="0.0314%" height="15" fill="rgb(231,218,15)"/><text x="84.7845%" y="1055.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (1 samples, 0.02%)</title><rect x="84.5659%" y="1045" width="0.0157%" height="15" fill="rgb(226,171,48)"/><text x="84.8159%" y="1055.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (1 samples, 0.02%)</title><rect x="84.5659%" y="1029" width="0.0157%" height="15" fill="rgb(235,201,9)"/><text x="84.8159%" y="1039.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.02%)</title><rect x="84.5659%" y="1013" width="0.0157%" height="15" fill="rgb(217,80,15)"/><text x="84.8159%" y="1023.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.02%)</title><rect x="84.5659%" y="997" width="0.0157%" height="15" fill="rgb(219,152,8)"/><text x="84.8159%" y="1007.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (1 samples, 0.02%)</title><rect x="84.5659%" y="981" width="0.0157%" height="15" fill="rgb(243,107,38)"/><text x="84.8159%" y="991.50"></text></g><g><title>IOAccelerator`IOAccelDeviceGetNextGlobalTraceID (1 samples, 0.02%)</title><rect x="84.6444%" y="981" width="0.0157%" height="15" fill="rgb(231,17,5)"/><text x="84.8944%" y="991.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.03%)</title><rect x="84.6601%" y="981" width="0.0314%" height="15" fill="rgb(209,25,54)"/><text x="84.9101%" y="991.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (7 samples, 0.11%)</title><rect x="84.5973%" y="997" width="0.1099%" height="15" fill="rgb(219,0,2)"/><text x="84.8473%" y="1007.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStoragePoolCreateStorage (1 samples, 0.02%)</title><rect x="84.6915%" y="981" width="0.0157%" height="15" fill="rgb(246,9,5)"/><text x="84.9415%" y="991.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageCreateExt (1 samples, 0.02%)</title><rect x="84.6915%" y="965" width="0.0157%" height="15" fill="rgb(226,159,4)"/><text x="84.9415%" y="975.50"></text></g><g><title>Metal`MTLIOAccelDeviceShmemPoolCreateShmem (1 samples, 0.02%)</title><rect x="84.6915%" y="949" width="0.0157%" height="15" fill="rgb(219,175,34)"/><text x="84.9415%" y="959.50"></text></g><g><title>Metal`-[MTLIOAccelDeviceShmem initWithDevice:shmemSize:] (1 samples, 0.02%)</title><rect x="84.6915%" y="933" width="0.0157%" height="15" fill="rgb(236,10,46)"/><text x="84.9415%" y="943.50"></text></g><g><title>IOAccelerator`IOAccelSharedCreateDeviceShmem (1 samples, 0.02%)</title><rect x="84.6915%" y="917" width="0.0157%" height="15" fill="rgb(240,211,16)"/><text x="84.9415%" y="927.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="84.6915%" y="901" width="0.0157%" height="15" fill="rgb(205,3,43)"/><text x="84.9415%" y="911.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="84.6915%" y="885" width="0.0157%" height="15" fill="rgb(245,7,22)"/><text x="84.9415%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="84.6915%" y="869" width="0.0157%" height="15" fill="rgb(239,132,32)"/><text x="84.9415%" y="879.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (10 samples, 0.16%)</title><rect x="84.5816%" y="1013" width="0.1570%" height="15" fill="rgb(228,202,34)"/><text x="84.8316%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="84.7072%" y="997" width="0.0314%" height="15" fill="rgb(254,200,22)"/><text x="84.9572%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.03%)</title><rect x="84.7072%" y="981" width="0.0314%" height="15" fill="rgb(219,10,39)"/><text x="84.9572%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="84.7072%" y="965" width="0.0314%" height="15" fill="rgb(226,210,39)"/><text x="84.9572%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="84.7072%" y="949" width="0.0314%" height="15" fill="rgb(208,219,16)"/><text x="84.9572%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="84.7072%" y="933" width="0.0314%" height="15" fill="rgb(216,158,51)"/><text x="84.9572%" y="943.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::IntelStateHeaps (1 samples, 0.02%)</title><rect x="84.7386%" y="1013" width="0.0157%" height="15" fill="rgb(233,14,44)"/><text x="84.9886%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (12 samples, 0.19%)</title><rect x="84.5816%" y="1029" width="0.1884%" height="15" fill="rgb(237,97,39)"/><text x="84.8316%" y="1039.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="84.7543%" y="1013" width="0.0157%" height="15" fill="rgb(218,198,43)"/><text x="85.0043%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="84.7543%" y="997" width="0.0157%" height="15" fill="rgb(231,104,20)"/><text x="85.0043%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="84.7543%" y="981" width="0.0157%" height="15" fill="rgb(254,36,13)"/><text x="85.0043%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="84.7543%" y="965" width="0.0157%" height="15" fill="rgb(248,14,50)"/><text x="85.0043%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="84.7543%" y="949" width="0.0157%" height="15" fill="rgb(217,107,29)"/><text x="85.0043%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="84.7543%" y="933" width="0.0157%" height="15" fill="rgb(251,169,33)"/><text x="85.0043%" y="943.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (19 samples, 0.30%)</title><rect x="84.5031%" y="1061" width="0.2983%" height="15" fill="rgb(217,108,32)"/><text x="84.7531%" y="1071.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (14 samples, 0.22%)</title><rect x="84.5816%" y="1045" width="0.2198%" height="15" fill="rgb(219,66,42)"/><text x="84.8316%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="84.7700%" y="1029" width="0.0314%" height="15" fill="rgb(206,180,7)"/><text x="85.0200%" y="1039.50"></text></g><g><title>CoreFoundation`_CFGetTSDCreateIfNeeded (1 samples, 0.02%)</title><rect x="84.8014%" y="981" width="0.0157%" height="15" fill="rgb(208,226,31)"/><text x="85.0514%" y="991.50"></text></g><g><title>libobjc.A.dylib`object_setClass (2 samples, 0.03%)</title><rect x="84.8171%" y="965" width="0.0314%" height="15" fill="rgb(218,26,49)"/><text x="85.0671%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="84.8485%" y="917" width="0.0157%" height="15" fill="rgb(233,197,48)"/><text x="85.0985%" y="927.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (4 samples, 0.06%)</title><rect x="84.8171%" y="981" width="0.0628%" height="15" fill="rgb(252,181,51)"/><text x="85.0671%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (2 samples, 0.03%)</title><rect x="84.8485%" y="965" width="0.0314%" height="15" fill="rgb(253,90,19)"/><text x="85.0985%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="84.8485%" y="949" width="0.0314%" height="15" fill="rgb(215,171,30)"/><text x="85.0985%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.03%)</title><rect x="84.8485%" y="933" width="0.0314%" height="15" fill="rgb(214,222,9)"/><text x="85.0985%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="84.8642%" y="917" width="0.0157%" height="15" fill="rgb(223,3,22)"/><text x="85.1142%" y="927.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::bind_buffer_memory (6 samples, 0.09%)</title><rect x="84.8014%" y="1061" width="0.0942%" height="15" fill="rgb(225,196,46)"/><text x="85.0514%" y="1071.50"></text></g><g><title>rvfm_main`metal::buffer::BufferRef::add_debug_marker (6 samples, 0.09%)</title><rect x="84.8014%" y="1045" width="0.0942%" height="15" fill="rgb(209,110,37)"/><text x="85.0514%" y="1055.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (6 samples, 0.09%)</title><rect x="84.8014%" y="1029" width="0.0942%" height="15" fill="rgb(249,89,12)"/><text x="85.0514%" y="1039.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (6 samples, 0.09%)</title><rect x="84.8014%" y="1013" width="0.0942%" height="15" fill="rgb(226,27,33)"/><text x="85.0514%" y="1023.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (6 samples, 0.09%)</title><rect x="84.8014%" y="997" width="0.0942%" height="15" fill="rgb(213,82,22)"/><text x="85.0514%" y="1007.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (1 samples, 0.02%)</title><rect x="84.8799%" y="981" width="0.0157%" height="15" fill="rgb(248,140,0)"/><text x="85.1299%" y="991.50"></text></g><g><title>rvfm_main`&lt;gfx_memory::allocator::linear::LinearAllocator&lt;B&gt; as gfx_memory::allocator::Allocator&lt;B&gt;&gt;::alloc (1 samples, 0.02%)</title><rect x="84.9113%" y="1045" width="0.0157%" height="15" fill="rgb(228,106,3)"/><text x="85.1613%" y="1055.50"></text></g><g><title>rvfm_main`gfx_memory::heaps::Heaps&lt;B&gt;::allocate (5 samples, 0.08%)</title><rect x="84.8956%" y="1061" width="0.0785%" height="15" fill="rgb(209,23,37)"/><text x="85.1456%" y="1071.50"></text></g><g><title>rvfm_main`gfx_memory::heaps::memory_type::MemoryType&lt;B&gt;::alloc (3 samples, 0.05%)</title><rect x="84.9270%" y="1045" width="0.0471%" height="15" fill="rgb(241,93,50)"/><text x="85.1770%" y="1055.50"></text></g><g><title>rvfm_main`&lt;gfx_memory::allocator::linear::LinearAllocator&lt;B&gt; as gfx_memory::allocator::Allocator&lt;B&gt;&gt;::alloc (2 samples, 0.03%)</title><rect x="84.9427%" y="1029" width="0.0314%" height="15" fill="rgb(253,46,43)"/><text x="85.1927%" y="1039.50"></text></g><g><title>rvfm_main`gfx_memory::allocator::allocate_memory_helper (1 samples, 0.02%)</title><rect x="84.9584%" y="1013" width="0.0157%" height="15" fill="rgb(226,206,43)"/><text x="85.2084%" y="1023.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::allocate_memory (1 samples, 0.02%)</title><rect x="84.9584%" y="997" width="0.0157%" height="15" fill="rgb(217,54,7)"/><text x="85.2084%" y="1007.50"></text></g><g><title>rvfm_main`metal::device::DeviceRef::new_buffer (1 samples, 0.02%)</title><rect x="84.9584%" y="981" width="0.0157%" height="15" fill="rgb(223,5,52)"/><text x="85.2084%" y="991.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (1 samples, 0.02%)</title><rect x="84.9584%" y="965" width="0.0157%" height="15" fill="rgb(206,52,46)"/><text x="85.2084%" y="975.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (1 samples, 0.02%)</title><rect x="84.9584%" y="949" width="0.0157%" height="15" fill="rgb(253,136,11)"/><text x="85.2084%" y="959.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (1 samples, 0.02%)</title><rect x="84.9584%" y="933" width="0.0157%" height="15" fill="rgb(208,106,33)"/><text x="85.2084%" y="943.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="84.9584%" y="917" width="0.0157%" height="15" fill="rgb(206,54,4)"/><text x="85.2084%" y="927.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="84.9584%" y="901" width="0.0157%" height="15" fill="rgb(213,3,15)"/><text x="85.2084%" y="911.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (1 samples, 0.02%)</title><rect x="84.9584%" y="885" width="0.0157%" height="15" fill="rgb(252,211,39)"/><text x="85.2084%" y="895.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="84.9584%" y="869" width="0.0157%" height="15" fill="rgb(223,6,36)"/><text x="85.2084%" y="879.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="84.9584%" y="853" width="0.0157%" height="15" fill="rgb(252,169,45)"/><text x="85.2084%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="84.9584%" y="837" width="0.0157%" height="15" fill="rgb(212,48,26)"/><text x="85.2084%" y="847.50"></text></g><g><title>rvfm_main`wgpu_core::device::queue::_&lt;impl wgpu_core::device::Device&lt;B&gt;&gt;::prepare_stage (35 samples, 0.55%)</title><rect x="84.4403%" y="1077" width="0.5495%" height="15" fill="rgb(251,102,48)"/><text x="84.6903%" y="1087.50"></text></g><g><title>rvfm_main`gfx_memory::usage::MemoryUsage::properties_required (1 samples, 0.02%)</title><rect x="84.9741%" y="1061" width="0.0157%" height="15" fill="rgb(243,208,16)"/><text x="85.2241%" y="1071.50"></text></g><g><title>rvfm_main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (141 samples, 2.21%)</title><rect x="82.7916%" y="1093" width="2.2138%" height="15" fill="rgb(219,96,24)"/><text x="83.0416%" y="1103.50">r..</text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (1 samples, 0.02%)</title><rect x="84.9898%" y="1077" width="0.0157%" height="15" fill="rgb(219,33,29)"/><text x="85.2398%" y="1087.50"></text></g><g><title>rvfm_main`wgpu::Queue::write_texture (144 samples, 2.26%)</title><rect x="82.7602%" y="1109" width="2.2610%" height="15" fill="rgb(223,176,5)"/><text x="83.0102%" y="1119.50">r..</text></g><g><title>rvfm_main`wgpu_core::hub::Token&lt;wgpu_core::hub::Root&gt;::root (1 samples, 0.02%)</title><rect x="85.0055%" y="1093" width="0.0157%" height="15" fill="rgb(228,140,14)"/><text x="85.2555%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (1 samples, 0.02%)</title><rect x="85.0212%" y="1109" width="0.0157%" height="15" fill="rgb(217,179,31)"/><text x="85.2712%" y="1119.50"></text></g><g><title>rvfm_main`rvfm_main::raw_fb_renderer::RawFBRenderer::render (428 samples, 6.72%)</title><rect x="78.3325%" y="1125" width="6.7201%" height="15" fill="rgb(230,9,30)"/><text x="78.5825%" y="1135.50">rvfm_main..</text></g><g><title>rvfm_main`wgpu_render_pass_set_bind_group (1 samples, 0.02%)</title><rect x="85.0369%" y="1109" width="0.0157%" height="15" fill="rgb(230,136,20)"/><text x="85.2869%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="85.0683%" y="1077" width="0.0157%" height="15" fill="rgb(215,210,22)"/><text x="85.3183%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="85.0840%" y="1077" width="0.0157%" height="15" fill="rgb(218,43,5)"/><text x="85.3340%" y="1087.50"></text></g><g><title>rvfm_main`std::sync::mpsc::blocking::WaitToken::wait (12 samples, 0.19%)</title><rect x="85.0526%" y="1093" width="0.1884%" height="15" fill="rgb(216,11,5)"/><text x="85.3026%" y="1103.50"></text></g><g><title>rvfm_main`std::thread::park (9 samples, 0.14%)</title><rect x="85.0997%" y="1077" width="0.1413%" height="15" fill="rgb(209,82,29)"/><text x="85.3497%" y="1087.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (9 samples, 0.14%)</title><rect x="85.0997%" y="1061" width="0.1413%" height="15" fill="rgb(244,115,12)"/><text x="85.3497%" y="1071.50"></text></g><g><title>rvfm_main`std::sync::mpsc::Receiver&lt;T&gt;::recv (13 samples, 0.20%)</title><rect x="85.0526%" y="1125" width="0.2041%" height="15" fill="rgb(222,82,18)"/><text x="85.3026%" y="1135.50"></text></g><g><title>rvfm_main`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (13 samples, 0.20%)</title><rect x="85.0526%" y="1109" width="0.2041%" height="15" fill="rgb(249,227,8)"/><text x="85.3026%" y="1119.50"></text></g><g><title>rvfm_main`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (1 samples, 0.02%)</title><rect x="85.2410%" y="1093" width="0.0157%" height="15" fill="rgb(253,141,45)"/><text x="85.4910%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.03%)</title><rect x="85.2567%" y="1045" width="0.0314%" height="15" fill="rgb(234,184,4)"/><text x="85.5067%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.03%)</title><rect x="85.2567%" y="1029" width="0.0314%" height="15" fill="rgb(218,194,23)"/><text x="85.5067%" y="1039.50"></text></g><g><title>rvfm_main`wgpu::CommandEncoder::finish (3 samples, 0.05%)</title><rect x="85.2567%" y="1125" width="0.0471%" height="15" fill="rgb(235,66,41)"/><text x="85.5067%" y="1135.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_finish (3 samples, 0.05%)</title><rect x="85.2567%" y="1109" width="0.0471%" height="15" fill="rgb(245,217,1)"/><text x="85.5067%" y="1119.50"></text></g><g><title>rvfm_main`wgpu_core::command::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_finish (3 samples, 0.05%)</title><rect x="85.2567%" y="1093" width="0.0471%" height="15" fill="rgb(229,91,1)"/><text x="85.5067%" y="1103.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (3 samples, 0.05%)</title><rect x="85.2567%" y="1077" width="0.0471%" height="15" fill="rgb(207,101,30)"/><text x="85.5067%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (3 samples, 0.05%)</title><rect x="85.2567%" y="1061" width="0.0471%" height="15" fill="rgb(223,82,49)"/><text x="85.5067%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_testcancel (1 samples, 0.02%)</title><rect x="85.2881%" y="1045" width="0.0157%" height="15" fill="rgb(218,167,17)"/><text x="85.5381%" y="1055.50"></text></g><g><title>rvfm_main`__rust_probestack (1 samples, 0.02%)</title><rect x="85.3038%" y="1093" width="0.0157%" height="15" fill="rgb(208,103,14)"/><text x="85.5538%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate (1 samples, 0.02%)</title><rect x="85.3195%" y="1093" width="0.0157%" height="15" fill="rgb(238,20,8)"/><text x="85.5695%" y="1103.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::reset (2 samples, 0.03%)</title><rect x="85.3352%" y="1061" width="0.0314%" height="15" fill="rgb(218,80,54)"/><text x="85.5852%" y="1071.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::CommandBufferInner::reset (2 samples, 0.03%)</title><rect x="85.3352%" y="1045" width="0.0314%" height="15" fill="rgb(240,144,17)"/><text x="85.5852%" y="1055.50"></text></g><g><title>CoreFoundation`CFStringConvertNSStringEncodingToEncoding (1 samples, 0.02%)</title><rect x="85.3666%" y="1029" width="0.0157%" height="15" fill="rgb(245,27,50)"/><text x="85.6166%" y="1039.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (2 samples, 0.03%)</title><rect x="85.3823%" y="1013" width="0.0314%" height="15" fill="rgb(251,51,7)"/><text x="85.6323%" y="1023.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (2 samples, 0.03%)</title><rect x="85.3823%" y="997" width="0.0314%" height="15" fill="rgb(245,217,29)"/><text x="85.6323%" y="1007.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (3 samples, 0.05%)</title><rect x="85.3823%" y="1029" width="0.0471%" height="15" fill="rgb(221,176,29)"/><text x="85.6323%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="85.4137%" y="1013" width="0.0157%" height="15" fill="rgb(212,180,24)"/><text x="85.6637%" y="1023.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (5 samples, 0.08%)</title><rect x="85.3666%" y="1061" width="0.0785%" height="15" fill="rgb(254,24,2)"/><text x="85.6166%" y="1071.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (5 samples, 0.08%)</title><rect x="85.3666%" y="1045" width="0.0785%" height="15" fill="rgb(230,100,2)"/><text x="85.6166%" y="1055.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.02%)</title><rect x="85.4294%" y="1029" width="0.0157%" height="15" fill="rgb(219,142,25)"/><text x="85.6794%" y="1039.50"></text></g><g><title>IOAccelerator`IOAccelDeviceGetNextGlobalTraceID (1 samples, 0.02%)</title><rect x="85.4608%" y="1013" width="0.0157%" height="15" fill="rgb(240,73,43)"/><text x="85.7108%" y="1023.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStoragePoolCreateStorage (1 samples, 0.02%)</title><rect x="85.4765%" y="997" width="0.0157%" height="15" fill="rgb(214,114,15)"/><text x="85.7265%" y="1007.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageCreateExt (1 samples, 0.02%)</title><rect x="85.4765%" y="981" width="0.0157%" height="15" fill="rgb(207,130,4)"/><text x="85.7265%" y="991.50"></text></g><g><title>Metal`MTLIOAccelDeviceShmemPoolCreateShmem (1 samples, 0.02%)</title><rect x="85.4765%" y="965" width="0.0157%" height="15" fill="rgb(221,25,40)"/><text x="85.7265%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="85.4765%" y="949" width="0.0157%" height="15" fill="rgb(241,184,7)"/><text x="85.7265%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="85.4922%" y="997" width="0.0157%" height="15" fill="rgb(235,159,4)"/><text x="85.7422%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.08%)</title><rect x="85.4451%" y="1045" width="0.0785%" height="15" fill="rgb(214,87,48)"/><text x="85.6951%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.06%)</title><rect x="85.4608%" y="1029" width="0.0628%" height="15" fill="rgb(246,198,24)"/><text x="85.7108%" y="1039.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.05%)</title><rect x="85.4765%" y="1013" width="0.0471%" height="15" fill="rgb(209,66,40)"/><text x="85.7265%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (1 samples, 0.02%)</title><rect x="85.5079%" y="997" width="0.0157%" height="15" fill="rgb(233,147,39)"/><text x="85.7579%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (1 samples, 0.02%)</title><rect x="85.5236%" y="1045" width="0.0157%" height="15" fill="rgb(231,145,52)"/><text x="85.7736%" y="1055.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (15 samples, 0.24%)</title><rect x="85.3352%" y="1077" width="0.2355%" height="15" fill="rgb(206,20,26)"/><text x="85.5852%" y="1087.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (8 samples, 0.13%)</title><rect x="85.4451%" y="1061" width="0.1256%" height="15" fill="rgb(238,220,4)"/><text x="85.6951%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (2 samples, 0.03%)</title><rect x="85.5393%" y="1045" width="0.0314%" height="15" fill="rgb(252,195,42)"/><text x="85.7893%" y="1055.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (1 samples, 0.02%)</title><rect x="85.5550%" y="1029" width="0.0157%" height="15" fill="rgb(209,10,6)"/><text x="85.8050%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::set_command_buffer_name (1 samples, 0.02%)</title><rect x="85.5707%" y="1077" width="0.0157%" height="15" fill="rgb(229,3,52)"/><text x="85.8207%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="85.5707%" y="1061" width="0.0157%" height="15" fill="rgb(253,49,37)"/><text x="85.8207%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="85.5707%" y="1045" width="0.0157%" height="15" fill="rgb(240,103,49)"/><text x="85.8207%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="85.5707%" y="1029" width="0.0157%" height="15" fill="rgb(250,182,30)"/><text x="85.8207%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="85.5707%" y="1013" width="0.0157%" height="15" fill="rgb(248,8,30)"/><text x="85.8207%" y="1023.50"></text></g><g><title>rvfm_main`wgpu_core::LifeGuard::add_ref (1 samples, 0.02%)</title><rect x="85.5864%" y="1077" width="0.0157%" height="15" fill="rgb(237,120,30)"/><text x="85.8364%" y="1087.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="85.6021%" y="1061" width="0.0157%" height="15" fill="rgb(221,146,34)"/><text x="85.8521%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="85.6178%" y="1061" width="0.0314%" height="15" fill="rgb(242,55,13)"/><text x="85.8678%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.03%)</title><rect x="85.6178%" y="1045" width="0.0314%" height="15" fill="rgb(242,112,31)"/><text x="85.8678%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="85.6178%" y="1029" width="0.0314%" height="15" fill="rgb(249,192,27)"/><text x="85.8678%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="85.6178%" y="1013" width="0.0314%" height="15" fill="rgb(208,204,44)"/><text x="85.8678%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="85.6178%" y="997" width="0.0314%" height="15" fill="rgb(208,93,54)"/><text x="85.8678%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="85.6335%" y="981" width="0.0157%" height="15" fill="rgb(242,1,31)"/><text x="85.8835%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.06%)</title><rect x="85.6492%" y="1061" width="0.0628%" height="15" fill="rgb(241,83,25)"/><text x="85.8992%" y="1071.50"></text></g><g><title>rvfm_main`wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate (8 samples, 0.13%)</title><rect x="85.6021%" y="1077" width="0.1256%" height="15" fill="rgb(205,169,50)"/><text x="85.8521%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::track::TrackerSet::new (1 samples, 0.02%)</title><rect x="85.7120%" y="1061" width="0.0157%" height="15" fill="rgb(239,186,37)"/><text x="85.9620%" y="1071.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (28 samples, 0.44%)</title><rect x="85.3038%" y="1109" width="0.4396%" height="15" fill="rgb(205,221,10)"/><text x="85.5538%" y="1119.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (26 samples, 0.41%)</title><rect x="85.3352%" y="1093" width="0.4082%" height="15" fill="rgb(218,196,15)"/><text x="85.5852%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::hub::IdentityManager::alloc (1 samples, 0.02%)</title><rect x="85.7277%" y="1077" width="0.0157%" height="15" fill="rgb(218,196,35)"/><text x="85.9777%" y="1087.50"></text></g><g><title>rvfm_main`wgpu::Device::create_command_encoder (29 samples, 0.46%)</title><rect x="85.3038%" y="1125" width="0.4553%" height="15" fill="rgb(233,63,24)"/><text x="85.5538%" y="1135.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (1 samples, 0.02%)</title><rect x="85.7434%" y="1109" width="0.0157%" height="15" fill="rgb(225,8,4)"/><text x="85.9934%" y="1119.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::create_image_view (1 samples, 0.02%)</title><rect x="85.7591%" y="1093" width="0.0157%" height="15" fill="rgb(234,105,35)"/><text x="86.0091%" y="1103.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::create_image_view (3 samples, 0.05%)</title><rect x="85.8062%" y="1077" width="0.0471%" height="15" fill="rgb(236,21,32)"/><text x="86.0562%" y="1087.50"></text></g><g><title>rvfm_main`gfx_backend_metal::conversions::_&lt;impl gfx_backend_metal::PrivateCapabilities&gt;::map_format_with_swizzle (2 samples, 0.03%)</title><rect x="85.8220%" y="1061" width="0.0314%" height="15" fill="rgb(228,109,6)"/><text x="86.0720%" y="1071.50"></text></g><g><title>rvfm_main`gfx_backend_metal::conversions::_&lt;impl gfx_backend_metal::PrivateCapabilities&gt;::map_format (1 samples, 0.02%)</title><rect x="85.8377%" y="1045" width="0.0157%" height="15" fill="rgb(229,215,31)"/><text x="86.0877%" y="1055.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.02%)</title><rect x="85.8534%" y="1077" width="0.0157%" height="15" fill="rgb(221,52,54)"/><text x="86.1034%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (8 samples, 0.13%)</title><rect x="85.7748%" y="1093" width="0.1256%" height="15" fill="rgb(252,129,43)"/><text x="86.0248%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Storage&lt;T,I&gt;::insert (2 samples, 0.03%)</title><rect x="85.8691%" y="1077" width="0.0314%" height="15" fill="rgb(248,183,27)"/><text x="86.1191%" y="1087.50"></text></g><g><title>rvfm_main`rvfm_main::gpu::Gpu::run_thread (659 samples, 10.35%)</title><rect x="75.5692%" y="1141" width="10.3470%" height="15" fill="rgb(250,0,22)"/><text x="75.8192%" y="1151.50">rvfm_main`rvfm_..</text></g><g><title>rvfm_main`wgpu::Texture::create_view (10 samples, 0.16%)</title><rect x="85.7591%" y="1125" width="0.1570%" height="15" fill="rgb(213,166,10)"/><text x="86.0091%" y="1135.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (10 samples, 0.16%)</title><rect x="85.7591%" y="1109" width="0.1570%" height="15" fill="rgb(207,163,36)"/><text x="86.0091%" y="1119.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Storage&lt;T,I&gt;::insert (1 samples, 0.02%)</title><rect x="85.9005%" y="1093" width="0.0157%" height="15" fill="rgb(208,122,22)"/><text x="86.1505%" y="1103.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (4,501 samples, 70.67%)</title><rect x="15.2614%" y="1221" width="70.6704%" height="15" fill="rgb(207,104,49)"/><text x="15.5114%" y="1231.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (4,501 samples, 70.67%)</title><rect x="15.2614%" y="1205" width="70.6704%" height="15" fill="rgb(248,211,50)"/><text x="15.5114%" y="1215.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>rvfm_main`std::sys::unix::thread::Thread::new::thread_start (4,455 samples, 69.95%)</title><rect x="15.9837%" y="1189" width="69.9482%" height="15" fill="rgb(217,13,45)"/><text x="16.2337%" y="1199.50">rvfm_main`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>rvfm_main`core::ops::function::FnOnce::call_once{{vtable.shim}} (4,455 samples, 69.95%)</title><rect x="15.9837%" y="1173" width="69.9482%" height="15" fill="rgb(211,216,49)"/><text x="16.2337%" y="1183.50">rvfm_main`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>rvfm_main`std::sys_common::backtrace::__rust_begin_short_backtrace (4,455 samples, 69.95%)</title><rect x="15.9837%" y="1157" width="69.9482%" height="15" fill="rgb(221,58,53)"/><text x="16.2337%" y="1167.50">rvfm_main`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rvfm_main`rvfm_main::raw_fb_renderer::RawFBRenderer::render (1 samples, 0.02%)</title><rect x="85.9162%" y="1141" width="0.0157%" height="15" fill="rgb(220,112,41)"/><text x="86.1662%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages_securely (1 samples, 0.02%)</title><rect x="86.0261%" y="1029" width="0.0157%" height="15" fill="rgb(236,38,28)"/><text x="86.2761%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.02%)</title><rect x="86.0261%" y="1013" width="0.0157%" height="15" fill="rgb(227,195,22)"/><text x="86.2761%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="86.0418%" y="1029" width="0.0157%" height="15" fill="rgb(214,55,33)"/><text x="86.2918%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.17%)</title><rect x="85.9476%" y="1093" width="0.1727%" height="15" fill="rgb(248,80,13)"/><text x="86.1976%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.17%)</title><rect x="85.9476%" y="1077" width="0.1727%" height="15" fill="rgb(238,52,6)"/><text x="86.1976%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.17%)</title><rect x="85.9476%" y="1061" width="0.1727%" height="15" fill="rgb(224,198,47)"/><text x="86.1976%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.17%)</title><rect x="85.9476%" y="1045" width="0.1727%" height="15" fill="rgb(233,171,20)"/><text x="86.1976%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.06%)</title><rect x="86.0575%" y="1029" width="0.0628%" height="15" fill="rgb(241,30,25)"/><text x="86.3075%" y="1039.50"></text></g><g><title>rvfm_main`rvfm_main::fm_mio::FmMemoryIO::new (13 samples, 0.20%)</title><rect x="85.9319%" y="1109" width="0.2041%" height="15" fill="rgb(207,171,38)"/><text x="86.1819%" y="1119.50"></text></g><g><title>rvfm_main`rvfm_main::dsp_dma::DspDmaDevice::new (1 samples, 0.02%)</title><rect x="86.1203%" y="1093" width="0.0157%" height="15" fill="rgb(234,70,1)"/><text x="86.3703%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="86.1203%" y="1077" width="0.0157%" height="15" fill="rgb(232,178,18)"/><text x="86.3703%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="86.1203%" y="1061" width="0.0157%" height="15" fill="rgb(241,78,40)"/><text x="86.3703%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="86.1203%" y="1045" width="0.0157%" height="15" fill="rgb(222,35,25)"/><text x="86.3703%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="86.1203%" y="1029" width="0.0157%" height="15" fill="rgb(207,92,16)"/><text x="86.3703%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="86.1203%" y="1013" width="0.0157%" height="15" fill="rgb(216,59,51)"/><text x="86.3703%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="86.1203%" y="997" width="0.0157%" height="15" fill="rgb(213,80,28)"/><text x="86.3703%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="86.2459%" y="901" width="0.0314%" height="15" fill="rgb(220,93,7)"/><text x="86.4959%" y="911.50"></text></g><g><title>rvfm_main`glslang::TFunction::TFunction(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.03%)</title><rect x="86.2773%" y="901" width="0.0314%" height="15" fill="rgb(225,24,44)"/><text x="86.5273%" y="911.50"></text></g><g><title>rvfm_main`glslang::TFunction::addParameter (1 samples, 0.02%)</title><rect x="86.3087%" y="901" width="0.0157%" height="15" fill="rgb(243,74,40)"/><text x="86.5587%" y="911.50"></text></g><g><title>rvfm_main`glslang::TParseContext::checkNoShaderLayouts (1 samples, 0.02%)</title><rect x="86.3244%" y="901" width="0.0157%" height="15" fill="rgb(228,39,7)"/><text x="86.5744%" y="911.50"></text></g><g><title>rvfm_main`glslang::TParseContext::declareVariable(glslang::TSourceLoc const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="86.3401%" y="901" width="0.0157%" height="15" fill="rgb(227,79,8)"/><text x="86.5901%" y="911.50"></text></g><g><title>rvfm_main`glslang::GetThreadPoolAllocator (1 samples, 0.02%)</title><rect x="86.3401%" y="885" width="0.0157%" height="15" fill="rgb(236,58,11)"/><text x="86.5901%" y="895.50"></text></g><g><title>rvfm_main`glslang::TFunction::getMangledName (1 samples, 0.02%)</title><rect x="86.3715%" y="885" width="0.0157%" height="15" fill="rgb(249,63,35)"/><text x="86.6215%" y="895.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::insert (4 samples, 0.06%)</title><rect x="86.3872%" y="885" width="0.0628%" height="15" fill="rgb(252,114,16)"/><text x="86.6372%" y="895.50"></text></g><g><title>rvfm_main`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (4 samples, 0.06%)</title><rect x="86.3872%" y="869" width="0.0628%" height="15" fill="rgb(254,151,24)"/><text x="86.6372%" y="879.50"></text></g><g><title>rvfm_main`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt; &gt; &gt;::__find_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;(std::__1::__tree_end_node&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;*&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (3 samples, 0.05%)</title><rect x="86.4029%" y="853" width="0.0471%" height="15" fill="rgb(253,54,39)"/><text x="86.6529%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.05%)</title><rect x="86.4029%" y="837" width="0.0471%" height="15" fill="rgb(243,25,45)"/><text x="86.6529%" y="847.50"></text></g><g><title>rvfm_main`glslang::TParseContext::handleFunctionDeclarator (7 samples, 0.11%)</title><rect x="86.3558%" y="901" width="0.1099%" height="15" fill="rgb(234,134,9)"/><text x="86.6058%" y="911.50"></text></g><g><title>rvfm_main`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="86.4500%" y="885" width="0.0157%" height="15" fill="rgb(227,166,31)"/><text x="86.7000%" y="895.50"></text></g><g><title>rvfm_main`glslang::TType::TType (1 samples, 0.02%)</title><rect x="86.4657%" y="901" width="0.0157%" height="15" fill="rgb(245,143,41)"/><text x="86.7157%" y="911.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::scan (1 samples, 0.02%)</title><rect x="86.4971%" y="869" width="0.0157%" height="15" fill="rgb(238,181,32)"/><text x="86.7471%" y="879.50"></text></g><g><title>libsystem_c.dylib`snprintf (6 samples, 0.09%)</title><rect x="86.5128%" y="853" width="0.0942%" height="15" fill="rgb(224,113,18)"/><text x="86.7628%" y="863.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (6 samples, 0.09%)</title><rect x="86.5128%" y="837" width="0.0942%" height="15" fill="rgb(240,229,28)"/><text x="86.7628%" y="847.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (6 samples, 0.09%)</title><rect x="86.5128%" y="821" width="0.0942%" height="15" fill="rgb(250,185,3)"/><text x="86.7628%" y="831.50"></text></g><g><title>libsystem_c.dylib`__v2printf (4 samples, 0.06%)</title><rect x="86.5442%" y="805" width="0.0628%" height="15" fill="rgb(212,59,25)"/><text x="86.7942%" y="815.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (4 samples, 0.06%)</title><rect x="86.5442%" y="789" width="0.0628%" height="15" fill="rgb(221,87,20)"/><text x="86.7942%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="86.5913%" y="773" width="0.0157%" height="15" fill="rgb(213,74,28)"/><text x="86.8413%" y="783.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (1 samples, 0.02%)</title><rect x="86.6070%" y="853" width="0.0157%" height="15" fill="rgb(224,132,34)"/><text x="86.8570%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.02%)</title><rect x="86.6227%" y="837" width="0.0157%" height="15" fill="rgb(222,101,24)"/><text x="86.8727%" y="847.50"></text></g><g><title>rvfm_main`glslang::TPpContext::MacroExpand (2 samples, 0.03%)</title><rect x="86.6227%" y="853" width="0.0314%" height="15" fill="rgb(254,142,4)"/><text x="86.8727%" y="863.50"></text></g><g><title>rvfm_main`glslang::TStringAtomMap::getAtom (1 samples, 0.02%)</title><rect x="86.6384%" y="837" width="0.0157%" height="15" fill="rgb(230,229,49)"/><text x="86.8884%" y="847.50"></text></g><g><title>rvfm_main`std::__1::__hash_const_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, void*&gt;*&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::__unordered_map_hasher&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::__unordered_map_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__hash_value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits (1 samples, 0.02%)</title><rect x="86.6384%" y="821" width="0.0157%" height="15" fill="rgb(238,70,47)"/><text x="86.8884%" y="831.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::getch (1 samples, 0.02%)</title><rect x="86.6541%" y="853" width="0.0157%" height="15" fill="rgb(231,160,17)"/><text x="86.9041%" y="863.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::getch (4 samples, 0.06%)</title><rect x="86.7012%" y="837" width="0.0628%" height="15" fill="rgb(218,68,53)"/><text x="86.9512%" y="847.50"></text></g><g><title>rvfm_main`glslang::TInputScanner::get (1 samples, 0.02%)</title><rect x="86.7483%" y="821" width="0.0157%" height="15" fill="rgb(236,111,10)"/><text x="86.9983%" y="831.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tokenize (17 samples, 0.27%)</title><rect x="86.5128%" y="869" width="0.2669%" height="15" fill="rgb(224,34,41)"/><text x="86.7628%" y="879.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::scan (7 samples, 0.11%)</title><rect x="86.6698%" y="853" width="0.1099%" height="15" fill="rgb(241,118,19)"/><text x="86.9198%" y="863.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::ungetch (1 samples, 0.02%)</title><rect x="86.7640%" y="837" width="0.0157%" height="15" fill="rgb(238,129,25)"/><text x="87.0140%" y="847.50"></text></g><g><title>rvfm_main`glslang::TInputScanner::unget (1 samples, 0.02%)</title><rect x="86.7640%" y="821" width="0.0157%" height="15" fill="rgb(238,22,31)"/><text x="87.0140%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="86.7797%" y="853" width="0.0157%" height="15" fill="rgb(222,174,48)"/><text x="87.0297%" y="863.50"></text></g><g><title>rvfm_main`glslang::TScanContext::identifierOrType (2 samples, 0.03%)</title><rect x="86.7797%" y="869" width="0.0314%" height="15" fill="rgb(206,152,40)"/><text x="87.0297%" y="879.50"></text></g><g><title>rvfm_main`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="86.7954%" y="853" width="0.0157%" height="15" fill="rgb(218,99,54)"/><text x="87.0454%" y="863.50"></text></g><g><title>rvfm_main`(anonymous namespace)::InitializeSymbolTable(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (49 samples, 0.77%)</title><rect x="86.1360%" y="949" width="0.7694%" height="15" fill="rgb(220,174,26)"/><text x="86.3860%" y="959.50"></text></g><g><title>rvfm_main`glslang::TParseContext::parseShaderStrings (49 samples, 0.77%)</title><rect x="86.1360%" y="933" width="0.7694%" height="15" fill="rgb(245,116,9)"/><text x="86.3860%" y="943.50"></text></g><g><title>rvfm_main`yyparse(glslang::TParseContext*) (49 samples, 0.77%)</title><rect x="86.1360%" y="917" width="0.7694%" height="15" fill="rgb(209,72,35)"/><text x="86.3860%" y="927.50"></text></g><g><title>rvfm_main`yylex(YYSTYPE*, glslang::TParseContext&amp;) (27 samples, 0.42%)</title><rect x="86.4814%" y="901" width="0.4239%" height="15" fill="rgb(226,126,21)"/><text x="86.7314%" y="911.50"></text></g><g><title>rvfm_main`glslang::TScanContext::tokenize (27 samples, 0.42%)</title><rect x="86.4814%" y="885" width="0.4239%" height="15" fill="rgb(227,192,1)"/><text x="86.7314%" y="895.50"></text></g><g><title>rvfm_main`glslang::TScanContext::tokenizeIdentifier (6 samples, 0.09%)</title><rect x="86.8111%" y="869" width="0.0942%" height="15" fill="rgb(237,180,29)"/><text x="87.0611%" y="879.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::relateTabledBuiltins (3 samples, 0.05%)</title><rect x="86.9053%" y="933" width="0.0471%" height="15" fill="rgb(230,197,35)"/><text x="87.1553%" y="943.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::relateToOperator (3 samples, 0.05%)</title><rect x="86.9053%" y="917" width="0.0471%" height="15" fill="rgb(246,193,31)"/><text x="87.1553%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.02%)</title><rect x="86.9367%" y="901" width="0.0157%" height="15" fill="rgb(241,36,4)"/><text x="87.1867%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr$VARIANT$Haswell (3 samples, 0.05%)</title><rect x="86.9681%" y="917" width="0.0471%" height="15" fill="rgb(241,130,17)"/><text x="87.2181%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="87.0152%" y="917" width="0.0157%" height="15" fill="rgb(206,137,32)"/><text x="87.2652%" y="927.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::relateToOperator (6 samples, 0.09%)</title><rect x="86.9524%" y="933" width="0.0942%" height="15" fill="rgb(237,228,51)"/><text x="87.2024%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (1 samples, 0.02%)</title><rect x="87.0309%" y="917" width="0.0157%" height="15" fill="rgb(243,6,42)"/><text x="87.2809%" y="927.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::identifyBuiltIns (10 samples, 0.16%)</title><rect x="86.9053%" y="949" width="0.1570%" height="15" fill="rgb(251,74,28)"/><text x="87.1553%" y="959.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::setFunctionExtensions (1 samples, 0.02%)</title><rect x="87.0466%" y="933" width="0.0157%" height="15" fill="rgb(218,20,49)"/><text x="87.2966%" y="943.50"></text></g><g><title>libsystem_c.dylib`snprintf (1 samples, 0.02%)</title><rect x="87.0623%" y="933" width="0.0157%" height="15" fill="rgb(238,28,14)"/><text x="87.3123%" y="943.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (1 samples, 0.02%)</title><rect x="87.0623%" y="917" width="0.0157%" height="15" fill="rgb(229,40,46)"/><text x="87.3123%" y="927.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.02%)</title><rect x="87.0623%" y="901" width="0.0157%" height="15" fill="rgb(244,195,20)"/><text x="87.3123%" y="911.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.02%)</title><rect x="87.0623%" y="885" width="0.0157%" height="15" fill="rgb(253,56,35)"/><text x="87.3123%" y="895.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.02%)</title><rect x="87.0623%" y="869" width="0.0157%" height="15" fill="rgb(210,149,44)"/><text x="87.3123%" y="879.50"></text></g><g><title>libsystem_c.dylib`__sfvwrite (1 samples, 0.02%)</title><rect x="87.0623%" y="853" width="0.0157%" height="15" fill="rgb(240,135,12)"/><text x="87.3123%" y="863.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::initialize (2 samples, 0.03%)</title><rect x="87.0623%" y="949" width="0.0314%" height="15" fill="rgb(251,24,50)"/><text x="87.3123%" y="959.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::add2ndGenerationSamplingImaging (1 samples, 0.02%)</title><rect x="87.0780%" y="933" width="0.0157%" height="15" fill="rgb(243,200,47)"/><text x="87.3280%" y="943.50"></text></g><g><title>rvfm_main`glslang::TBuiltIns::addSamplingFunctions(glslang::TSampler, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (1 samples, 0.02%)</title><rect x="87.0780%" y="917" width="0.0157%" height="15" fill="rgb(224,166,26)"/><text x="87.3280%" y="927.50"></text></g><g><title>rvfm_main`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.02%)</title><rect x="87.0780%" y="901" width="0.0157%" height="15" fill="rgb(233,0,47)"/><text x="87.3280%" y="911.50"></text></g><g><title>rvfm_main`glslang::TFunction::clone (7 samples, 0.11%)</title><rect x="87.1251%" y="917" width="0.1099%" height="15" fill="rgb(253,80,5)"/><text x="87.3751%" y="927.50"></text></g><g><title>rvfm_main`glslang::TFunction::TFunction (7 samples, 0.11%)</title><rect x="87.1251%" y="901" width="0.1099%" height="15" fill="rgb(214,133,25)"/><text x="87.3751%" y="911.50"></text></g><g><title>rvfm_main`glslang::TSymbol::TSymbol (2 samples, 0.03%)</title><rect x="87.2036%" y="885" width="0.0314%" height="15" fill="rgb(209,27,14)"/><text x="87.4536%" y="895.50"></text></g><g><title>rvfm_main`std::__1::__tree_const_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TVarEntryInfo&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__1::allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.03%)</title><rect x="87.2350%" y="901" width="0.0314%" height="15" fill="rgb(219,102,51)"/><text x="87.4850%" y="911.50"></text></g><g><title>rvfm_main`glslang::TSymbolTable::copyTable (13 samples, 0.20%)</title><rect x="87.0937%" y="949" width="0.2041%" height="15" fill="rgb(237,18,16)"/><text x="87.3437%" y="959.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::clone (13 samples, 0.20%)</title><rect x="87.0937%" y="933" width="0.2041%" height="15" fill="rgb(241,85,17)"/><text x="87.3437%" y="943.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::insert (4 samples, 0.06%)</title><rect x="87.2350%" y="917" width="0.0628%" height="15" fill="rgb(236,90,42)"/><text x="87.4850%" y="927.50"></text></g><g><title>rvfm_main`std::__1::pair&lt;std::__1::__tree_iterator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, void*&gt;*, long&gt;, bool&gt; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.03%)</title><rect x="87.2664%" y="901" width="0.0314%" height="15" fill="rgb(249,57,21)"/><text x="87.5164%" y="911.50"></text></g><g><title>rvfm_main`std::__1::__tree_node_base&lt;void*&gt;*&amp; std::__1::__tree&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::__map_value_compare&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt;, std::__1::less&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, true&gt;, glslang::pool_allocator&lt;std::__1::__value_type&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TSymbol*&gt; &gt; &gt;::__find_equal&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;(std::__1::__tree_end_node&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;*&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, glslang::pool_allocator (2 samples, 0.03%)</title><rect x="87.2664%" y="885" width="0.0314%" height="15" fill="rgb(243,12,36)"/><text x="87.5164%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="87.2821%" y="869" width="0.0157%" height="15" fill="rgb(253,128,47)"/><text x="87.5321%" y="879.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::readOnly (5 samples, 0.08%)</title><rect x="87.2978%" y="949" width="0.0785%" height="15" fill="rgb(207,33,20)"/><text x="87.5478%" y="959.50"></text></g><g><title>rvfm_main`(anonymous namespace)::SetupBuiltinSymbolTable (81 samples, 1.27%)</title><rect x="86.1360%" y="965" width="1.2718%" height="15" fill="rgb(233,215,35)"/><text x="86.3860%" y="975.50"></text></g><g><title>rvfm_main`glslang::TSymbolTableLevel::~TSymbolTableLevel (2 samples, 0.03%)</title><rect x="87.3764%" y="949" width="0.0314%" height="15" fill="rgb(249,188,52)"/><text x="87.6264%" y="959.50"></text></g><g><title>rvfm_main`glslang::TFunction::~TFunction (2 samples, 0.03%)</title><rect x="87.3764%" y="933" width="0.0314%" height="15" fill="rgb(225,12,32)"/><text x="87.6264%" y="943.50"></text></g><g><title>rvfm_main`shaderc::Compiler::compile_into_spirv (83 samples, 1.30%)</title><rect x="86.1360%" y="1061" width="1.3032%" height="15" fill="rgb(247,98,14)"/><text x="86.3860%" y="1071.50"></text></g><g><title>rvfm_main`shaderc_compile_into_spv (83 samples, 1.30%)</title><rect x="86.1360%" y="1045" width="1.3032%" height="15" fill="rgb(247,219,48)"/><text x="86.3860%" y="1055.50"></text></g><g><title>rvfm_main`(anonymous namespace)::CompileToSpecifiedOutputType (83 samples, 1.30%)</title><rect x="86.1360%" y="1029" width="1.3032%" height="15" fill="rgb(253,60,48)"/><text x="86.3860%" y="1039.50"></text></g><g><title>rvfm_main`shaderc_util::Compiler::Compile(shaderc_util::string_piece const&amp;, EShLanguage, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, char const*, std::__1::function&lt;EShLanguage (std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;*, shaderc_util::string_piece const&amp;)&gt; const&amp;, shaderc_util::CountingIncluder&amp;, shaderc_util::Compiler::OutputType, std::__1::basic_ostream&lt;char, std::__1::char_traits (83 samples, 1.30%)</title><rect x="86.1360%" y="1013" width="1.3032%" height="15" fill="rgb(245,15,52)"/><text x="86.3860%" y="1023.50"></text></g><g><title>rvfm_main`glslang::TShader::parse (83 samples, 1.30%)</title><rect x="86.1360%" y="997" width="1.3032%" height="15" fill="rgb(220,133,28)"/><text x="86.3860%" y="1007.50"></text></g><g><title>rvfm_main`(anonymous namespace)::CompileDeferred(TCompiler*, char const* const*, int, int const*, char const* const*, char const*, EShOptimizationLevel, TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TIntermediate&amp;, glslang::TShader::Includer&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (83 samples, 1.30%)</title><rect x="86.1360%" y="981" width="1.3032%" height="15" fill="rgb(217,180,4)"/><text x="86.3860%" y="991.50"></text></g><g><title>rvfm_main`glslang::TParseContext::parseShaderStrings (2 samples, 0.03%)</title><rect x="87.4078%" y="965" width="0.0314%" height="15" fill="rgb(251,24,1)"/><text x="87.6578%" y="975.50"></text></g><g><title>rvfm_main`yyparse(glslang::TParseContext*) (2 samples, 0.03%)</title><rect x="87.4078%" y="949" width="0.0314%" height="15" fill="rgb(212,185,49)"/><text x="87.6578%" y="959.50"></text></g><g><title>rvfm_main`yylex(YYSTYPE*, glslang::TParseContext&amp;) (2 samples, 0.03%)</title><rect x="87.4078%" y="933" width="0.0314%" height="15" fill="rgb(215,175,22)"/><text x="87.6578%" y="943.50"></text></g><g><title>rvfm_main`glslang::TScanContext::tokenize (2 samples, 0.03%)</title><rect x="87.4078%" y="917" width="0.0314%" height="15" fill="rgb(250,205,14)"/><text x="87.6578%" y="927.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tokenize (2 samples, 0.03%)</title><rect x="87.4078%" y="901" width="0.0314%" height="15" fill="rgb(225,211,22)"/><text x="87.6578%" y="911.50"></text></g><g><title>rvfm_main`glslang::TPpContext::readCPPline (2 samples, 0.03%)</title><rect x="87.4078%" y="885" width="0.0314%" height="15" fill="rgb(251,179,42)"/><text x="87.6578%" y="895.50"></text></g><g><title>rvfm_main`glslang::TPpContext::CPPdefine (2 samples, 0.03%)</title><rect x="87.4078%" y="869" width="0.0314%" height="15" fill="rgb(208,216,51)"/><text x="87.6578%" y="879.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::scan (2 samples, 0.03%)</title><rect x="87.4078%" y="853" width="0.0314%" height="15" fill="rgb(235,36,11)"/><text x="87.6578%" y="863.50"></text></g><g><title>rvfm_main`glslang::TPpContext::tStringInput::getch (2 samples, 0.03%)</title><rect x="87.4078%" y="837" width="0.0314%" height="15" fill="rgb(213,189,28)"/><text x="87.6578%" y="847.50"></text></g><g><title>rvfm_main`glslang::TInputScanner::get (2 samples, 0.03%)</title><rect x="87.4078%" y="821" width="0.0314%" height="15" fill="rgb(227,203,42)"/><text x="87.6578%" y="831.50"></text></g><g><title>rvfm_main`shaderc_compiler_release (1 samples, 0.02%)</title><rect x="87.4392%" y="1061" width="0.0157%" height="15" fill="rgb(244,72,36)"/><text x="87.6892%" y="1071.50"></text></g><g><title>rvfm_main`shaderc_util::GlslangInitializer::~GlslangInitializer (1 samples, 0.02%)</title><rect x="87.4392%" y="1045" width="0.0157%" height="15" fill="rgb(213,53,17)"/><text x="87.6892%" y="1055.50"></text></g><g><title>rvfm_main`ShFinalize (1 samples, 0.02%)</title><rect x="87.4392%" y="1029" width="0.0157%" height="15" fill="rgb(207,167,3)"/><text x="87.6892%" y="1039.50"></text></g><g><title>rvfm_main`glslang::TPoolAllocator::~TPoolAllocator (1 samples, 0.02%)</title><rect x="87.4392%" y="1013" width="0.0157%" height="15" fill="rgb(216,98,30)"/><text x="87.6892%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="87.4392%" y="997" width="0.0157%" height="15" fill="rgb(236,123,15)"/><text x="87.6892%" y="1007.50"></text></g><g><title>rvfm_main`rvfm_main::fb_present_renderer::FramebufferPresentRenderer::new (86 samples, 1.35%)</title><rect x="86.1360%" y="1077" width="1.3503%" height="15" fill="rgb(248,81,50)"/><text x="86.3860%" y="1087.50"></text></g><g><title>rvfm_main`wgpu::Device::create_render_pipeline (2 samples, 0.03%)</title><rect x="87.4549%" y="1061" width="0.0314%" height="15" fill="rgb(214,120,4)"/><text x="87.7049%" y="1071.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_render_pipeline (2 samples, 0.03%)</title><rect x="87.4549%" y="1045" width="0.0314%" height="15" fill="rgb(208,179,34)"/><text x="87.7049%" y="1055.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_render_pipeline (2 samples, 0.03%)</title><rect x="87.4549%" y="1029" width="0.0314%" height="15" fill="rgb(227,140,7)"/><text x="87.7049%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::create_graphics_pipeline (1 samples, 0.02%)</title><rect x="87.4706%" y="1013" width="0.0157%" height="15" fill="rgb(214,22,6)"/><text x="87.7206%" y="1023.50"></text></g><g><title>rvfm_main`gfx_backend_metal::device::Device::load_shader (1 samples, 0.02%)</title><rect x="87.4706%" y="997" width="0.0157%" height="15" fill="rgb(207,137,27)"/><text x="87.7206%" y="1007.50"></text></g><g><title>rvfm_main`gfx_backend_metal::device::Device::compile_shader_library (1 samples, 0.02%)</title><rect x="87.4706%" y="981" width="0.0157%" height="15" fill="rgb(210,8,46)"/><text x="87.7206%" y="991.50"></text></g><g><title>rvfm_main`spirv_cross::msl::_&lt;impl spirv_cross::spirv::Compile&lt;spirv_cross::msl::Target&gt; for spirv_cross::spirv::Ast&lt;spirv_cross::msl::Target&gt;&gt;::compile (1 samples, 0.02%)</title><rect x="87.4706%" y="965" width="0.0157%" height="15" fill="rgb(240,16,54)"/><text x="87.7206%" y="975.50"></text></g><g><title>rvfm_main`sc_internal_compiler_msl_compile (1 samples, 0.02%)</title><rect x="87.4706%" y="949" width="0.0157%" height="15" fill="rgb(211,209,29)"/><text x="87.7206%" y="959.50"></text></g><g><title>rvfm_main`spirv_cross::CompilerMSL::compile (1 samples, 0.02%)</title><rect x="87.4706%" y="933" width="0.0157%" height="15" fill="rgb(226,228,24)"/><text x="87.7206%" y="943.50"></text></g><g><title>rvfm_main`spirv_cross::CompilerMSL::declare_constant_arrays (1 samples, 0.02%)</title><rect x="87.4706%" y="917" width="0.0157%" height="15" fill="rgb(222,84,9)"/><text x="87.7206%" y="927.50"></text></g><g><title>rvfm_main`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="87.4863%" y="1045" width="0.0157%" height="15" fill="rgb(234,203,30)"/><text x="87.7363%" y="1055.50"></text></g><g><title>rvfm_main`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="87.4863%" y="1029" width="0.0157%" height="15" fill="rgb(238,109,14)"/><text x="87.7363%" y="1039.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlCmdQueue dealloc] (1 samples, 0.02%)</title><rect x="87.4863%" y="1013" width="0.0157%" height="15" fill="rgb(233,206,34)"/><text x="87.7363%" y="1023.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue dealloc] (1 samples, 0.02%)</title><rect x="87.4863%" y="997" width="0.0157%" height="15" fill="rgb(220,167,47)"/><text x="87.7363%" y="1007.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.02%)</title><rect x="87.4863%" y="981" width="0.0157%" height="15" fill="rgb(238,105,10)"/><text x="87.7363%" y="991.50"></text></g><g><title>IOAccelerator`ioAccelCommandQueueFinalize (1 samples, 0.02%)</title><rect x="87.4863%" y="965" width="0.0157%" height="15" fill="rgb(213,227,17)"/><text x="87.7363%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (1 samples, 0.02%)</title><rect x="87.4863%" y="949" width="0.0157%" height="15" fill="rgb(217,132,38)"/><text x="87.7363%" y="959.50"></text></g><g><title>rvfm_main`metal::device::DeviceRef::new_compute_pipeline_state (1 samples, 0.02%)</title><rect x="87.5020%" y="965" width="0.0157%" height="15" fill="rgb(242,146,4)"/><text x="87.7520%" y="975.50"></text></g><g><title>Metal`-[_MTLDevice newComputePipelineStateWithDescriptor:error:] (1 samples, 0.02%)</title><rect x="87.5020%" y="949" width="0.0157%" height="15" fill="rgb(212,61,9)"/><text x="87.7520%" y="959.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice compiler] (1 samples, 0.02%)</title><rect x="87.5020%" y="933" width="0.0157%" height="15" fill="rgb(247,126,22)"/><text x="87.7520%" y="943.50"></text></g><g><title>Foundation`+[NSString stringWithFormat:] (1 samples, 0.02%)</title><rect x="87.5020%" y="917" width="0.0157%" height="15" fill="rgb(220,196,2)"/><text x="87.7520%" y="927.50"></text></g><g><title>CoreFoundation`_CFStringCreateWithFormatAndArgumentsAux2 (1 samples, 0.02%)</title><rect x="87.5020%" y="901" width="0.0157%" height="15" fill="rgb(208,46,4)"/><text x="87.7520%" y="911.50"></text></g><g><title>CoreFoundation`__CFStringAppendFormatCore (1 samples, 0.02%)</title><rect x="87.5020%" y="885" width="0.0157%" height="15" fill="rgb(252,104,46)"/><text x="87.7520%" y="895.50"></text></g><g><title>Foundation`_NSDescriptionWithLocaleFunc (1 samples, 0.02%)</title><rect x="87.5020%" y="869" width="0.0157%" height="15" fill="rgb(237,152,48)"/><text x="87.7520%" y="879.50"></text></g><g><title>CoreFoundation`-[NSDate descriptionWithLocale:] (1 samples, 0.02%)</title><rect x="87.5020%" y="853" width="0.0157%" height="15" fill="rgb(221,59,37)"/><text x="87.7520%" y="863.50"></text></g><g><title>CoreFoundation`__CreateCFDateFormatter (1 samples, 0.02%)</title><rect x="87.5020%" y="837" width="0.0157%" height="15" fill="rgb(209,202,51)"/><text x="87.7520%" y="847.50"></text></g><g><title>CoreFoundation`__ResetUDateFormat (1 samples, 0.02%)</title><rect x="87.5020%" y="821" width="0.0157%" height="15" fill="rgb(228,81,30)"/><text x="87.7520%" y="831.50"></text></g><g><title>CoreFoundation`__cficu_udat_open (1 samples, 0.02%)</title><rect x="87.5020%" y="805" width="0.0157%" height="15" fill="rgb(227,42,39)"/><text x="87.7520%" y="815.50"></text></g><g><title>libicucore.A.dylib`udat_open (1 samples, 0.02%)</title><rect x="87.5020%" y="789" width="0.0157%" height="15" fill="rgb(221,26,2)"/><text x="87.7520%" y="799.50"></text></g><g><title>libicucore.A.dylib`icu::DateFormat::create (1 samples, 0.02%)</title><rect x="87.5020%" y="773" width="0.0157%" height="15" fill="rgb(254,61,31)"/><text x="87.7520%" y="783.50"></text></g><g><title>libicucore.A.dylib`icu::SimpleDateFormat::SimpleDateFormat (1 samples, 0.02%)</title><rect x="87.5020%" y="757" width="0.0157%" height="15" fill="rgb(222,173,38)"/><text x="87.7520%" y="767.50"></text></g><g><title>libicucore.A.dylib`icu::SimpleDateFormat::construct (1 samples, 0.02%)</title><rect x="87.5020%" y="741" width="0.0157%" height="15" fill="rgb(218,50,12)"/><text x="87.7520%" y="751.50"></text></g><g><title>libicucore.A.dylib`icu::SimpleDateFormat::initializeCalendar (1 samples, 0.02%)</title><rect x="87.5020%" y="725" width="0.0157%" height="15" fill="rgb(223,88,40)"/><text x="87.7520%" y="735.50"></text></g><g><title>libicucore.A.dylib`icu::Calendar::createInstance (1 samples, 0.02%)</title><rect x="87.5020%" y="709" width="0.0157%" height="15" fill="rgb(237,54,19)"/><text x="87.7520%" y="719.50"></text></g><g><title>libicucore.A.dylib`0x00007fff6c0f6850 (1 samples, 0.02%)</title><rect x="87.5020%" y="693" width="0.0157%" height="15" fill="rgb(251,129,25)"/><text x="87.7520%" y="703.50"></text></g><g><title>libicucore.A.dylib`0x00007fff6c0fa424 (1 samples, 0.02%)</title><rect x="87.5020%" y="677" width="0.0157%" height="15" fill="rgb(238,97,19)"/><text x="87.7520%" y="687.50"></text></g><g><title>libicucore.A.dylib`icu::UnifiedCache::_get (1 samples, 0.02%)</title><rect x="87.5020%" y="661" width="0.0157%" height="15" fill="rgb(240,169,18)"/><text x="87.7520%" y="671.50"></text></g><g><title>libicucore.A.dylib`icu::UnifiedCache::_putIfAbsentAndGet (1 samples, 0.02%)</title><rect x="87.5020%" y="645" width="0.0157%" height="15" fill="rgb(230,187,49)"/><text x="87.7520%" y="655.50"></text></g><g><title>libicucore.A.dylib`uhash_find (1 samples, 0.02%)</title><rect x="87.5020%" y="629" width="0.0157%" height="15" fill="rgb(209,44,26)"/><text x="87.7520%" y="639.50"></text></g><g><title>libicucore.A.dylib`icu::Locale::operator== (1 samples, 0.02%)</title><rect x="87.5020%" y="613" width="0.0157%" height="15" fill="rgb(244,0,6)"/><text x="87.7520%" y="623.50"></text></g><g><title>rvfm_main`gfx_backend_metal::internal::ServicePipes::new (2 samples, 0.03%)</title><rect x="87.5020%" y="981" width="0.0314%" height="15" fill="rgb(248,18,21)"/><text x="87.7520%" y="991.50"></text></g><g><title>rvfm_main`metal::device::DeviceRef::new_library_with_data (1 samples, 0.02%)</title><rect x="87.5177%" y="965" width="0.0157%" height="15" fill="rgb(245,180,19)"/><text x="87.7677%" y="975.50"></text></g><g><title>Metal`-[_MTLDevice newLibraryWithData:error:] (1 samples, 0.02%)</title><rect x="87.5177%" y="949" width="0.0157%" height="15" fill="rgb(252,118,36)"/><text x="87.7677%" y="959.50"></text></g><g><title>Metal`MTLLibraryBuilder::newLibraryWithData(id&lt;MTLDevice&gt;, NSObject (1 samples, 0.02%)</title><rect x="87.5177%" y="933" width="0.0157%" height="15" fill="rgb(210,224,19)"/><text x="87.7677%" y="943.50"></text></g><g><title>Metal`getHash (1 samples, 0.02%)</title><rect x="87.5177%" y="917" width="0.0157%" height="15" fill="rgb(218,30,24)"/><text x="87.7677%" y="927.50"></text></g><g><title>libcommonCrypto.dylib`CC_SHA256_Update (1 samples, 0.02%)</title><rect x="87.5177%" y="901" width="0.0157%" height="15" fill="rgb(219,75,50)"/><text x="87.7677%" y="911.50"></text></g><g><title>libcommonCrypto.dylib`ccdigest_process (1 samples, 0.02%)</title><rect x="87.5177%" y="885" width="0.0157%" height="15" fill="rgb(234,72,50)"/><text x="87.7677%" y="895.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA256_compress_AVX2 (1 samples, 0.02%)</title><rect x="87.5177%" y="869" width="0.0157%" height="15" fill="rgb(219,100,48)"/><text x="87.7677%" y="879.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice newCommandQueueWithMaxCommandBufferCount:] (1 samples, 0.02%)</title><rect x="87.5334%" y="965" width="0.0157%" height="15" fill="rgb(253,5,41)"/><text x="87.7834%" y="975.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice amdMtlBronzeLazyInit] (1 samples, 0.02%)</title><rect x="87.5334%" y="949" width="0.0157%" height="15" fill="rgb(247,181,11)"/><text x="87.7834%" y="959.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeInitUBMInterface(BronzeUBMInterfaceRec*, id&lt;MTLDevice&gt;, void*, BronzeHwInfoRec const*, _sAMD_GET_HW_INFO_VALUES*) (1 samples, 0.02%)</title><rect x="87.5334%" y="933" width="0.0157%" height="15" fill="rgb(222,223,25)"/><text x="87.7834%" y="943.50"></text></g><g><title>AMDMTLBronzeDriver`BltMgrContainer::CreateDeviceContainer (1 samples, 0.02%)</title><rect x="87.5334%" y="917" width="0.0157%" height="15" fill="rgb(214,198,28)"/><text x="87.7834%" y="927.50"></text></g><g><title>AMDMTLBronzeDriver`SiBltDevice::HwlInit (1 samples, 0.02%)</title><rect x="87.5334%" y="901" width="0.0157%" height="15" fill="rgb(230,46,43)"/><text x="87.7834%" y="911.50"></text></g><g><title>AMDMTLBronzeDriver`SiBltDevice::Write3dDrawPreamble (1 samples, 0.02%)</title><rect x="87.5334%" y="885" width="0.0157%" height="15" fill="rgb(233,65,53)"/><text x="87.7834%" y="895.50"></text></g><g><title>rvfm_main`wgpu::Instance::request_adapter (5 samples, 0.08%)</title><rect x="87.4863%" y="1077" width="0.0785%" height="15" fill="rgb(221,121,27)"/><text x="87.7363%" y="1087.50"></text></g><g><title>rvfm_main`wgpu_core::instance::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (5 samples, 0.08%)</title><rect x="87.4863%" y="1061" width="0.0785%" height="15" fill="rgb(247,70,47)"/><text x="87.7363%" y="1071.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::Instance as gfx_hal::Instance&lt;gfx_backend_metal::Backend&gt;&gt;::enumerate_adapters (4 samples, 0.06%)</title><rect x="87.5020%" y="1045" width="0.0628%" height="15" fill="rgb(228,85,35)"/><text x="87.7520%" y="1055.50"></text></g><g><title>rvfm_main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.06%)</title><rect x="87.5020%" y="1029" width="0.0628%" height="15" fill="rgb(209,50,18)"/><text x="87.7520%" y="1039.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::Instance as gfx_hal::Instance&lt;gfx_backend_metal::Backend&gt;&gt;::enumerate_adapters::_{{closure}} (4 samples, 0.06%)</title><rect x="87.5020%" y="1013" width="0.0628%" height="15" fill="rgb(250,19,35)"/><text x="87.7520%" y="1023.50"></text></g><g><title>rvfm_main`gfx_backend_metal::Shared::new (4 samples, 0.06%)</title><rect x="87.5020%" y="997" width="0.0628%" height="15" fill="rgb(253,107,29)"/><text x="87.7520%" y="1007.50"></text></g><g><title>rvfm_main`metal::device::DeviceRef::new_command_queue_with_max_command_buffer_count (2 samples, 0.03%)</title><rect x="87.5334%" y="981" width="0.0314%" height="15" fill="rgb(252,179,29)"/><text x="87.7834%" y="991.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue initWithDevice:maxCommandBufferCount:] (1 samples, 0.02%)</title><rect x="87.5491%" y="965" width="0.0157%" height="15" fill="rgb(238,194,6)"/><text x="87.7991%" y="975.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue initWithDevice:descriptor:] (1 samples, 0.02%)</title><rect x="87.5491%" y="949" width="0.0157%" height="15" fill="rgb(238,164,29)"/><text x="87.7991%" y="959.50"></text></g><g><title>IOAccelerator`IOAccelCommandQueueCreateWithQoS (1 samples, 0.02%)</title><rect x="87.5491%" y="933" width="0.0157%" height="15" fill="rgb(224,25,9)"/><text x="87.7991%" y="943.50"></text></g><g><title>IOKit`io_connect_add_client (1 samples, 0.02%)</title><rect x="87.5491%" y="917" width="0.0157%" height="15" fill="rgb(244,153,23)"/><text x="87.7991%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="87.5491%" y="901" width="0.0157%" height="15" fill="rgb(212,203,14)"/><text x="87.7991%" y="911.50"></text></g><g><title>AMDMTLBronzeDriver`-[BronzeMtlDevice initWithAcceleratorPort:] (1 samples, 0.02%)</title><rect x="87.5648%" y="853" width="0.0157%" height="15" fill="rgb(220,164,20)"/><text x="87.8148%" y="863.50"></text></g><g><title>AMDMTLBronzeDriver`amdMtlBronzeInitAddrLibInterface(BronzeAddrLibInterfaceRec*, BronzeHwInfoRec const*, _sAMD_GET_HW_INFO_VALUES*) (1 samples, 0.02%)</title><rect x="87.5648%" y="837" width="0.0157%" height="15" fill="rgb(222,203,48)"/><text x="87.8148%" y="847.50"></text></g><g><title>AMDMTLBronzeDriver`Addr::Lib::Create (1 samples, 0.02%)</title><rect x="87.5648%" y="821" width="0.0157%" height="15" fill="rgb(215,159,22)"/><text x="87.8148%" y="831.50"></text></g><g><title>AMDMTLBronzeDriver`Addr::ElemLib::Create (1 samples, 0.02%)</title><rect x="87.5648%" y="805" width="0.0157%" height="15" fill="rgb(216,183,47)"/><text x="87.8148%" y="815.50"></text></g><g><title>AMDMTLBronzeDriver`Addr::Object::Object (1 samples, 0.02%)</title><rect x="87.5648%" y="789" width="0.0157%" height="15" fill="rgb(229,195,25)"/><text x="87.8148%" y="799.50"></text></g><g><title>IOAccelerator`IOAccelDeviceCreateWithAPIProperty (1 samples, 0.02%)</title><rect x="87.5805%" y="821" width="0.0157%" height="15" fill="rgb(224,132,51)"/><text x="87.8305%" y="831.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelDevice initWithAcceleratorPort:] (2 samples, 0.03%)</title><rect x="87.5805%" y="853" width="0.0314%" height="15" fill="rgb(240,63,7)"/><text x="87.8305%" y="863.50"></text></g><g><title>Metal`-[MTLIOAccelDevice initWithAcceleratorPort:] (2 samples, 0.03%)</title><rect x="87.5805%" y="837" width="0.0314%" height="15" fill="rgb(249,182,41)"/><text x="87.8305%" y="847.50"></text></g><g><title>Metal`-[MTLIOAccelDevice updateGPUSelectionProperties] (1 samples, 0.02%)</title><rect x="87.5962%" y="821" width="0.0157%" height="15" fill="rgb(243,47,26)"/><text x="87.8462%" y="831.50"></text></g><g><title>Metal`-[MTLIOAccelDevice isSlotted] (1 samples, 0.02%)</title><rect x="87.5962%" y="805" width="0.0157%" height="15" fill="rgb(233,48,2)"/><text x="87.8462%" y="815.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (1 samples, 0.02%)</title><rect x="87.5962%" y="789" width="0.0157%" height="15" fill="rgb(244,165,34)"/><text x="87.8462%" y="799.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (1 samples, 0.02%)</title><rect x="87.5962%" y="773" width="0.0157%" height="15" fill="rgb(207,89,7)"/><text x="87.8462%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="87.5962%" y="757" width="0.0157%" height="15" fill="rgb(244,117,36)"/><text x="87.8462%" y="767.50"></text></g><g><title>Foundation`-[NSBundle principalClass] (1 samples, 0.02%)</title><rect x="87.6119%" y="853" width="0.0157%" height="15" fill="rgb(226,144,34)"/><text x="87.8619%" y="863.50"></text></g><g><title>Foundation`-[NSBundle loadAndReturnError:] (1 samples, 0.02%)</title><rect x="87.6119%" y="837" width="0.0157%" height="15" fill="rgb(213,23,19)"/><text x="87.8619%" y="847.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (1 samples, 0.02%)</title><rect x="87.6119%" y="821" width="0.0157%" height="15" fill="rgb(217,75,12)"/><text x="87.8619%" y="831.50"></text></g><g><title>CoreFoundation`_CFBundleCopyExecutableURLInDirectory2 (1 samples, 0.02%)</title><rect x="87.6119%" y="805" width="0.0157%" height="15" fill="rgb(224,159,17)"/><text x="87.8619%" y="815.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.02%)</title><rect x="87.6119%" y="789" width="0.0157%" height="15" fill="rgb(217,118,1)"/><text x="87.8619%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="87.6119%" y="773" width="0.0157%" height="15" fill="rgb(232,180,48)"/><text x="87.8619%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="87.6119%" y="757" width="0.0157%" height="15" fill="rgb(230,27,33)"/><text x="87.8619%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="87.6119%" y="741" width="0.0157%" height="15" fill="rgb(205,31,21)"/><text x="87.8619%" y="751.50"></text></g><g><title>QuartzCore`CAMetalContextCreate (5 samples, 0.08%)</title><rect x="87.5648%" y="1029" width="0.0785%" height="15" fill="rgb(253,59,4)"/><text x="87.8148%" y="1039.50"></text></g><g><title>Metal`MTLCopyAllDevices (5 samples, 0.08%)</title><rect x="87.5648%" y="1013" width="0.0785%" height="15" fill="rgb(224,201,9)"/><text x="87.8148%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (5 samples, 0.08%)</title><rect x="87.5648%" y="997" width="0.0785%" height="15" fill="rgb(229,206,30)"/><text x="87.8148%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.08%)</title><rect x="87.5648%" y="981" width="0.0785%" height="15" fill="rgb(212,67,47)"/><text x="87.8148%" y="991.50"></text></g><g><title>Metal`invocation function for block in MTLDeviceArrayInitialize() (5 samples, 0.08%)</title><rect x="87.5648%" y="965" width="0.0785%" height="15" fill="rgb(211,96,50)"/><text x="87.8148%" y="975.50"></text></g><g><title>Metal`+[MTLIOAccelDevice registerDevices] (5 samples, 0.08%)</title><rect x="87.5648%" y="949" width="0.0785%" height="15" fill="rgb(252,114,18)"/><text x="87.8148%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (5 samples, 0.08%)</title><rect x="87.5648%" y="933" width="0.0785%" height="15" fill="rgb(223,58,37)"/><text x="87.8148%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.08%)</title><rect x="87.5648%" y="917" width="0.0785%" height="15" fill="rgb(237,70,4)"/><text x="87.8148%" y="927.50"></text></g><g><title>Metal`+[MTLIOAccelService registerService:] (5 samples, 0.08%)</title><rect x="87.5648%" y="901" width="0.0785%" height="15" fill="rgb(244,85,46)"/><text x="87.8148%" y="911.50"></text></g><g><title>Metal`-[MTLIOAccelService initWithAcceleratorPort:] (5 samples, 0.08%)</title><rect x="87.5648%" y="885" width="0.0785%" height="15" fill="rgb(223,39,52)"/><text x="87.8148%" y="895.50"></text></g><g><title>Metal`+[MTLIOAccelDevice registerAcceleratorService:] (5 samples, 0.08%)</title><rect x="87.5648%" y="869" width="0.0785%" height="15" fill="rgb(218,200,14)"/><text x="87.8148%" y="879.50"></text></g><g><title>libsystem_sandbox.dylib`gpu_bundle_find_trusted (1 samples, 0.02%)</title><rect x="87.6276%" y="853" width="0.0157%" height="15" fill="rgb(208,171,16)"/><text x="87.8776%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__mac_syscall (1 samples, 0.02%)</title><rect x="87.6276%" y="837" width="0.0157%" height="15" fill="rgb(234,200,18)"/><text x="87.8776%" y="847.50"></text></g><g><title>rvfm_main`std::thread::local::LocalKey&lt;T&gt;::with (97 samples, 1.52%)</title><rect x="86.1360%" y="1109" width="1.5230%" height="15" fill="rgb(228,45,11)"/><text x="86.3860%" y="1119.50"></text></g><g><title>rvfm_main`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (97 samples, 1.52%)</title><rect x="86.1360%" y="1093" width="1.5230%" height="15" fill="rgb(237,182,11)"/><text x="86.3860%" y="1103.50"></text></g><g><title>rvfm_main`wgpu_core::instance::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::instance_create_surface (6 samples, 0.09%)</title><rect x="87.5648%" y="1077" width="0.0942%" height="15" fill="rgb(241,175,49)"/><text x="87.8148%" y="1087.50"></text></g><g><title>rvfm_main`gfx_backend_metal::Instance::create_surface_from_nsview (6 samples, 0.09%)</title><rect x="87.5648%" y="1061" width="0.0942%" height="15" fill="rgb(247,38,35)"/><text x="87.8148%" y="1071.50"></text></g><g><title>QuartzCore`-[CAMetalLayer init] (6 samples, 0.09%)</title><rect x="87.5648%" y="1045" width="0.0942%" height="15" fill="rgb(228,39,49)"/><text x="87.8148%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_create_with_target (1 samples, 0.02%)</title><rect x="87.6433%" y="1029" width="0.0157%" height="15" fill="rgb(226,101,26)"/><text x="87.8933%" y="1039.50"></text></g><g><title>AppKit`-[NSApplication _disableSuddenTermination] (1 samples, 0.02%)</title><rect x="87.6590%" y="1061" width="0.0157%" height="15" fill="rgb(206,141,19)"/><text x="87.9090%" y="1071.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (1 samples, 0.02%)</title><rect x="87.6590%" y="1045" width="0.0157%" height="15" fill="rgb(211,200,13)"/><text x="87.9090%" y="1055.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (1 samples, 0.02%)</title><rect x="87.6590%" y="1029" width="0.0157%" height="15" fill="rgb(241,121,6)"/><text x="87.9090%" y="1039.50"></text></g><g><title>libxpc.dylib`_xpc_transaction_begin (1 samples, 0.02%)</title><rect x="87.6590%" y="1013" width="0.0157%" height="15" fill="rgb(234,221,29)"/><text x="87.9090%" y="1023.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _findWindowUsingCache:] (1 samples, 0.02%)</title><rect x="87.6747%" y="1029" width="0.0157%" height="15" fill="rgb(229,136,5)"/><text x="87.9247%" y="1039.50"></text></g><g><title>Foundation`-[NSConcretePointerArray countByEnumeratingWithState:objects:count:] (1 samples, 0.02%)</title><rect x="87.6747%" y="1013" width="0.0157%" height="15" fill="rgb(238,36,11)"/><text x="87.9247%" y="1023.50"></text></g><g><title>AppKit`-[NSWindow frame] (1 samples, 0.02%)</title><rect x="87.6904%" y="1029" width="0.0157%" height="15" fill="rgb(251,55,41)"/><text x="87.9404%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="87.6904%" y="1013" width="0.0157%" height="15" fill="rgb(242,34,40)"/><text x="87.9404%" y="1023.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (3 samples, 0.05%)</title><rect x="87.6747%" y="1045" width="0.0471%" height="15" fill="rgb(215,42,17)"/><text x="87.9247%" y="1055.50"></text></g><g><title>AppKit`-[_NSCGSWindow frame] (1 samples, 0.02%)</title><rect x="87.7061%" y="1029" width="0.0157%" height="15" fill="rgb(207,44,46)"/><text x="87.9561%" y="1039.50"></text></g><g><title>SkyLight`GetWindowBounds (1 samples, 0.02%)</title><rect x="87.7061%" y="1013" width="0.0157%" height="15" fill="rgb(211,206,28)"/><text x="87.9561%" y="1023.50"></text></g><g><title>SkyLight`CGSWindowGetShapeBounds (1 samples, 0.02%)</title><rect x="87.7061%" y="997" width="0.0157%" height="15" fill="rgb(237,167,16)"/><text x="87.9561%" y="1007.50"></text></g><g><title>SkyLight`_CGSGetWindowShapeBounds (1 samples, 0.02%)</title><rect x="87.7061%" y="981" width="0.0157%" height="15" fill="rgb(233,66,6)"/><text x="87.9561%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="87.7061%" y="965" width="0.0157%" height="15" fill="rgb(246,123,29)"/><text x="87.9561%" y="975.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (1 samples, 0.02%)</title><rect x="87.7218%" y="1045" width="0.0157%" height="15" fill="rgb(209,62,40)"/><text x="87.9718%" y="1055.50"></text></g><g><title>HIToolbox`ReleaseEvent (1 samples, 0.02%)</title><rect x="87.7218%" y="1029" width="0.0157%" height="15" fill="rgb(218,4,25)"/><text x="87.9718%" y="1039.50"></text></g><g><title>AppKit`-[NSEvent window] (1 samples, 0.02%)</title><rect x="87.7375%" y="1045" width="0.0157%" height="15" fill="rgb(253,91,49)"/><text x="87.9875%" y="1055.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeakOrNil (1 samples, 0.02%)</title><rect x="87.7375%" y="1029" width="0.0157%" height="15" fill="rgb(228,155,29)"/><text x="87.9875%" y="1039.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (1 samples, 0.02%)</title><rect x="87.7375%" y="1013" width="0.0157%" height="15" fill="rgb(243,57,37)"/><text x="87.9875%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="87.7375%" y="997" width="0.0157%" height="15" fill="rgb(244,167,17)"/><text x="87.9875%" y="1007.50"></text></g><g><title>AppKit`DYLD-STUB$$ReleaseEvent (1 samples, 0.02%)</title><rect x="87.7532%" y="1045" width="0.0157%" height="15" fill="rgb(207,181,38)"/><text x="88.0032%" y="1055.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (1 samples, 0.02%)</title><rect x="87.7689%" y="1045" width="0.0157%" height="15" fill="rgb(211,8,23)"/><text x="88.0189%" y="1055.50"></text></g><g><title>HIToolbox`SendEventToEventTarget (1 samples, 0.02%)</title><rect x="87.7689%" y="1029" width="0.0157%" height="15" fill="rgb(235,11,44)"/><text x="88.0189%" y="1039.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (1 samples, 0.02%)</title><rect x="87.7689%" y="1013" width="0.0157%" height="15" fill="rgb(248,18,52)"/><text x="88.0189%" y="1023.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (1 samples, 0.02%)</title><rect x="87.7689%" y="997" width="0.0157%" height="15" fill="rgb(208,4,7)"/><text x="88.0189%" y="1007.50"></text></g><g><title>HIToolbox`ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (1 samples, 0.02%)</title><rect x="87.7689%" y="981" width="0.0157%" height="15" fill="rgb(240,17,39)"/><text x="88.0189%" y="991.50"></text></g><g><title>HIToolbox`FindWindowAndPartFromMouseEvent (1 samples, 0.02%)</title><rect x="87.7689%" y="965" width="0.0157%" height="15" fill="rgb(207,170,3)"/><text x="88.0189%" y="975.50"></text></g><g><title>HIToolbox`FindWindow (1 samples, 0.02%)</title><rect x="87.7689%" y="949" width="0.0157%" height="15" fill="rgb(236,100,52)"/><text x="88.0189%" y="959.50"></text></g><g><title>HIToolbox`FindWindowOfClass (1 samples, 0.02%)</title><rect x="87.7689%" y="933" width="0.0157%" height="15" fill="rgb(246,78,51)"/><text x="88.0189%" y="943.50"></text></g><g><title>HIToolbox`FindWindowCommon(Point, OpaqueWindowPtr**, short*) (1 samples, 0.02%)</title><rect x="87.7689%" y="917" width="0.0157%" height="15" fill="rgb(211,17,15)"/><text x="88.0189%" y="927.50"></text></g><g><title>HIToolbox`MBarHit (1 samples, 0.02%)</title><rect x="87.7689%" y="901" width="0.0157%" height="15" fill="rgb(209,59,46)"/><text x="88.0189%" y="911.50"></text></g><g><title>HIToolbox`_MBarHit(MenuData*, Point, unsigned char, unsigned char*, MenuData**) (1 samples, 0.02%)</title><rect x="87.7689%" y="885" width="0.0157%" height="15" fill="rgb(210,92,25)"/><text x="88.0189%" y="895.50"></text></g><g><title>HIToolbox`_HIPresentationInstanceFindAtLocation (1 samples, 0.02%)</title><rect x="87.7689%" y="869" width="0.0157%" height="15" fill="rgb(238,174,52)"/><text x="88.0189%" y="879.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachMenuBarDo(void  (1 samples, 0.02%)</title><rect x="87.7689%" y="853" width="0.0157%" height="15" fill="rgb(230,73,7)"/><text x="88.0189%" y="863.50"></text></g><g><title>HIToolbox`___HIPresentationInstanceFindAtLocation_block_invoke (1 samples, 0.02%)</title><rect x="87.7689%" y="837" width="0.0157%" height="15" fill="rgb(243,124,40)"/><text x="88.0189%" y="847.50"></text></g><g><title>HIToolbox`MenuBarInstance::ContainsPoint (1 samples, 0.02%)</title><rect x="87.7689%" y="821" width="0.0157%" height="15" fill="rgb(244,170,11)"/><text x="88.0189%" y="831.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (1 samples, 0.02%)</title><rect x="87.7689%" y="805" width="0.0157%" height="15" fill="rgb(207,114,54)"/><text x="88.0189%" y="815.50"></text></g><g><title>HIToolbox`invocation function for block in MenuBarInstance::ForEachBoundsDo(bool  (1 samples, 0.02%)</title><rect x="87.7689%" y="789" width="0.0157%" height="15" fill="rgb(205,42,20)"/><text x="88.0189%" y="799.50"></text></g><g><title>HIToolbox`GetCurrentSpaceForDisplay (1 samples, 0.02%)</title><rect x="87.7689%" y="773" width="0.0157%" height="15" fill="rgb(230,30,28)"/><text x="88.0189%" y="783.50"></text></g><g><title>SkyLight`SLSManagedDisplayGetCurrentSpace (1 samples, 0.02%)</title><rect x="87.7689%" y="757" width="0.0157%" height="15" fill="rgb(205,73,54)"/><text x="88.0189%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="87.7689%" y="741" width="0.0157%" height="15" fill="rgb(254,227,23)"/><text x="88.0189%" y="751.50"></text></g><g><title>AppKit`_DPSConvertMaskToEventTypeList (1 samples, 0.02%)</title><rect x="87.7846%" y="1029" width="0.0157%" height="15" fill="rgb(228,202,34)"/><text x="88.0346%" y="1039.50"></text></g><g><title>AppKit`-[NSApplication _reopenWindowsAsNecessaryIncludingRestorableState:completionHandler:] (1 samples, 0.02%)</title><rect x="87.8003%" y="901" width="0.0157%" height="15" fill="rgb(222,225,37)"/><text x="88.0503%" y="911.50"></text></g><g><title>AppKit`_NSPersistentUIEndTalagentCommunication (1 samples, 0.02%)</title><rect x="87.8003%" y="885" width="0.0157%" height="15" fill="rgb(221,14,54)"/><text x="88.0503%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="87.8003%" y="869" width="0.0157%" height="15" fill="rgb(254,102,2)"/><text x="88.0503%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="87.8003%" y="853" width="0.0157%" height="15" fill="rgb(232,104,17)"/><text x="88.0503%" y="863.50"></text></g><g><title>AppKit`__establish_principal_talagent_connection_block_invoke (1 samples, 0.02%)</title><rect x="87.8003%" y="837" width="0.0157%" height="15" fill="rgb(250,220,14)"/><text x="88.0503%" y="847.50"></text></g><g><title>AppKit`create_talagent_connection (1 samples, 0.02%)</title><rect x="87.8003%" y="821" width="0.0157%" height="15" fill="rgb(241,158,9)"/><text x="88.0503%" y="831.50"></text></g><g><title>libxpc.dylib`xpc_connection_resume (1 samples, 0.02%)</title><rect x="87.8003%" y="805" width="0.0157%" height="15" fill="rgb(246,9,43)"/><text x="88.0503%" y="815.50"></text></g><g><title>libxpc.dylib`_xpc_connection_activate_if_needed (1 samples, 0.02%)</title><rect x="87.8003%" y="789" width="0.0157%" height="15" fill="rgb(206,73,33)"/><text x="88.0503%" y="799.50"></text></g><g><title>libxpc.dylib`_xpc_connection_init (1 samples, 0.02%)</title><rect x="87.8003%" y="773" width="0.0157%" height="15" fill="rgb(222,79,8)"/><text x="88.0503%" y="783.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (2 samples, 0.03%)</title><rect x="87.8003%" y="1029" width="0.0314%" height="15" fill="rgb(234,8,54)"/><text x="88.0503%" y="1039.50"></text></g><g><title>AE`aeProcessAppleEvent (2 samples, 0.03%)</title><rect x="87.8003%" y="1013" width="0.0314%" height="15" fill="rgb(209,134,38)"/><text x="88.0503%" y="1023.50"></text></g><g><title>AE`0x00007fff3802e790 (2 samples, 0.03%)</title><rect x="87.8003%" y="997" width="0.0314%" height="15" fill="rgb(230,127,29)"/><text x="88.0503%" y="1007.50"></text></g><g><title>AE`0x00007fff3802e816 (2 samples, 0.03%)</title><rect x="87.8003%" y="981" width="0.0314%" height="15" fill="rgb(242,44,41)"/><text x="88.0503%" y="991.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (2 samples, 0.03%)</title><rect x="87.8003%" y="965" width="0.0314%" height="15" fill="rgb(222,56,43)"/><text x="88.0503%" y="975.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (2 samples, 0.03%)</title><rect x="87.8003%" y="949" width="0.0314%" height="15" fill="rgb(238,39,47)"/><text x="88.0503%" y="959.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (2 samples, 0.03%)</title><rect x="87.8003%" y="933" width="0.0314%" height="15" fill="rgb(226,79,43)"/><text x="88.0503%" y="943.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (2 samples, 0.03%)</title><rect x="87.8003%" y="917" width="0.0314%" height="15" fill="rgb(242,105,53)"/><text x="88.0503%" y="927.50"></text></g><g><title>AppKit`-[NSApplication _switchToSpaceIfNeeded] (1 samples, 0.02%)</title><rect x="87.8160%" y="901" width="0.0157%" height="15" fill="rgb(251,132,46)"/><text x="88.0660%" y="911.50"></text></g><g><title>AppKit`-[NSRunningApplication activationPolicy] (1 samples, 0.02%)</title><rect x="87.8160%" y="885" width="0.0157%" height="15" fill="rgb(231,77,14)"/><text x="88.0660%" y="895.50"></text></g><g><title>AppKit`-[NSRunningApplication _fetchDynamicProperties] (1 samples, 0.02%)</title><rect x="87.8160%" y="869" width="0.0157%" height="15" fill="rgb(240,135,9)"/><text x="88.0660%" y="879.50"></text></g><g><title>LaunchServices`_LSCopyApplicationInformation (1 samples, 0.02%)</title><rect x="87.8160%" y="853" width="0.0157%" height="15" fill="rgb(248,109,14)"/><text x="88.0660%" y="863.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.02%)</title><rect x="87.8160%" y="837" width="0.0157%" height="15" fill="rgb(227,146,52)"/><text x="88.0660%" y="847.50"></text></g><g><title>CoreFoundation`CFStringCompareWithOptionsAndLocale (1 samples, 0.02%)</title><rect x="87.8160%" y="821" width="0.0157%" height="15" fill="rgb(232,54,3)"/><text x="88.0660%" y="831.50"></text></g><g><title>AppKit`_hideShowHandler (1 samples, 0.02%)</title><rect x="87.8317%" y="981" width="0.0157%" height="15" fill="rgb(229,201,43)"/><text x="88.0817%" y="991.50"></text></g><g><title>HIToolbox`ConfirmAppShowHideEvent (1 samples, 0.02%)</title><rect x="87.8317%" y="965" width="0.0157%" height="15" fill="rgb(252,161,33)"/><text x="88.0817%" y="975.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (1 samples, 0.02%)</title><rect x="87.8317%" y="949" width="0.0157%" height="15" fill="rgb(226,146,40)"/><text x="88.0817%" y="959.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (1 samples, 0.02%)</title><rect x="87.8317%" y="933" width="0.0157%" height="15" fill="rgb(219,47,25)"/><text x="88.0817%" y="943.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (1 samples, 0.02%)</title><rect x="87.8317%" y="917" width="0.0157%" height="15" fill="rgb(250,135,13)"/><text x="88.0817%" y="927.50"></text></g><g><title>HIToolbox`SendEventToEventTarget (2 samples, 0.03%)</title><rect x="87.8317%" y="1029" width="0.0314%" height="15" fill="rgb(219,229,18)"/><text x="88.0817%" y="1039.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (2 samples, 0.03%)</title><rect x="87.8317%" y="1013" width="0.0314%" height="15" fill="rgb(217,152,27)"/><text x="88.0817%" y="1023.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (2 samples, 0.03%)</title><rect x="87.8317%" y="997" width="0.0314%" height="15" fill="rgb(225,71,47)"/><text x="88.0817%" y="1007.50"></text></g><g><title>HIToolbox`ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (1 samples, 0.02%)</title><rect x="87.8474%" y="981" width="0.0157%" height="15" fill="rgb(220,139,14)"/><text x="88.0974%" y="991.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (1 samples, 0.02%)</title><rect x="87.8474%" y="965" width="0.0157%" height="15" fill="rgb(247,54,32)"/><text x="88.0974%" y="975.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (1 samples, 0.02%)</title><rect x="87.8474%" y="949" width="0.0157%" height="15" fill="rgb(252,131,39)"/><text x="88.0974%" y="959.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (1 samples, 0.02%)</title><rect x="87.8474%" y="933" width="0.0157%" height="15" fill="rgb(210,108,39)"/><text x="88.0974%" y="943.50"></text></g><g><title>HIToolbox`TSMAppActivationHandler (1 samples, 0.02%)</title><rect x="87.8474%" y="917" width="0.0157%" height="15" fill="rgb(205,23,29)"/><text x="88.0974%" y="927.50"></text></g><g><title>HIToolbox`TSMSimulateAppActivated (1 samples, 0.02%)</title><rect x="87.8474%" y="901" width="0.0157%" height="15" fill="rgb(246,139,46)"/><text x="88.0974%" y="911.50"></text></g><g><title>HIToolbox`_ISGetCapsLockModifierState (1 samples, 0.02%)</title><rect x="87.8474%" y="885" width="0.0157%" height="15" fill="rgb(250,81,26)"/><text x="88.0974%" y="895.50"></text></g><g><title>HIToolbox`___ISGetCapsLockModifierState_block_invoke (1 samples, 0.02%)</title><rect x="87.8474%" y="869" width="0.0157%" height="15" fill="rgb(214,104,7)"/><text x="88.0974%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="87.8474%" y="853" width="0.0157%" height="15" fill="rgb(233,189,8)"/><text x="88.0974%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="87.8474%" y="837" width="0.0157%" height="15" fill="rgb(228,141,17)"/><text x="88.0974%" y="847.50"></text></g><g><title>HIToolbox`___GetIOHIDEventSystemClient_block_invoke (1 samples, 0.02%)</title><rect x="87.8474%" y="821" width="0.0157%" height="15" fill="rgb(247,157,1)"/><text x="88.0974%" y="831.50"></text></g><g><title>IOKit`IOHIDEventSystemClientCreateWithType (1 samples, 0.02%)</title><rect x="87.8474%" y="805" width="0.0157%" height="15" fill="rgb(249,225,5)"/><text x="88.0974%" y="815.50"></text></g><g><title>libdyld.dylib`dladdr (1 samples, 0.02%)</title><rect x="87.8474%" y="789" width="0.0157%" height="15" fill="rgb(242,55,13)"/><text x="88.0974%" y="799.50"></text></g><g><title>dyld`dladdr (1 samples, 0.02%)</title><rect x="87.8474%" y="773" width="0.0157%" height="15" fill="rgb(230,49,50)"/><text x="88.0974%" y="783.50"></text></g><g><title>dyld`ImageLoaderMachO::findClosestSymbol (1 samples, 0.02%)</title><rect x="87.8474%" y="757" width="0.0157%" height="15" fill="rgb(241,111,38)"/><text x="88.0974%" y="767.50"></text></g><g><title>CoreGraphics`argb32_image (1 samples, 0.02%)</title><rect x="87.8631%" y="533" width="0.0157%" height="15" fill="rgb(252,155,4)"/><text x="88.1131%" y="543.50"></text></g><g><title>CoreGraphics`CGSConvertABGR8888toRGBA8888 (1 samples, 0.02%)</title><rect x="87.8631%" y="517" width="0.0157%" height="15" fill="rgb(212,69,32)"/><text x="88.1131%" y="527.50"></text></g><g><title>vImage`vImagePermuteChannels_ARGB8888 (1 samples, 0.02%)</title><rect x="87.8631%" y="501" width="0.0157%" height="15" fill="rgb(243,107,47)"/><text x="88.1131%" y="511.50"></text></g><g><title>libdispatch.dylib`dispatch_apply_f (1 samples, 0.02%)</title><rect x="87.8631%" y="485" width="0.0157%" height="15" fill="rgb(247,130,12)"/><text x="88.1131%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke_and_wait (1 samples, 0.02%)</title><rect x="87.8631%" y="469" width="0.0157%" height="15" fill="rgb(233,74,16)"/><text x="88.1131%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (1 samples, 0.02%)</title><rect x="87.8631%" y="453" width="0.0157%" height="15" fill="rgb(208,58,18)"/><text x="88.1131%" y="463.50"></text></g><g><title>vImage`Do_PermuteChannels (1 samples, 0.02%)</title><rect x="87.8631%" y="437" width="0.0157%" height="15" fill="rgb(242,225,1)"/><text x="88.1131%" y="447.50"></text></g><g><title>vImage`vConvert_PermuteChannels_ARGB8888_CV_avx2 (1 samples, 0.02%)</title><rect x="87.8631%" y="421" width="0.0157%" height="15" fill="rgb(249,39,40)"/><text x="88.1131%" y="431.50"></text></g><g><title>HIToolbox`CopyWindowImageRect (2 samples, 0.03%)</title><rect x="87.8631%" y="629" width="0.0314%" height="15" fill="rgb(207,72,44)"/><text x="88.1131%" y="639.50"></text></g><g><title>HIToolbox`CopyWindowImageRectToContext (2 samples, 0.03%)</title><rect x="87.8631%" y="613" width="0.0314%" height="15" fill="rgb(215,193,12)"/><text x="88.1131%" y="623.50"></text></g><g><title>SkyLight`SLContextCopyWindowContentsToRect (2 samples, 0.03%)</title><rect x="87.8631%" y="597" width="0.0314%" height="15" fill="rgb(248,41,39)"/><text x="88.1131%" y="607.50"></text></g><g><title>CoreGraphics`ripc_DrawWindowContents (2 samples, 0.03%)</title><rect x="87.8631%" y="581" width="0.0314%" height="15" fill="rgb(253,85,4)"/><text x="88.1131%" y="591.50"></text></g><g><title>CoreGraphics`CGSImageDataLockDevice (2 samples, 0.03%)</title><rect x="87.8631%" y="565" width="0.0314%" height="15" fill="rgb(243,70,31)"/><text x="88.1131%" y="575.50"></text></g><g><title>CoreGraphics`img_data_lock (2 samples, 0.03%)</title><rect x="87.8631%" y="549" width="0.0314%" height="15" fill="rgb(253,195,26)"/><text x="88.1131%" y="559.50"></text></g><g><title>CoreGraphics`img_raw_read (1 samples, 0.02%)</title><rect x="87.8788%" y="533" width="0.0157%" height="15" fill="rgb(243,42,11)"/><text x="88.1288%" y="543.50"></text></g><g><title>CoreGraphics`get_chunks_direct (1 samples, 0.02%)</title><rect x="87.8788%" y="517" width="0.0157%" height="15" fill="rgb(239,66,17)"/><text x="88.1288%" y="527.50"></text></g><g><title>CoreGraphics`CGDataProviderDirectGetBytesAtPositionInternal (1 samples, 0.02%)</title><rect x="87.8788%" y="501" width="0.0157%" height="15" fill="rgb(217,132,21)"/><text x="88.1288%" y="511.50"></text></g><g><title>CoreGraphics`provider_for_destination_get_bytes_at_position_inner (1 samples, 0.02%)</title><rect x="87.8788%" y="485" width="0.0157%" height="15" fill="rgb(252,202,21)"/><text x="88.1288%" y="495.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertUsingCMSConverter (1 samples, 0.02%)</title><rect x="87.8788%" y="469" width="0.0157%" height="15" fill="rgb(233,98,36)"/><text x="88.1288%" y="479.50"></text></g><g><title>CoreGraphics`convert_using_vImageConverter (1 samples, 0.02%)</title><rect x="87.8788%" y="453" width="0.0157%" height="15" fill="rgb(216,153,54)"/><text x="88.1288%" y="463.50"></text></g><g><title>CoreGraphics`vImageConverterConvert (1 samples, 0.02%)</title><rect x="87.8788%" y="437" width="0.0157%" height="15" fill="rgb(250,99,7)"/><text x="88.1288%" y="447.50"></text></g><g><title>CoreGraphics`vImageConverter_convert_internal (1 samples, 0.02%)</title><rect x="87.8788%" y="421" width="0.0157%" height="15" fill="rgb(207,56,50)"/><text x="88.1288%" y="431.50"></text></g><g><title>vImage`vImageConvert_AnyToAny (1 samples, 0.02%)</title><rect x="87.8788%" y="405" width="0.0157%" height="15" fill="rgb(244,61,34)"/><text x="88.1288%" y="415.50"></text></g><g><title>vImage`AnyToAnyBlock (1 samples, 0.02%)</title><rect x="87.8788%" y="389" width="0.0157%" height="15" fill="rgb(241,50,38)"/><text x="88.1288%" y="399.50"></text></g><g><title>vImage`AnyToAnyBlockInternal (1 samples, 0.02%)</title><rect x="87.8788%" y="373" width="0.0157%" height="15" fill="rgb(212,166,30)"/><text x="88.1288%" y="383.50"></text></g><g><title>vImage`LookupTable_Planar8toPlanar16 (1 samples, 0.02%)</title><rect x="87.8788%" y="357" width="0.0157%" height="15" fill="rgb(249,127,32)"/><text x="88.1288%" y="367.50"></text></g><g><title>vImage`vImageLookupTable_Planar8toPlanar16 (1 samples, 0.02%)</title><rect x="87.8788%" y="341" width="0.0157%" height="15" fill="rgb(209,103,0)"/><text x="88.1288%" y="351.50"></text></g><g><title>vImage`vLookupTable_Planar8toPlanar16 (1 samples, 0.02%)</title><rect x="87.8788%" y="325" width="0.0157%" height="15" fill="rgb(238,209,51)"/><text x="88.1288%" y="335.50"></text></g><g><title>CoreGraphics`CGContextClearRect (1 samples, 0.02%)</title><rect x="87.8945%" y="613" width="0.0157%" height="15" fill="rgb(237,56,23)"/><text x="88.1445%" y="623.50"></text></g><g><title>CoreGraphics`CGContextFillRect (1 samples, 0.02%)</title><rect x="87.8945%" y="597" width="0.0157%" height="15" fill="rgb(215,153,46)"/><text x="88.1445%" y="607.50"></text></g><g><title>CoreGraphics`CGContextFillRects (1 samples, 0.02%)</title><rect x="87.8945%" y="581" width="0.0157%" height="15" fill="rgb(224,49,31)"/><text x="88.1445%" y="591.50"></text></g><g><title>CoreGraphics`ripc_DrawRects (1 samples, 0.02%)</title><rect x="87.8945%" y="565" width="0.0157%" height="15" fill="rgb(250,18,42)"/><text x="88.1445%" y="575.50"></text></g><g><title>CoreGraphics`ripc_Render (1 samples, 0.02%)</title><rect x="87.8945%" y="549" width="0.0157%" height="15" fill="rgb(215,176,39)"/><text x="88.1445%" y="559.50"></text></g><g><title>CoreGraphics`RIPLayerBltShape (1 samples, 0.02%)</title><rect x="87.8945%" y="533" width="0.0157%" height="15" fill="rgb(223,77,29)"/><text x="88.1445%" y="543.50"></text></g><g><title>CoreGraphics`argb32_mark (1 samples, 0.02%)</title><rect x="87.8945%" y="517" width="0.0157%" height="15" fill="rgb(234,94,52)"/><text x="88.1445%" y="527.50"></text></g><g><title>CoreGraphics`CGBlt_fillBytes (1 samples, 0.02%)</title><rect x="87.8945%" y="501" width="0.0157%" height="15" fill="rgb(220,154,50)"/><text x="88.1445%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="87.8945%" y="485" width="0.0157%" height="15" fill="rgb(212,11,10)"/><text x="88.1445%" y="495.50"></text></g><g><title>HIToolbox`HIMenuBarView::EnsureBarLayout (1 samples, 0.02%)</title><rect x="87.9102%" y="613" width="0.0157%" height="15" fill="rgb(205,166,19)"/><text x="88.1602%" y="623.50"></text></g><g><title>HIToolbox`HIMenuBarView::MeasureAppMenus (1 samples, 0.02%)</title><rect x="87.9102%" y="597" width="0.0157%" height="15" fill="rgb(244,198,16)"/><text x="88.1602%" y="607.50"></text></g><g><title>HIToolbox`HIMenuBarView::MeasureMenuTitle (1 samples, 0.02%)</title><rect x="87.9102%" y="581" width="0.0157%" height="15" fill="rgb(219,69,12)"/><text x="88.1602%" y="591.50"></text></g><g><title>HIToolbox`HIThemeGetTextDimensions (1 samples, 0.02%)</title><rect x="87.9102%" y="565" width="0.0157%" height="15" fill="rgb(245,30,7)"/><text x="88.1602%" y="575.50"></text></g><g><title>HIToolbox`DataEngine::GetTextDimensions (1 samples, 0.02%)</title><rect x="87.9102%" y="549" width="0.0157%" height="15" fill="rgb(218,221,48)"/><text x="88.1602%" y="559.50"></text></g><g><title>HIToolbox`TCoreTextEngine::GetThemeTextDimensions (1 samples, 0.02%)</title><rect x="87.9102%" y="533" width="0.0157%" height="15" fill="rgb(216,66,15)"/><text x="88.1602%" y="543.50"></text></g><g><title>HIToolbox`TCoreTextEngine::Layout (1 samples, 0.02%)</title><rect x="87.9102%" y="517" width="0.0157%" height="15" fill="rgb(226,122,50)"/><text x="88.1602%" y="527.50"></text></g><g><title>HIToolbox`TCoreTextEngine::LayoutSingleLine (1 samples, 0.02%)</title><rect x="87.9102%" y="501" width="0.0157%" height="15" fill="rgb(239,156,16)"/><text x="88.1602%" y="511.50"></text></g><g><title>CoreText`CTLineCreateWithAttributedString (1 samples, 0.02%)</title><rect x="87.9102%" y="485" width="0.0157%" height="15" fill="rgb(224,27,38)"/><text x="88.1602%" y="495.50"></text></g><g><title>CoreText`TTypesetterAttrString::TTypesetterAttrString (1 samples, 0.02%)</title><rect x="87.9102%" y="469" width="0.0157%" height="15" fill="rgb(224,39,27)"/><text x="88.1602%" y="479.50"></text></g><g><title>CoreText`TTypesetterAttrString::Initialize (1 samples, 0.02%)</title><rect x="87.9102%" y="453" width="0.0157%" height="15" fill="rgb(215,92,29)"/><text x="88.1602%" y="463.50"></text></g><g><title>CoreText`TAttributes::TAttributes (1 samples, 0.02%)</title><rect x="87.9102%" y="437" width="0.0157%" height="15" fill="rgb(207,159,16)"/><text x="88.1602%" y="447.50"></text></g><g><title>CoreText`CTParagraphStyleGetCompositionLanguageForLanguage (1 samples, 0.02%)</title><rect x="87.9102%" y="421" width="0.0157%" height="15" fill="rgb(238,163,47)"/><text x="88.1602%" y="431.50"></text></g><g><title>CoreText`CompositionLanguageWithPreferences(__CFArray const*) (1 samples, 0.02%)</title><rect x="87.9102%" y="405" width="0.0157%" height="15" fill="rgb(219,91,49)"/><text x="88.1602%" y="415.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLocalizationsForPreferences (1 samples, 0.02%)</title><rect x="87.9102%" y="389" width="0.0157%" height="15" fill="rgb(227,167,31)"/><text x="88.1602%" y="399.50"></text></g><g><title>CoreFoundation`_CFBundleCopyPreferredLanguagesInList (1 samples, 0.02%)</title><rect x="87.9102%" y="373" width="0.0157%" height="15" fill="rgb(234,80,54)"/><text x="88.1602%" y="383.50"></text></g><g><title>CoreFoundation`_CFBundleCreateMutableArrayOfFallbackLanguages (1 samples, 0.02%)</title><rect x="87.9102%" y="357" width="0.0157%" height="15" fill="rgb(212,114,2)"/><text x="88.1602%" y="367.50"></text></g><g><title>libicucore.A.dylib`ualoc_localizationsToUse (1 samples, 0.02%)</title><rect x="87.9102%" y="341" width="0.0157%" height="15" fill="rgb(234,50,24)"/><text x="88.1602%" y="351.50"></text></g><g><title>libicucore.A.dylib`uloc_minimizeSubtags (1 samples, 0.02%)</title><rect x="87.9102%" y="325" width="0.0157%" height="15" fill="rgb(221,68,8)"/><text x="88.1602%" y="335.50"></text></g><g><title>libicucore.A.dylib`ulocimp_minimizeSubtags (1 samples, 0.02%)</title><rect x="87.9102%" y="309" width="0.0157%" height="15" fill="rgb(254,180,31)"/><text x="88.1602%" y="319.50"></text></g><g><title>libicucore.A.dylib`0x00007fff6c04a2d2 (1 samples, 0.02%)</title><rect x="87.9102%" y="293" width="0.0157%" height="15" fill="rgb(247,130,50)"/><text x="88.1602%" y="303.50"></text></g><g><title>libicucore.A.dylib`0x00007fff6c0af98a (1 samples, 0.02%)</title><rect x="87.9102%" y="277" width="0.0157%" height="15" fill="rgb(211,109,4)"/><text x="88.1602%" y="287.50"></text></g><g><title>libicucore.A.dylib`0x00007fff6c0af8f2 (1 samples, 0.02%)</title><rect x="87.9102%" y="261" width="0.0157%" height="15" fill="rgb(238,50,21)"/><text x="88.1602%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (1 samples, 0.02%)</title><rect x="87.9102%" y="245" width="0.0157%" height="15" fill="rgb(225,57,45)"/><text x="88.1602%" y="255.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (1 samples, 0.02%)</title><rect x="87.9259%" y="501" width="0.0157%" height="15" fill="rgb(209,196,50)"/><text x="88.1759%" y="511.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (1 samples, 0.02%)</title><rect x="87.9259%" y="485" width="0.0157%" height="15" fill="rgb(242,140,13)"/><text x="88.1759%" y="495.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (1 samples, 0.02%)</title><rect x="87.9259%" y="469" width="0.0157%" height="15" fill="rgb(217,111,7)"/><text x="88.1759%" y="479.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (1 samples, 0.02%)</title><rect x="87.9259%" y="453" width="0.0157%" height="15" fill="rgb(253,193,51)"/><text x="88.1759%" y="463.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (1 samples, 0.02%)</title><rect x="87.9259%" y="437" width="0.0157%" height="15" fill="rgb(252,70,29)"/><text x="88.1759%" y="447.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (1 samples, 0.02%)</title><rect x="87.9259%" y="421" width="0.0157%" height="15" fill="rgb(232,127,12)"/><text x="88.1759%" y="431.50"></text></g><g><title>CoreGraphics`img_image (1 samples, 0.02%)</title><rect x="87.9259%" y="405" width="0.0157%" height="15" fill="rgb(211,180,21)"/><text x="88.1759%" y="415.50"></text></g><g><title>CoreGraphics`CGDataProviderCreateForDestinationWithImage (1 samples, 0.02%)</title><rect x="87.9259%" y="389" width="0.0157%" height="15" fill="rgb(229,72,13)"/><text x="88.1759%" y="399.50"></text></g><g><title>CoreGraphics`CGDataProviderCreateForDestination (1 samples, 0.02%)</title><rect x="87.9259%" y="373" width="0.0157%" height="15" fill="rgb(240,211,49)"/><text x="88.1759%" y="383.50"></text></g><g><title>CoreGraphics`CGCMSConverterConvertGetConverterInfo (1 samples, 0.02%)</title><rect x="87.9259%" y="357" width="0.0157%" height="15" fill="rgb(219,149,40)"/><text x="88.1759%" y="367.50"></text></g><g><title>CoreGraphics`icc_converter_info (1 samples, 0.02%)</title><rect x="87.9259%" y="341" width="0.0157%" height="15" fill="rgb(210,127,46)"/><text x="88.1759%" y="351.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreateCachedCGvImageConverter (1 samples, 0.02%)</title><rect x="87.9259%" y="325" width="0.0157%" height="15" fill="rgb(220,106,7)"/><text x="88.1759%" y="335.50"></text></g><g><title>CoreGraphics`CGvImageConverterCacheGetRetained (1 samples, 0.02%)</title><rect x="87.9259%" y="309" width="0.0157%" height="15" fill="rgb(249,31,22)"/><text x="88.1759%" y="319.50"></text></g><g><title>CoreGraphics`CGvImageConverterInitializeShared (1 samples, 0.02%)</title><rect x="87.9259%" y="293" width="0.0157%" height="15" fill="rgb(253,1,49)"/><text x="88.1759%" y="303.50"></text></g><g><title>vImage`vImageConverter_CreateWithColorSyncCodeFragment (1 samples, 0.02%)</title><rect x="87.9259%" y="277" width="0.0157%" height="15" fill="rgb(227,144,33)"/><text x="88.1759%" y="287.50"></text></g><g><title>vImage`vImageConverter_CreateCGPassList (1 samples, 0.02%)</title><rect x="87.9259%" y="261" width="0.0157%" height="15" fill="rgb(249,163,44)"/><text x="88.1759%" y="271.50"></text></g><g><title>vImage`CacheTable_Init (1 samples, 0.02%)</title><rect x="87.9259%" y="245" width="0.0157%" height="15" fill="rgb(234,15,39)"/><text x="88.1759%" y="255.50"></text></g><g><title>vImage`PiecewiseGamma_ComputeTable16Q12 (1 samples, 0.02%)</title><rect x="87.9259%" y="229" width="0.0157%" height="15" fill="rgb(207,66,16)"/><text x="88.1759%" y="239.50"></text></g><g><title>vImage`vConvert_Fto16Q12_avx2 (1 samples, 0.02%)</title><rect x="87.9259%" y="213" width="0.0157%" height="15" fill="rgb(233,112,24)"/><text x="88.1759%" y="223.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.02%)</title><rect x="87.9416%" y="485" width="0.0157%" height="15" fill="rgb(230,90,22)"/><text x="88.1916%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="87.9416%" y="469" width="0.0157%" height="15" fill="rgb(229,61,13)"/><text x="88.1916%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="87.9416%" y="453" width="0.0157%" height="15" fill="rgb(225,57,24)"/><text x="88.1916%" y="463.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryI objectForKey:] (1 samples, 0.02%)</title><rect x="87.9573%" y="421" width="0.0157%" height="15" fill="rgb(208,169,48)"/><text x="88.2073%" y="431.50"></text></g><g><title>CoreImage`+[CIImage imageWithCGImage:options:] (2 samples, 0.03%)</title><rect x="87.9573%" y="469" width="0.0314%" height="15" fill="rgb(244,218,51)"/><text x="88.2073%" y="479.50"></text></g><g><title>CoreImage`-[CIImage initWithCGImage:options:] (2 samples, 0.03%)</title><rect x="87.9573%" y="453" width="0.0314%" height="15" fill="rgb(214,148,10)"/><text x="88.2073%" y="463.50"></text></g><g><title>CoreGraphics`subImageProviderCopyImageBlockSet (2 samples, 0.03%)</title><rect x="87.9573%" y="437" width="0.0314%" height="15" fill="rgb(225,174,27)"/><text x="88.2073%" y="447.50"></text></g><g><title>CoreUI`__csiCompressImageProviderCopyImageBlockSetWithOptions (1 samples, 0.02%)</title><rect x="87.9730%" y="421" width="0.0157%" height="15" fill="rgb(230,96,26)"/><text x="88.2230%" y="431.50"></text></g><g><title>CoreUI`-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:] (1 samples, 0.02%)</title><rect x="87.9730%" y="405" width="0.0157%" height="15" fill="rgb(232,10,30)"/><text x="88.2230%" y="415.50"></text></g><g><title>CoreUI`CUIUncompressDeepmap2ImageData (1 samples, 0.02%)</title><rect x="87.9730%" y="389" width="0.0157%" height="15" fill="rgb(222,8,50)"/><text x="88.2230%" y="399.50"></text></g><g><title>CoreUI`__CUIUncompressDeepmap2ImageData_block_invoke (1 samples, 0.02%)</title><rect x="87.9730%" y="373" width="0.0157%" height="15" fill="rgb(213,81,27)"/><text x="88.2230%" y="383.50"></text></g><g><title>vImage`vImageDeepmap2Decode (1 samples, 0.02%)</title><rect x="87.9730%" y="357" width="0.0157%" height="15" fill="rgb(245,50,10)"/><text x="88.2230%" y="367.50"></text></g><g><title>vImage`Deepmap2DecodeDefault (1 samples, 0.02%)</title><rect x="87.9730%" y="341" width="0.0157%" height="15" fill="rgb(216,100,18)"/><text x="88.2230%" y="351.50"></text></g><g><title>libcompression.dylib`compression_decode_buffer (1 samples, 0.02%)</title><rect x="87.9730%" y="325" width="0.0157%" height="15" fill="rgb(236,147,54)"/><text x="88.2230%" y="335.50"></text></g><g><title>libcompression.dylib`lzfse_decode_buffer (1 samples, 0.02%)</title><rect x="87.9730%" y="309" width="0.0157%" height="15" fill="rgb(205,143,26)"/><text x="88.2230%" y="319.50"></text></g><g><title>libcompression.dylib`lzfseDecode (1 samples, 0.02%)</title><rect x="87.9730%" y="293" width="0.0157%" height="15" fill="rgb(236,26,9)"/><text x="88.2230%" y="303.50"></text></g><g><title>libcompression.dylib`lzfse_decode_lmd (1 samples, 0.02%)</title><rect x="87.9730%" y="277" width="0.0157%" height="15" fill="rgb(221,165,53)"/><text x="88.2230%" y="287.50"></text></g><g><title>CoreImage`CI::MetalContext::name (1 samples, 0.02%)</title><rect x="87.9887%" y="357" width="0.0157%" height="15" fill="rgb(214,110,17)"/><text x="88.2387%" y="367.50"></text></g><g><title>CoreImage`-[CIContext(createCGImage) _createCGImage:fromRect:format:colorSpace:deferred:] (2 samples, 0.03%)</title><rect x="87.9887%" y="469" width="0.0314%" height="15" fill="rgb(237,197,12)"/><text x="88.2387%" y="479.50"></text></g><g><title>CoreImage`-[CIContext(CIRenderDestination) startTaskToRender:fromRect:toDestination:atPoint:error:] (2 samples, 0.03%)</title><rect x="87.9887%" y="453" width="0.0314%" height="15" fill="rgb(205,84,17)"/><text x="88.2387%" y="463.50"></text></g><g><title>CoreImage`-[CIContext(CIRenderDestination) startTaskToRender:toDestination:error:] (2 samples, 0.03%)</title><rect x="87.9887%" y="437" width="0.0314%" height="15" fill="rgb(237,18,45)"/><text x="88.2387%" y="447.50"></text></g><g><title>CoreImage`-[CIContext(CIRenderDestination) _startTaskToRender:toDestination:forPrepareRender:forClear:error:] (2 samples, 0.03%)</title><rect x="87.9887%" y="421" width="0.0314%" height="15" fill="rgb(221,87,14)"/><text x="88.2387%" y="431.50"></text></g><g><title>CoreImage`CI::RenderToBitmap::render (2 samples, 0.03%)</title><rect x="87.9887%" y="405" width="0.0314%" height="15" fill="rgb(238,186,15)"/><text x="88.2387%" y="415.50"></text></g><g><title>CoreImage`CI::image_get_bitmap (2 samples, 0.03%)</title><rect x="87.9887%" y="389" width="0.0314%" height="15" fill="rgb(208,115,11)"/><text x="88.2387%" y="399.50"></text></g><g><title>CoreImage`CI::tile_node_graph(CI::Context*, CI::RenderDestination const*, char const*, CI::Node*, CGRect const&amp;, CI::PixelFormat, CI::swizzle_info const&amp;, CI::TileTask*  (2 samples, 0.03%)</title><rect x="87.9887%" y="373" width="0.0314%" height="15" fill="rgb(254,175,0)"/><text x="88.2387%" y="383.50"></text></g><g><title>CoreImage`CI::recursive_tile(CI::RenderTask*, CI::Context*, CI::RenderDestination const*, char const*, CI::Node*, CGRect const&amp;, CI::PixelFormat, CI::swizzle_info const&amp;, CI::TileTask*  (1 samples, 0.02%)</title><rect x="88.0044%" y="357" width="0.0157%" height="15" fill="rgb(227,24,42)"/><text x="88.2544%" y="367.50"></text></g><g><title>CoreImage`invocation function for block in CI::image_get_bitmap (1 samples, 0.02%)</title><rect x="88.0044%" y="341" width="0.0157%" height="15" fill="rgb(223,211,37)"/><text x="88.2544%" y="351.50"></text></g><g><title>CoreImage`CI::Context::render (1 samples, 0.02%)</title><rect x="88.0044%" y="325" width="0.0157%" height="15" fill="rgb(235,49,27)"/><text x="88.2544%" y="335.50"></text></g><g><title>CoreImage`CI::Context::recursive_render (1 samples, 0.02%)</title><rect x="88.0044%" y="309" width="0.0157%" height="15" fill="rgb(254,97,51)"/><text x="88.2544%" y="319.50"></text></g><g><title>CoreImage`CI::MetalContext::render_root_node(CI::TileTask*, CI::ProgramNode*, CGRect const&amp;, void  (1 samples, 0.02%)</title><rect x="88.0044%" y="293" width="0.0157%" height="15" fill="rgb(249,51,40)"/><text x="88.2544%" y="303.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (1 samples, 0.02%)</title><rect x="88.0044%" y="277" width="0.0157%" height="15" fill="rgb(210,128,45)"/><text x="88.2544%" y="287.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (1 samples, 0.02%)</title><rect x="88.0044%" y="261" width="0.0157%" height="15" fill="rgb(224,137,50)"/><text x="88.2544%" y="271.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (1 samples, 0.02%)</title><rect x="88.0044%" y="245" width="0.0157%" height="15" fill="rgb(242,15,9)"/><text x="88.2544%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.02%)</title><rect x="88.0044%" y="229" width="0.0157%" height="15" fill="rgb(233,187,41)"/><text x="88.2544%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.02%)</title><rect x="88.0044%" y="213" width="0.0157%" height="15" fill="rgb(227,2,29)"/><text x="88.2544%" y="223.50"></text></g><g><title>CoreImage`+[CIKernelLibrary(Internal) internalLibraryWithName:device:] (1 samples, 0.02%)</title><rect x="88.0201%" y="325" width="0.0157%" height="15" fill="rgb(222,70,3)"/><text x="88.2701%" y="335.50"></text></g><g><title>Foundation`-[NSBundle URLForResource:withExtension:subdirectory:] (1 samples, 0.02%)</title><rect x="88.0201%" y="309" width="0.0157%" height="15" fill="rgb(213,11,42)"/><text x="88.2701%" y="319.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.02%)</title><rect x="88.0201%" y="293" width="0.0157%" height="15" fill="rgb(225,150,9)"/><text x="88.2701%" y="303.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.02%)</title><rect x="88.0201%" y="277" width="0.0157%" height="15" fill="rgb(230,162,45)"/><text x="88.2701%" y="287.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.02%)</title><rect x="88.0201%" y="261" width="0.0157%" height="15" fill="rgb(222,14,52)"/><text x="88.2701%" y="271.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.02%)</title><rect x="88.0201%" y="245" width="0.0157%" height="15" fill="rgb(254,198,14)"/><text x="88.2701%" y="255.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLanguageSearchListInBundle (1 samples, 0.02%)</title><rect x="88.0201%" y="229" width="0.0157%" height="15" fill="rgb(220,217,30)"/><text x="88.2701%" y="239.50"></text></g><g><title>CoreFoundation`CFBundleCopyBundleLocalizations (1 samples, 0.02%)</title><rect x="88.0201%" y="213" width="0.0157%" height="15" fill="rgb(215,146,41)"/><text x="88.2701%" y="223.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLProjDirectoriesForURL (1 samples, 0.02%)</title><rect x="88.0201%" y="197" width="0.0157%" height="15" fill="rgb(217,27,36)"/><text x="88.2701%" y="207.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.02%)</title><rect x="88.0201%" y="181" width="0.0157%" height="15" fill="rgb(219,218,39)"/><text x="88.2701%" y="191.50"></text></g><g><title>CoreFoundation`___CFBundleCopyLProjDirectoriesForURL_block_invoke (1 samples, 0.02%)</title><rect x="88.0201%" y="165" width="0.0157%" height="15" fill="rgb(219,4,42)"/><text x="88.2701%" y="175.50"></text></g><g><title>CoreFoundation`CFStringCompareWithOptionsAndLocale (1 samples, 0.02%)</title><rect x="88.0201%" y="149" width="0.0157%" height="15" fill="rgb(249,119,36)"/><text x="88.2701%" y="159.50"></text></g><g><title>CoreFoundation`CFUniCharGetBitmapPtrForPlane (1 samples, 0.02%)</title><rect x="88.0201%" y="133" width="0.0157%" height="15" fill="rgb(209,23,33)"/><text x="88.2701%" y="143.50"></text></g><g><title>libsystem_c.dylib`__srefill1 (2 samples, 0.03%)</title><rect x="88.0358%" y="69" width="0.0314%" height="15" fill="rgb(211,10,0)"/><text x="88.2858%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`__read_nocancel (2 samples, 0.03%)</title><rect x="88.0358%" y="53" width="0.0314%" height="15" fill="rgb(208,99,37)"/><text x="88.2858%" y="63.50"></text></g><g><title>CoreUI`+[CUIShapeEffectStack sharedCIContext] (4 samples, 0.06%)</title><rect x="88.0201%" y="469" width="0.0628%" height="15" fill="rgb(213,132,31)"/><text x="88.2701%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.06%)</title><rect x="88.0201%" y="453" width="0.0628%" height="15" fill="rgb(243,129,40)"/><text x="88.2701%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.06%)</title><rect x="88.0201%" y="437" width="0.0628%" height="15" fill="rgb(210,66,33)"/><text x="88.2701%" y="447.50"></text></g><g><title>CoreUI`__38+[CUIShapeEffectStack sharedCIContext]_block_invoke (4 samples, 0.06%)</title><rect x="88.0201%" y="421" width="0.0628%" height="15" fill="rgb(209,189,4)"/><text x="88.2701%" y="431.50"></text></g><g><title>CoreImage`-[CIContext initWithOptions:] (4 samples, 0.06%)</title><rect x="88.0201%" y="405" width="0.0628%" height="15" fill="rgb(214,107,37)"/><text x="88.2701%" y="415.50"></text></g><g><title>CoreImage`+[CIContext(Internal) internalContextWithMTLCommandQueue:options:] (4 samples, 0.06%)</title><rect x="88.0201%" y="389" width="0.0628%" height="15" fill="rgb(245,88,54)"/><text x="88.2701%" y="399.50"></text></g><g><title>CoreImage`CI::MetalContext::init (4 samples, 0.06%)</title><rect x="88.0201%" y="373" width="0.0628%" height="15" fill="rgb(205,146,20)"/><text x="88.2701%" y="383.50"></text></g><g><title>CoreImage`CI::new_precompiled_kernels (4 samples, 0.06%)</title><rect x="88.0201%" y="357" width="0.0628%" height="15" fill="rgb(220,161,25)"/><text x="88.2701%" y="367.50"></text></g><g><title>CoreImage`CI::PrecompiledKernels::PrecompiledKernels (4 samples, 0.06%)</title><rect x="88.0201%" y="341" width="0.0628%" height="15" fill="rgb(215,152,15)"/><text x="88.2701%" y="351.50"></text></g><g><title>Metal`-[_MTLDevice newLibraryWithURL:error:] (3 samples, 0.05%)</title><rect x="88.0358%" y="325" width="0.0471%" height="15" fill="rgb(233,192,44)"/><text x="88.2858%" y="335.50"></text></g><g><title>Metal`MTLLibraryBuilder::newLibraryWithFile(id (3 samples, 0.05%)</title><rect x="88.0358%" y="309" width="0.0471%" height="15" fill="rgb(240,170,46)"/><text x="88.2858%" y="319.50"></text></g><g><title>Metal`MTLLibraryBuilder::newLibraryWithArchive(MTLUINT256_t const&amp;, NSError**, MTLLibraryData*  (3 samples, 0.05%)</title><rect x="88.0358%" y="293" width="0.0471%" height="15" fill="rgb(207,104,33)"/><text x="88.2858%" y="303.50"></text></g><g><title>Metal`MTLLibraryCache::newLibraryData(MTLUINT256_t const&amp;, NSError**, MTLLibraryData*  (3 samples, 0.05%)</title><rect x="88.0358%" y="277" width="0.0471%" height="15" fill="rgb(219,21,39)"/><text x="88.2858%" y="287.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.05%)</title><rect x="88.0358%" y="261" width="0.0471%" height="15" fill="rgb(214,133,29)"/><text x="88.2858%" y="271.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.05%)</title><rect x="88.0358%" y="245" width="0.0471%" height="15" fill="rgb(226,93,6)"/><text x="88.2858%" y="255.50"></text></g><g><title>Metal`invocation function for block in MTLLibraryCache::newLibraryData(MTLUINT256_t const&amp;, NSError**, MTLLibraryData*  (3 samples, 0.05%)</title><rect x="88.0358%" y="229" width="0.0471%" height="15" fill="rgb(252,222,34)"/><text x="88.2858%" y="239.50"></text></g><g><title>Metal`invocation function for block in MTLLibraryBuilder::newLibraryWithFile(id (3 samples, 0.05%)</title><rect x="88.0358%" y="213" width="0.0471%" height="15" fill="rgb(252,92,48)"/><text x="88.2858%" y="223.50"></text></g><g><title>Metal`MTLLibraryDataWithArchive::parseArchive (3 samples, 0.05%)</title><rect x="88.0358%" y="197" width="0.0471%" height="15" fill="rgb(245,223,24)"/><text x="88.2858%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.05%)</title><rect x="88.0358%" y="181" width="0.0471%" height="15" fill="rgb(205,176,3)"/><text x="88.2858%" y="191.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.05%)</title><rect x="88.0358%" y="165" width="0.0471%" height="15" fill="rgb(235,151,15)"/><text x="88.2858%" y="175.50"></text></g><g><title>Metal`invocation function for block in MTLLibraryDataWithArchive::parseArchive (3 samples, 0.05%)</title><rect x="88.0358%" y="149" width="0.0471%" height="15" fill="rgb(237,209,11)"/><text x="88.2858%" y="159.50"></text></g><g><title>Metal`MTLLibraryDataWithArchive::parseArchiveSync (3 samples, 0.05%)</title><rect x="88.0358%" y="133" width="0.0471%" height="15" fill="rgb(243,227,24)"/><text x="88.2858%" y="143.50"></text></g><g><title>Metal`LibraryWithFile::setPosition (3 samples, 0.05%)</title><rect x="88.0358%" y="117" width="0.0471%" height="15" fill="rgb(239,193,16)"/><text x="88.2858%" y="127.50"></text></g><g><title>libsystem_c.dylib`fseek (3 samples, 0.05%)</title><rect x="88.0358%" y="101" width="0.0471%" height="15" fill="rgb(231,27,9)"/><text x="88.2858%" y="111.50"></text></g><g><title>libsystem_c.dylib`_fseeko (3 samples, 0.05%)</title><rect x="88.0358%" y="85" width="0.0471%" height="15" fill="rgb(219,169,10)"/><text x="88.2858%" y="95.50"></text></g><g><title>libsystem_c.dylib`_ftello (1 samples, 0.02%)</title><rect x="88.0672%" y="69" width="0.0157%" height="15" fill="rgb(244,229,43)"/><text x="88.3172%" y="79.50"></text></g><g><title>libsystem_c.dylib`__sflush (1 samples, 0.02%)</title><rect x="88.0672%" y="53" width="0.0157%" height="15" fill="rgb(254,38,20)"/><text x="88.3172%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__lseek (1 samples, 0.02%)</title><rect x="88.0672%" y="37" width="0.0157%" height="15" fill="rgb(250,47,30)"/><text x="88.3172%" y="47.50"></text></g><g><title>libFosl_dynamic.dylib`fosl_filter_kernelpool_createPool (1 samples, 0.02%)</title><rect x="88.0829%" y="373" width="0.0157%" height="15" fill="rgb(224,124,36)"/><text x="88.3329%" y="383.50"></text></g><g><title>libFosl_dynamic.dylib`0x00007fff6ae1df9c (1 samples, 0.02%)</title><rect x="88.0829%" y="357" width="0.0157%" height="15" fill="rgb(246,68,51)"/><text x="88.3329%" y="367.50"></text></g><g><title>libFosl_dynamic.dylib`0x00007fff6aceff0c (1 samples, 0.02%)</title><rect x="88.0829%" y="341" width="0.0157%" height="15" fill="rgb(253,43,49)"/><text x="88.3329%" y="351.50"></text></g><g><title>libFosl_dynamic.dylib`0x00007fff6ad2c183 (1 samples, 0.02%)</title><rect x="88.0829%" y="325" width="0.0157%" height="15" fill="rgb(219,54,36)"/><text x="88.3329%" y="335.50"></text></g><g><title>libncurses.5.4.dylib`_nc_setupterm (1 samples, 0.02%)</title><rect x="88.0829%" y="309" width="0.0157%" height="15" fill="rgb(227,133,34)"/><text x="88.3329%" y="319.50"></text></g><g><title>libncurses.5.4.dylib`_nc_read_entry (1 samples, 0.02%)</title><rect x="88.0829%" y="293" width="0.0157%" height="15" fill="rgb(247,227,15)"/><text x="88.3329%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="88.0829%" y="277" width="0.0157%" height="15" fill="rgb(229,96,14)"/><text x="88.3329%" y="287.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithRenderer (12 samples, 0.19%)</title><rect x="87.9259%" y="597" width="0.1884%" height="15" fill="rgb(220,79,17)"/><text x="88.1759%" y="607.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithOptions (12 samples, 0.19%)</title><rect x="87.9259%" y="581" width="0.1884%" height="15" fill="rgb(205,131,53)"/><text x="88.1759%" y="591.50"></text></g><g><title>CoreUI`CUIDraw (12 samples, 0.19%)</title><rect x="87.9259%" y="565" width="0.1884%" height="15" fill="rgb(209,50,29)"/><text x="88.1759%" y="575.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (12 samples, 0.19%)</title><rect x="87.9259%" y="549" width="0.1884%" height="15" fill="rgb(245,86,46)"/><text x="88.1759%" y="559.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawMenuTitle (12 samples, 0.19%)</title><rect x="87.9259%" y="533" width="0.1884%" height="15" fill="rgb(235,66,46)"/><text x="88.1759%" y="543.50"></text></g><g><title>CoreUI`CUIRenderer::DrawImage (12 samples, 0.19%)</title><rect x="87.9259%" y="517" width="0.1884%" height="15" fill="rgb(232,148,31)"/><text x="88.1759%" y="527.50"></text></g><g><title>CoreUI`CUIRenderer::CreateImage (11 samples, 0.17%)</title><rect x="87.9416%" y="501" width="0.1727%" height="15" fill="rgb(217,149,8)"/><text x="88.1916%" y="511.50"></text></g><g><title>CoreUI`CUIRenderer::CreateImageByApplyingEffectsToImage (10 samples, 0.16%)</title><rect x="87.9573%" y="485" width="0.1570%" height="15" fill="rgb(209,183,11)"/><text x="88.2073%" y="495.50"></text></g><g><title>CoreUI`-[CUIShapeEffectStack standardEffectCompositeWithShapeImage:blendOntoImage:] (2 samples, 0.03%)</title><rect x="88.0829%" y="469" width="0.0314%" height="15" fill="rgb(208,55,20)"/><text x="88.3329%" y="479.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueCoding) valueForKey:] (2 samples, 0.03%)</title><rect x="88.0829%" y="453" width="0.0314%" height="15" fill="rgb(218,39,14)"/><text x="88.3329%" y="463.50"></text></g><g><title>CoreImage`-[CIBlendWithMask outputImage] (2 samples, 0.03%)</title><rect x="88.0829%" y="437" width="0.0314%" height="15" fill="rgb(216,169,33)"/><text x="88.3329%" y="447.50"></text></g><g><title>CoreImage`-[CIBlendWithAlphaMask _kernelB0] (2 samples, 0.03%)</title><rect x="88.0829%" y="421" width="0.0314%" height="15" fill="rgb(233,80,24)"/><text x="88.3329%" y="431.50"></text></g><g><title>CoreImage`+[CIColorKernel kernelWithString:] (2 samples, 0.03%)</title><rect x="88.0829%" y="405" width="0.0314%" height="15" fill="rgb(213,179,31)"/><text x="88.3329%" y="415.50"></text></g><g><title>CoreImage`-[CIKernel _initWithString:andMetalLibrary:usingCruftCompatibility:] (2 samples, 0.03%)</title><rect x="88.0829%" y="389" width="0.0314%" height="15" fill="rgb(209,19,5)"/><text x="88.3329%" y="399.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="88.0986%" y="373" width="0.0157%" height="15" fill="rgb(219,18,35)"/><text x="88.3486%" y="383.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.02%)</title><rect x="88.0986%" y="357" width="0.0157%" height="15" fill="rgb(209,169,16)"/><text x="88.3486%" y="367.50"></text></g><g><title>HIToolbox`HIView::Render (17 samples, 0.27%)</title><rect x="87.8631%" y="805" width="0.2669%" height="15" fill="rgb(245,90,51)"/><text x="88.1131%" y="815.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (17 samples, 0.27%)</title><rect x="87.8631%" y="789" width="0.2669%" height="15" fill="rgb(220,99,45)"/><text x="88.1131%" y="799.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (17 samples, 0.27%)</title><rect x="87.8631%" y="773" width="0.2669%" height="15" fill="rgb(249,89,25)"/><text x="88.1131%" y="783.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (17 samples, 0.27%)</title><rect x="87.8631%" y="757" width="0.2669%" height="15" fill="rgb(239,193,0)"/><text x="88.1131%" y="767.50"></text></g><g><title>HIToolbox`HIView::SendDraw (17 samples, 0.27%)</title><rect x="87.8631%" y="741" width="0.2669%" height="15" fill="rgb(231,126,1)"/><text x="88.1131%" y="751.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (17 samples, 0.27%)</title><rect x="87.8631%" y="725" width="0.2669%" height="15" fill="rgb(243,166,3)"/><text x="88.1131%" y="735.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (17 samples, 0.27%)</title><rect x="87.8631%" y="709" width="0.2669%" height="15" fill="rgb(223,22,34)"/><text x="88.1131%" y="719.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (17 samples, 0.27%)</title><rect x="87.8631%" y="693" width="0.2669%" height="15" fill="rgb(251,52,51)"/><text x="88.1131%" y="703.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (17 samples, 0.27%)</title><rect x="87.8631%" y="677" width="0.2669%" height="15" fill="rgb(221,165,28)"/><text x="88.1131%" y="687.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawWithoutCustomization (17 samples, 0.27%)</title><rect x="87.8631%" y="661" width="0.2669%" height="15" fill="rgb(218,121,47)"/><text x="88.1131%" y="671.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (17 samples, 0.27%)</title><rect x="87.8631%" y="645" width="0.2669%" height="15" fill="rgb(209,120,9)"/><text x="88.1131%" y="655.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (15 samples, 0.24%)</title><rect x="87.8945%" y="629" width="0.2355%" height="15" fill="rgb(236,68,12)"/><text x="88.1445%" y="639.50"></text></g><g><title>HIToolbox`_HIThemeDrawAppleMenuTitle (13 samples, 0.20%)</title><rect x="87.9259%" y="613" width="0.2041%" height="15" fill="rgb(225,194,26)"/><text x="88.1759%" y="623.50"></text></g><g><title>HIToolbox`_HIThemeGetVibrantRenderer (1 samples, 0.02%)</title><rect x="88.1143%" y="597" width="0.0157%" height="15" fill="rgb(231,84,39)"/><text x="88.3643%" y="607.50"></text></g><g><title>HIToolbox`TTheme::GetCurrent (1 samples, 0.02%)</title><rect x="88.1143%" y="581" width="0.0157%" height="15" fill="rgb(210,11,45)"/><text x="88.3643%" y="591.50"></text></g><g><title>HIToolbox`TTheme::Open (1 samples, 0.02%)</title><rect x="88.1143%" y="565" width="0.0157%" height="15" fill="rgb(224,54,52)"/><text x="88.3643%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="88.1143%" y="549" width="0.0157%" height="15" fill="rgb(238,102,14)"/><text x="88.3643%" y="559.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (18 samples, 0.28%)</title><rect x="87.8631%" y="997" width="0.2826%" height="15" fill="rgb(243,160,52)"/><text x="88.1131%" y="1007.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (18 samples, 0.28%)</title><rect x="87.8631%" y="981" width="0.2826%" height="15" fill="rgb(216,114,19)"/><text x="88.1131%" y="991.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (18 samples, 0.28%)</title><rect x="87.8631%" y="965" width="0.2826%" height="15" fill="rgb(244,166,37)"/><text x="88.1131%" y="975.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (18 samples, 0.28%)</title><rect x="87.8631%" y="949" width="0.2826%" height="15" fill="rgb(246,29,44)"/><text x="88.1131%" y="959.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (18 samples, 0.28%)</title><rect x="87.8631%" y="933" width="0.2826%" height="15" fill="rgb(215,56,53)"/><text x="88.1131%" y="943.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (18 samples, 0.28%)</title><rect x="87.8631%" y="917" width="0.2826%" height="15" fill="rgb(217,60,2)"/><text x="88.1131%" y="927.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (18 samples, 0.28%)</title><rect x="87.8631%" y="901" width="0.2826%" height="15" fill="rgb(207,26,24)"/><text x="88.1131%" y="911.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (18 samples, 0.28%)</title><rect x="87.8631%" y="885" width="0.2826%" height="15" fill="rgb(252,210,15)"/><text x="88.1131%" y="895.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (18 samples, 0.28%)</title><rect x="87.8631%" y="869" width="0.2826%" height="15" fill="rgb(253,209,26)"/><text x="88.1131%" y="879.50"></text></g><g><title>HIToolbox`ShowHide (18 samples, 0.28%)</title><rect x="87.8631%" y="853" width="0.2826%" height="15" fill="rgb(238,170,14)"/><text x="88.1131%" y="863.50"></text></g><g><title>HIToolbox`_ShowHideWindows (18 samples, 0.28%)</title><rect x="87.8631%" y="837" width="0.2826%" height="15" fill="rgb(216,178,15)"/><text x="88.1131%" y="847.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (18 samples, 0.28%)</title><rect x="87.8631%" y="821" width="0.2826%" height="15" fill="rgb(250,197,2)"/><text x="88.1131%" y="831.50"></text></g><g><title>HIToolbox`WindowData::GetCGContext (1 samples, 0.02%)</title><rect x="88.1300%" y="805" width="0.0157%" height="15" fill="rgb(212,70,42)"/><text x="88.3800%" y="815.50"></text></g><g><title>SkyLight`SLWindowContextCreate (1 samples, 0.02%)</title><rect x="88.1300%" y="789" width="0.0157%" height="15" fill="rgb(227,213,9)"/><text x="88.3800%" y="799.50"></text></g><g><title>CoreGraphics`__CGWindowContextDelegateCreate (1 samples, 0.02%)</title><rect x="88.1300%" y="773" width="0.0157%" height="15" fill="rgb(245,99,25)"/><text x="88.3800%" y="783.50"></text></g><g><title>CoreGraphics`RIPDeviceCreate (1 samples, 0.02%)</title><rect x="88.1300%" y="757" width="0.0157%" height="15" fill="rgb(250,82,29)"/><text x="88.3800%" y="767.50"></text></g><g><title>SkyLight`SLSDeviceGetGeometry (1 samples, 0.02%)</title><rect x="88.1300%" y="741" width="0.0157%" height="15" fill="rgb(241,226,54)"/><text x="88.3800%" y="751.50"></text></g><g><title>SkyLight`update_device_geometry_size (1 samples, 0.02%)</title><rect x="88.1300%" y="725" width="0.0157%" height="15" fill="rgb(221,99,41)"/><text x="88.3800%" y="735.50"></text></g><g><title>SkyLight`CGSWindowGetSize (1 samples, 0.02%)</title><rect x="88.1300%" y="709" width="0.0157%" height="15" fill="rgb(213,90,21)"/><text x="88.3800%" y="719.50"></text></g><g><title>SkyLight`CGSWindowGetShapeBounds (1 samples, 0.02%)</title><rect x="88.1300%" y="693" width="0.0157%" height="15" fill="rgb(205,208,24)"/><text x="88.3800%" y="703.50"></text></g><g><title>SkyLight`_CGSGetWindowShapeBounds (1 samples, 0.02%)</title><rect x="88.1300%" y="677" width="0.0157%" height="15" fill="rgb(246,31,12)"/><text x="88.3800%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="88.1300%" y="661" width="0.0157%" height="15" fill="rgb(213,154,6)"/><text x="88.3800%" y="671.50"></text></g><g><title>HIToolbox`IsEventTraceEnabled (1 samples, 0.02%)</title><rect x="88.1457%" y="997" width="0.0157%" height="15" fill="rgb(222,163,29)"/><text x="88.3957%" y="1007.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (2 samples, 0.03%)</title><rect x="88.1614%" y="965" width="0.0314%" height="15" fill="rgb(227,201,8)"/><text x="88.4114%" y="975.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (1 samples, 0.02%)</title><rect x="88.1771%" y="949" width="0.0157%" height="15" fill="rgb(233,9,32)"/><text x="88.4271%" y="959.50"></text></g><g><title>QuartzCore`CA::Transaction::observer_callback (1 samples, 0.02%)</title><rect x="88.1771%" y="933" width="0.0157%" height="15" fill="rgb(217,54,24)"/><text x="88.4271%" y="943.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (1 samples, 0.02%)</title><rect x="88.1771%" y="917" width="0.0157%" height="15" fill="rgb(235,192,0)"/><text x="88.4271%" y="927.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (1 samples, 0.02%)</title><rect x="88.1771%" y="901" width="0.0157%" height="15" fill="rgb(235,45,9)"/><text x="88.4271%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 0.02%)</title><rect x="88.1771%" y="885" width="0.0157%" height="15" fill="rgb(246,42,40)"/><text x="88.4271%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 0.02%)</title><rect x="88.1771%" y="869" width="0.0157%" height="15" fill="rgb(248,111,24)"/><text x="88.4271%" y="879.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (1 samples, 0.02%)</title><rect x="88.1928%" y="965" width="0.0157%" height="15" fill="rgb(249,65,22)"/><text x="88.4428%" y="975.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (1 samples, 0.02%)</title><rect x="88.1928%" y="949" width="0.0157%" height="15" fill="rgb(238,111,51)"/><text x="88.4428%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderArray initWithCapacity:] (1 samples, 0.02%)</title><rect x="88.2242%" y="949" width="0.0157%" height="15" fill="rgb(250,118,22)"/><text x="88.4742%" y="959.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (1 samples, 0.02%)</title><rect x="88.2399%" y="949" width="0.0157%" height="15" fill="rgb(234,84,26)"/><text x="88.4899%" y="959.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (1 samples, 0.02%)</title><rect x="88.2556%" y="949" width="0.0157%" height="15" fill="rgb(243,172,12)"/><text x="88.5056%" y="959.50"></text></g><g><title>CoreFoundation`CFRetain (1 samples, 0.02%)</title><rect x="88.2713%" y="949" width="0.0157%" height="15" fill="rgb(236,150,49)"/><text x="88.5213%" y="959.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (1 samples, 0.02%)</title><rect x="88.2870%" y="949" width="0.0157%" height="15" fill="rgb(225,197,26)"/><text x="88.5370%" y="959.50"></text></g><g><title>CoreFoundation`CFSetGetCount (1 samples, 0.02%)</title><rect x="88.3027%" y="949" width="0.0157%" height="15" fill="rgb(214,17,42)"/><text x="88.5527%" y="959.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$voucher_mach_msg_revert (1 samples, 0.02%)</title><rect x="88.3184%" y="949" width="0.0157%" height="15" fill="rgb(224,165,40)"/><text x="88.5684%" y="959.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (1 samples, 0.02%)</title><rect x="88.3341%" y="949" width="0.0157%" height="15" fill="rgb(246,100,4)"/><text x="88.5841%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (1 samples, 0.02%)</title><rect x="88.3341%" y="933" width="0.0157%" height="15" fill="rgb(222,103,0)"/><text x="88.5841%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="88.3341%" y="917" width="0.0157%" height="15" fill="rgb(227,189,26)"/><text x="88.5841%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (1 samples, 0.02%)</title><rect x="88.3341%" y="901" width="0.0157%" height="15" fill="rgb(214,202,17)"/><text x="88.5841%" y="911.50"></text></g><g><title>ViewBridge`__26+[NSRemoteView initialize]_block_invoke (1 samples, 0.02%)</title><rect x="88.3341%" y="885" width="0.0157%" height="15" fill="rgb(229,111,3)"/><text x="88.5841%" y="895.50"></text></g><g><title>ViewBridge`withAutoreleasePoolAndExceptionProcessing (1 samples, 0.02%)</title><rect x="88.3341%" y="869" width="0.0157%" height="15" fill="rgb(229,172,15)"/><text x="88.5841%" y="879.50"></text></g><g><title>ViewBridge`__26+[NSRemoteView initialize]_block_invoke_2 (1 samples, 0.02%)</title><rect x="88.3341%" y="853" width="0.0157%" height="15" fill="rgb(230,224,35)"/><text x="88.5841%" y="863.50"></text></g><g><title>ViewBridge`_ensureAuxServiceAwareOfHostApp (1 samples, 0.02%)</title><rect x="88.3341%" y="837" width="0.0157%" height="15" fill="rgb(251,141,6)"/><text x="88.5841%" y="847.50"></text></g><g><title>ViewBridge`-[NSCFRunLoopSemaphore wait] (1 samples, 0.02%)</title><rect x="88.3341%" y="821" width="0.0157%" height="15" fill="rgb(225,208,6)"/><text x="88.5841%" y="831.50"></text></g><g><title>ViewBridge`-[NSCFRunLoopSemaphore wait:] (1 samples, 0.02%)</title><rect x="88.3341%" y="805" width="0.0157%" height="15" fill="rgb(246,181,16)"/><text x="88.5841%" y="815.50"></text></g><g><title>ViewBridge`+[NSCFRunLoopSemaphore _observe:whilePerforming:] (1 samples, 0.02%)</title><rect x="88.3341%" y="789" width="0.0157%" height="15" fill="rgb(227,129,36)"/><text x="88.5841%" y="799.50"></text></g><g><title>ViewBridge`__29-[NSCFRunLoopSemaphore wait:]_block_invoke (1 samples, 0.02%)</title><rect x="88.3341%" y="773" width="0.0157%" height="15" fill="rgb(248,117,24)"/><text x="88.5841%" y="783.50"></text></g><g><title>ViewBridge`__29-[NSCFRunLoopSemaphore wait:]_block_invoke_2 (1 samples, 0.02%)</title><rect x="88.3341%" y="757" width="0.0157%" height="15" fill="rgb(214,185,35)"/><text x="88.5841%" y="767.50"></text></g><g><title>ViewBridge`__CONSIDER_WHO_REQUESTED_THIS_WAIT_BEFORE_SENDING_BUG_TO_VIEWBRIDGE__ (1 samples, 0.02%)</title><rect x="88.3341%" y="741" width="0.0157%" height="15" fill="rgb(236,150,34)"/><text x="88.5841%" y="751.50"></text></g><g><title>ViewBridge`__29-[NSCFRunLoopSemaphore wait:]_block_invoke_3 (1 samples, 0.02%)</title><rect x="88.3341%" y="725" width="0.0157%" height="15" fill="rgb(243,228,27)"/><text x="88.5841%" y="735.50"></text></g><g><title>ViewBridge`invokeRunLoopInModeForDuration (1 samples, 0.02%)</title><rect x="88.3341%" y="709" width="0.0157%" height="15" fill="rgb(245,77,44)"/><text x="88.5841%" y="719.50"></text></g><g><title>ViewBridge`__invokeRunLoopInModeForDuration_block_invoke_2 (1 samples, 0.02%)</title><rect x="88.3341%" y="693" width="0.0157%" height="15" fill="rgb(235,214,42)"/><text x="88.5841%" y="703.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (1 samples, 0.02%)</title><rect x="88.3341%" y="677" width="0.0157%" height="15" fill="rgb(221,74,3)"/><text x="88.5841%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (1 samples, 0.02%)</title><rect x="88.3341%" y="661" width="0.0157%" height="15" fill="rgb(206,121,29)"/><text x="88.5841%" y="671.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (1 samples, 0.02%)</title><rect x="88.3341%" y="645" width="0.0157%" height="15" fill="rgb(249,131,53)"/><text x="88.5841%" y="655.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (1 samples, 0.02%)</title><rect x="88.3341%" y="629" width="0.0157%" height="15" fill="rgb(236,170,29)"/><text x="88.5841%" y="639.50"></text></g><g><title>ViewBridge`__deferBlockOntoMainThread_block_invoke_2 (1 samples, 0.02%)</title><rect x="88.3341%" y="613" width="0.0157%" height="15" fill="rgb(247,96,15)"/><text x="88.5841%" y="623.50"></text></g><g><title>ViewBridge`__wrapBlockWithVoucher_block_invoke (1 samples, 0.02%)</title><rect x="88.3341%" y="597" width="0.0157%" height="15" fill="rgb(211,210,7)"/><text x="88.5841%" y="607.50"></text></g><g><title>ViewBridge`__auxiliaryProxyFor_block_invoke_3 (1 samples, 0.02%)</title><rect x="88.3341%" y="581" width="0.0157%" height="15" fill="rgb(240,88,50)"/><text x="88.5841%" y="591.50"></text></g><g><title>ViewBridge`synchronizedAuxiliaryProxyFor (1 samples, 0.02%)</title><rect x="88.3341%" y="565" width="0.0157%" height="15" fill="rgb(209,229,26)"/><text x="88.5841%" y="575.50"></text></g><g><title>ViewBridge`___ensureAuxServiceAwareOfHostApp_block_invoke (1 samples, 0.02%)</title><rect x="88.3341%" y="549" width="0.0157%" height="15" fill="rgb(210,68,23)"/><text x="88.5841%" y="559.50"></text></g><g><title>Foundation`_NSXPCDistantObjectSimpleMessageSend3 (1 samples, 0.02%)</title><rect x="88.3341%" y="533" width="0.0157%" height="15" fill="rgb(229,180,13)"/><text x="88.5841%" y="543.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendSelector:withProxy:arg1:arg2:arg3:] (1 samples, 0.02%)</title><rect x="88.3341%" y="517" width="0.0157%" height="15" fill="rgb(236,53,44)"/><text x="88.5841%" y="527.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.02%)</title><rect x="88.3341%" y="501" width="0.0157%" height="15" fill="rgb(244,214,29)"/><text x="88.5841%" y="511.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply (1 samples, 0.02%)</title><rect x="88.3341%" y="485" width="0.0157%" height="15" fill="rgb(220,75,29)"/><text x="88.5841%" y="495.50"></text></g><g><title>libxpc.dylib`_xpc_connection_enqueue (1 samples, 0.02%)</title><rect x="88.3341%" y="469" width="0.0157%" height="15" fill="rgb(214,183,37)"/><text x="88.5841%" y="479.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_async_reply_4libxpc (1 samples, 0.02%)</title><rect x="88.3341%" y="453" width="0.0157%" height="15" fill="rgb(239,117,29)"/><text x="88.5841%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 0.02%)</title><rect x="88.3341%" y="437" width="0.0157%" height="15" fill="rgb(237,171,35)"/><text x="88.5841%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 0.02%)</title><rect x="88.3341%" y="421" width="0.0157%" height="15" fill="rgb(229,178,53)"/><text x="88.5841%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 0.02%)</title><rect x="88.3341%" y="405" width="0.0157%" height="15" fill="rgb(210,102,19)"/><text x="88.5841%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_reply_kevent_register (1 samples, 0.02%)</title><rect x="88.3341%" y="389" width="0.0157%" height="15" fill="rgb(235,127,22)"/><text x="88.5841%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_compute_priority_and_wlh (1 samples, 0.02%)</title><rect x="88.3341%" y="373" width="0.0157%" height="15" fill="rgb(244,31,31)"/><text x="88.5841%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="88.3498%" y="933" width="0.0157%" height="15" fill="rgb(231,43,21)"/><text x="88.5998%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="88.3498%" y="917" width="0.0157%" height="15" fill="rgb(217,131,35)"/><text x="88.5998%" y="927.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (2 samples, 0.03%)</title><rect x="88.3498%" y="949" width="0.0314%" height="15" fill="rgb(221,149,4)"/><text x="88.5998%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="88.3655%" y="933" width="0.0157%" height="15" fill="rgb(232,170,28)"/><text x="88.6155%" y="943.50"></text></g><g><title>CoreFoundation`_CFRetain (1 samples, 0.02%)</title><rect x="88.4283%" y="933" width="0.0157%" height="15" fill="rgb(238,56,10)"/><text x="88.6783%" y="943.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (1 samples, 0.02%)</title><rect x="88.4440%" y="853" width="0.0157%" height="15" fill="rgb(235,196,14)"/><text x="88.6940%" y="863.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (1 samples, 0.02%)</title><rect x="88.4440%" y="837" width="0.0157%" height="15" fill="rgb(216,45,48)"/><text x="88.6940%" y="847.50"></text></g><g><title>HIToolbox`SectSelectableInputSourcesArrayFromCurrentState (1 samples, 0.02%)</title><rect x="88.4440%" y="821" width="0.0157%" height="15" fill="rgb(238,213,17)"/><text x="88.6940%" y="831.50"></text></g><g><title>HIToolbox`_CreateKeyboardInputSourcesArray (1 samples, 0.02%)</title><rect x="88.4440%" y="805" width="0.0157%" height="15" fill="rgb(212,13,2)"/><text x="88.6940%" y="815.50"></text></g><g><title>HIToolbox`_CreateKeyboardInputSourcesArray_Mutable (1 samples, 0.02%)</title><rect x="88.4440%" y="789" width="0.0157%" height="15" fill="rgb(240,114,20)"/><text x="88.6940%" y="799.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (1 samples, 0.02%)</title><rect x="88.4440%" y="773" width="0.0157%" height="15" fill="rgb(228,41,40)"/><text x="88.6940%" y="783.50"></text></g><g><title>HIToolbox`islGetInputSourceProperty (1 samples, 0.02%)</title><rect x="88.4440%" y="757" width="0.0157%" height="15" fill="rgb(244,132,35)"/><text x="88.6940%" y="767.50"></text></g><g><title>HIToolbox`islPopulateInputSourceProperty (1 samples, 0.02%)</title><rect x="88.4440%" y="741" width="0.0157%" height="15" fill="rgb(253,189,4)"/><text x="88.6940%" y="751.50"></text></g><g><title>HIToolbox`islPopulateKLPropertiesFromBundle (1 samples, 0.02%)</title><rect x="88.4440%" y="725" width="0.0157%" height="15" fill="rgb(224,37,19)"/><text x="88.6940%" y="735.50"></text></g><g><title>CoreFoundation`CFBundleGetValueForInfoDictionaryKey (1 samples, 0.02%)</title><rect x="88.4440%" y="709" width="0.0157%" height="15" fill="rgb(235,223,18)"/><text x="88.6940%" y="719.50"></text></g><g><title>CoreFoundation`CFBundleGetLocalInfoDictionary (1 samples, 0.02%)</title><rect x="88.4440%" y="693" width="0.0157%" height="15" fill="rgb(235,163,25)"/><text x="88.6940%" y="703.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateFromXMLData (1 samples, 0.02%)</title><rect x="88.4440%" y="677" width="0.0157%" height="15" fill="rgb(217,145,28)"/><text x="88.6940%" y="687.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (1 samples, 0.02%)</title><rect x="88.4440%" y="661" width="0.0157%" height="15" fill="rgb(223,223,32)"/><text x="88.6940%" y="671.50"></text></g><g><title>CoreFoundation`__CFTryParseBinaryPlist (1 samples, 0.02%)</title><rect x="88.4440%" y="645" width="0.0157%" height="15" fill="rgb(227,189,39)"/><text x="88.6940%" y="655.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.02%)</title><rect x="88.4440%" y="629" width="0.0157%" height="15" fill="rgb(248,10,22)"/><text x="88.6940%" y="639.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (1 samples, 0.02%)</title><rect x="88.4440%" y="613" width="0.0157%" height="15" fill="rgb(248,46,39)"/><text x="88.6940%" y="623.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.02%)</title><rect x="88.4440%" y="597" width="0.0157%" height="15" fill="rgb(248,113,48)"/><text x="88.6940%" y="607.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (2 samples, 0.03%)</title><rect x="88.4440%" y="869" width="0.0314%" height="15" fill="rgb(245,16,25)"/><text x="88.6940%" y="879.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="88.4597%" y="853" width="0.0157%" height="15" fill="rgb(249,152,16)"/><text x="88.7097%" y="863.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="88.4597%" y="837" width="0.0157%" height="15" fill="rgb(250,16,1)"/><text x="88.7097%" y="847.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.02%)</title><rect x="88.4597%" y="821" width="0.0157%" height="15" fill="rgb(249,138,3)"/><text x="88.7097%" y="831.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.02%)</title><rect x="88.4597%" y="805" width="0.0157%" height="15" fill="rgb(227,71,41)"/><text x="88.7097%" y="815.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (1 samples, 0.02%)</title><rect x="88.4597%" y="789" width="0.0157%" height="15" fill="rgb(209,184,23)"/><text x="88.7097%" y="799.50"></text></g><g><title>AppKit`+[NSKeyBindingManager sharedKeyBindingManager] (1 samples, 0.02%)</title><rect x="88.4597%" y="773" width="0.0157%" height="15" fill="rgb(223,215,31)"/><text x="88.7097%" y="783.50"></text></g><g><title>Foundation`+[NSDictionary(NSDictionary) dictionaryWithContentsOfFile:] (1 samples, 0.02%)</title><rect x="88.4597%" y="757" width="0.0157%" height="15" fill="rgb(210,146,28)"/><text x="88.7097%" y="767.50"></text></g><g><title>Foundation`+[NSDictionary(NSDictionary) newWithContentsOf:immutable:] (1 samples, 0.02%)</title><rect x="88.4597%" y="741" width="0.0157%" height="15" fill="rgb(209,183,41)"/><text x="88.7097%" y="751.50"></text></g><g><title>Foundation`+[NSPropertyListSerialization propertyListWithData:options:format:error:] (1 samples, 0.02%)</title><rect x="88.4597%" y="725" width="0.0157%" height="15" fill="rgb(209,224,45)"/><text x="88.7097%" y="735.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateWithData (1 samples, 0.02%)</title><rect x="88.4597%" y="709" width="0.0157%" height="15" fill="rgb(224,209,51)"/><text x="88.7097%" y="719.50"></text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (1 samples, 0.02%)</title><rect x="88.4597%" y="693" width="0.0157%" height="15" fill="rgb(223,17,39)"/><text x="88.7097%" y="703.50"></text></g><g><title>CoreFoundation`__CFTryParseBinaryPlist (1 samples, 0.02%)</title><rect x="88.4597%" y="677" width="0.0157%" height="15" fill="rgb(234,204,37)"/><text x="88.7097%" y="687.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.02%)</title><rect x="88.4597%" y="661" width="0.0157%" height="15" fill="rgb(236,120,5)"/><text x="88.7097%" y="671.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistCreateObjectFiltered (1 samples, 0.02%)</title><rect x="88.4597%" y="645" width="0.0157%" height="15" fill="rgb(248,97,27)"/><text x="88.7097%" y="655.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderArray initWithCapacity:] (1 samples, 0.02%)</title><rect x="88.4754%" y="869" width="0.0157%" height="15" fill="rgb(240,66,17)"/><text x="88.7254%" y="879.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (5 samples, 0.08%)</title><rect x="88.4440%" y="885" width="0.0785%" height="15" fill="rgb(210,79,3)"/><text x="88.6940%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="88.4911%" y="869" width="0.0314%" height="15" fill="rgb(214,176,27)"/><text x="88.7411%" y="879.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke.llvm.16397370698269480189 (6 samples, 0.09%)</title><rect x="88.4440%" y="917" width="0.0942%" height="15" fill="rgb(235,185,3)"/><text x="88.6940%" y="927.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke.1562 (6 samples, 0.09%)</title><rect x="88.4440%" y="901" width="0.0942%" height="15" fill="rgb(227,24,12)"/><text x="88.6940%" y="911.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (1 samples, 0.02%)</title><rect x="88.5225%" y="885" width="0.0157%" height="15" fill="rgb(252,169,48)"/><text x="88.7725%" y="895.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (1 samples, 0.02%)</title><rect x="88.5225%" y="869" width="0.0157%" height="15" fill="rgb(212,65,1)"/><text x="88.7725%" y="879.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationRegistrar find:object:observer:enumerator:] (1 samples, 0.02%)</title><rect x="88.5225%" y="853" width="0.0157%" height="15" fill="rgb(242,39,24)"/><text x="88.7725%" y="863.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="88.5225%" y="837" width="0.0157%" height="15" fill="rgb(249,32,23)"/><text x="88.7725%" y="847.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (1 samples, 0.02%)</title><rect x="88.5382%" y="805" width="0.0157%" height="15" fill="rgb(251,195,23)"/><text x="88.7882%" y="815.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (1 samples, 0.02%)</title><rect x="88.5382%" y="789" width="0.0157%" height="15" fill="rgb(236,174,8)"/><text x="88.7882%" y="799.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::commit_transaction (1 samples, 0.02%)</title><rect x="88.5382%" y="773" width="0.0157%" height="15" fill="rgb(220,197,8)"/><text x="88.7882%" y="783.50"></text></g><g><title>QuartzCore`-[CAGradientLayer _copyRenderLayer:layerFlags:commitFlags:] (1 samples, 0.02%)</title><rect x="88.5382%" y="757" width="0.0157%" height="15" fill="rgb(240,108,37)"/><text x="88.7882%" y="767.50"></text></g><g><title>QuartzCore`CA::Render::copy_image (1 samples, 0.02%)</title><rect x="88.5382%" y="741" width="0.0157%" height="15" fill="rgb(232,176,24)"/><text x="88.7882%" y="751.50"></text></g><g><title>QuartzCore`CA::Render::(anonymous namespace)::create_image_by_rendering (1 samples, 0.02%)</title><rect x="88.5382%" y="725" width="0.0157%" height="15" fill="rgb(243,35,29)"/><text x="88.7882%" y="735.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (1 samples, 0.02%)</title><rect x="88.5382%" y="709" width="0.0157%" height="15" fill="rgb(210,37,18)"/><text x="88.7882%" y="719.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (1 samples, 0.02%)</title><rect x="88.5382%" y="693" width="0.0157%" height="15" fill="rgb(224,184,40)"/><text x="88.7882%" y="703.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (1 samples, 0.02%)</title><rect x="88.5382%" y="677" width="0.0157%" height="15" fill="rgb(236,39,29)"/><text x="88.7882%" y="687.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (1 samples, 0.02%)</title><rect x="88.5382%" y="661" width="0.0157%" height="15" fill="rgb(232,48,39)"/><text x="88.7882%" y="671.50"></text></g><g><title>CoreGraphics`img_image (1 samples, 0.02%)</title><rect x="88.5382%" y="645" width="0.0157%" height="15" fill="rgb(236,34,42)"/><text x="88.7882%" y="655.50"></text></g><g><title>CoreGraphics`CGDataProviderCreateForDestinationWithImage (1 samples, 0.02%)</title><rect x="88.5382%" y="629" width="0.0157%" height="15" fill="rgb(243,106,37)"/><text x="88.7882%" y="639.50"></text></g><g><title>CoreGraphics`CGDataProviderCreateForDestination (1 samples, 0.02%)</title><rect x="88.5382%" y="613" width="0.0157%" height="15" fill="rgb(218,96,6)"/><text x="88.7882%" y="623.50"></text></g><g><title>CoreGraphics`CGCMSConverterConvertGetConverterInfo (1 samples, 0.02%)</title><rect x="88.5382%" y="597" width="0.0157%" height="15" fill="rgb(235,130,12)"/><text x="88.7882%" y="607.50"></text></g><g><title>CoreGraphics`icc_converter_info (1 samples, 0.02%)</title><rect x="88.5382%" y="581" width="0.0157%" height="15" fill="rgb(231,95,0)"/><text x="88.7882%" y="591.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreateCachedCGvImageConverter (1 samples, 0.02%)</title><rect x="88.5382%" y="565" width="0.0157%" height="15" fill="rgb(228,12,23)"/><text x="88.7882%" y="575.50"></text></g><g><title>CoreGraphics`CGvImageConverterCacheGetRetained (1 samples, 0.02%)</title><rect x="88.5382%" y="549" width="0.0157%" height="15" fill="rgb(216,12,1)"/><text x="88.7882%" y="559.50"></text></g><g><title>CoreGraphics`CGvImageConverterInitializeShared (1 samples, 0.02%)</title><rect x="88.5382%" y="533" width="0.0157%" height="15" fill="rgb(219,59,3)"/><text x="88.7882%" y="543.50"></text></g><g><title>vImage`vImageConverter_CreateWithColorSyncCodeFragment (1 samples, 0.02%)</title><rect x="88.5382%" y="517" width="0.0157%" height="15" fill="rgb(215,208,46)"/><text x="88.7882%" y="527.50"></text></g><g><title>vImage`vImageConverter_CreateCGPassList (1 samples, 0.02%)</title><rect x="88.5382%" y="501" width="0.0157%" height="15" fill="rgb(254,224,29)"/><text x="88.7882%" y="511.50"></text></g><g><title>vImage`CacheTable_Init (1 samples, 0.02%)</title><rect x="88.5382%" y="485" width="0.0157%" height="15" fill="rgb(232,14,29)"/><text x="88.7882%" y="495.50"></text></g><g><title>vImage`PiecewiseGamma_ComputeTable16Q12 (1 samples, 0.02%)</title><rect x="88.5382%" y="469" width="0.0157%" height="15" fill="rgb(208,45,52)"/><text x="88.7882%" y="479.50"></text></g><g><title>vImage`_vImagePiecewiseGamma_PlanarF (1 samples, 0.02%)</title><rect x="88.5382%" y="453" width="0.0157%" height="15" fill="rgb(234,191,28)"/><text x="88.7882%" y="463.50"></text></g><g><title>vImage`vPiecewiseGamma_PlanarF_avx2 (1 samples, 0.02%)</title><rect x="88.5382%" y="437" width="0.0157%" height="15" fill="rgb(244,67,43)"/><text x="88.7882%" y="447.50"></text></g><g><title>vImage`symmetricPiecewiseGamma_pixelBlock (1 samples, 0.02%)</title><rect x="88.5382%" y="421" width="0.0157%" height="15" fill="rgb(236,189,24)"/><text x="88.7882%" y="431.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (2 samples, 0.03%)</title><rect x="88.5382%" y="853" width="0.0314%" height="15" fill="rgb(239,214,33)"/><text x="88.7882%" y="863.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (2 samples, 0.03%)</title><rect x="88.5382%" y="837" width="0.0314%" height="15" fill="rgb(226,176,41)"/><text x="88.7882%" y="847.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (2 samples, 0.03%)</title><rect x="88.5382%" y="821" width="0.0314%" height="15" fill="rgb(248,47,8)"/><text x="88.7882%" y="831.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::commit_transaction (1 samples, 0.02%)</title><rect x="88.5539%" y="805" width="0.0157%" height="15" fill="rgb(218,81,44)"/><text x="88.8039%" y="815.50"></text></g><g><title>QuartzCore`CA::Render::encode_set_object (1 samples, 0.02%)</title><rect x="88.5539%" y="789" width="0.0157%" height="15" fill="rgb(213,98,6)"/><text x="88.8039%" y="799.50"></text></g><g><title>QuartzCore`CA::Render::Layer::encode (1 samples, 0.02%)</title><rect x="88.5539%" y="773" width="0.0157%" height="15" fill="rgb(222,85,22)"/><text x="88.8039%" y="783.50"></text></g><g><title>QuartzCore`CA::Render::Array::type (1 samples, 0.02%)</title><rect x="88.5539%" y="757" width="0.0157%" height="15" fill="rgb(239,46,39)"/><text x="88.8039%" y="767.50"></text></g><g><title>AppKit`-[NSTextField boundsOutsetsForTextLayer:] (1 samples, 0.02%)</title><rect x="88.5696%" y="757" width="0.0157%" height="15" fill="rgb(237,12,29)"/><text x="88.8196%" y="767.50"></text></g><g><title>AppKit`+[NSTextField _shouldUseBoundsOutsetsForString:] (1 samples, 0.02%)</title><rect x="88.5696%" y="741" width="0.0157%" height="15" fill="rgb(214,77,8)"/><text x="88.8196%" y="751.50"></text></g><g><title>AppKit`+[NSTextField _tooBigChars] (1 samples, 0.02%)</title><rect x="88.5696%" y="725" width="0.0157%" height="15" fill="rgb(217,168,37)"/><text x="88.8196%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="88.5696%" y="709" width="0.0157%" height="15" fill="rgb(221,217,23)"/><text x="88.8196%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="88.5696%" y="693" width="0.0157%" height="15" fill="rgb(243,229,36)"/><text x="88.8196%" y="703.50"></text></g><g><title>AppKit`__27+[NSTextField _tooBigChars]_block_invoke (1 samples, 0.02%)</title><rect x="88.5696%" y="677" width="0.0157%" height="15" fill="rgb(251,163,40)"/><text x="88.8196%" y="687.50"></text></g><g><title>CoreText`CTFontCopySystemUIFontExcessiveLineHeightCharacterSet (1 samples, 0.02%)</title><rect x="88.5696%" y="661" width="0.0157%" height="15" fill="rgb(237,222,12)"/><text x="88.8196%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="88.5696%" y="645" width="0.0157%" height="15" fill="rgb(248,132,6)"/><text x="88.8196%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="88.5696%" y="629" width="0.0157%" height="15" fill="rgb(227,167,50)"/><text x="88.8196%" y="639.50"></text></g><g><title>CoreText`CTFontCopySystemUIFontExcessiveLineHeightCharacterSet::$_3::__invoke (1 samples, 0.02%)</title><rect x="88.5696%" y="613" width="0.0157%" height="15" fill="rgb(242,84,37)"/><text x="88.8196%" y="623.50"></text></g><g><title>CoreText`TDescriptorSource::CopyPredefinedCharacterSet (1 samples, 0.02%)</title><rect x="88.5696%" y="597" width="0.0157%" height="15" fill="rgb(212,4,50)"/><text x="88.8196%" y="607.50"></text></g><g><title>CoreText`CTCreateDataFromMappedBundleResource(__CFString const*) (1 samples, 0.02%)</title><rect x="88.5696%" y="581" width="0.0157%" height="15" fill="rgb(230,228,32)"/><text x="88.8196%" y="591.50"></text></g><g><title>CoreText`CTCreateBundleResourceURL(__CFString const*, __CFString const*, __CFString const*) (1 samples, 0.02%)</title><rect x="88.5696%" y="565" width="0.0157%" height="15" fill="rgb(248,217,23)"/><text x="88.8196%" y="575.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.02%)</title><rect x="88.5696%" y="549" width="0.0157%" height="15" fill="rgb(238,197,32)"/><text x="88.8196%" y="559.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.02%)</title><rect x="88.5696%" y="533" width="0.0157%" height="15" fill="rgb(236,106,1)"/><text x="88.8196%" y="543.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.02%)</title><rect x="88.5696%" y="517" width="0.0157%" height="15" fill="rgb(219,228,13)"/><text x="88.8196%" y="527.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.02%)</title><rect x="88.5696%" y="501" width="0.0157%" height="15" fill="rgb(238,30,35)"/><text x="88.8196%" y="511.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.02%)</title><rect x="88.5696%" y="485" width="0.0157%" height="15" fill="rgb(236,70,23)"/><text x="88.8196%" y="495.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.02%)</title><rect x="88.5696%" y="469" width="0.0157%" height="15" fill="rgb(249,104,48)"/><text x="88.8196%" y="479.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.02%)</title><rect x="88.5696%" y="453" width="0.0157%" height="15" fill="rgb(254,117,50)"/><text x="88.8196%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.02%)</title><rect x="88.5696%" y="437" width="0.0157%" height="15" fill="rgb(223,152,4)"/><text x="88.8196%" y="447.50"></text></g><g><title>AppKit`-[NSAppearanceContentStyle stylizedAttributedStringForAttributedString:] (1 samples, 0.02%)</title><rect x="88.5853%" y="613" width="0.0157%" height="15" fill="rgb(245,6,2)"/><text x="88.8353%" y="623.50"></text></g><g><title>Foundation`-[NSAttributedString enumerateAttribute:inRange:options:usingBlock:] (1 samples, 0.02%)</title><rect x="88.5853%" y="597" width="0.0157%" height="15" fill="rgb(249,150,24)"/><text x="88.8353%" y="607.50"></text></g><g><title>AppKit`__72-[NSAppearanceContentStyle stylizedAttributedStringForAttributedString:]_block_invoke (1 samples, 0.02%)</title><rect x="88.5853%" y="581" width="0.0157%" height="15" fill="rgb(228,185,42)"/><text x="88.8353%" y="591.50"></text></g><g><title>AppKit`-[NSAppearanceContentStyle _equivalentForegroundColorForColor:textStyleName:contentFlavor:] (1 samples, 0.02%)</title><rect x="88.5853%" y="565" width="0.0157%" height="15" fill="rgb(226,39,33)"/><text x="88.8353%" y="575.50"></text></g><g><title>AppKit`-[NSAppearanceContentStyle _styleEffectConfigurationForRenderingIntent:] (1 samples, 0.02%)</title><rect x="88.5853%" y="549" width="0.0157%" height="15" fill="rgb(221,166,19)"/><text x="88.8353%" y="559.50"></text></g><g><title>AppKit`-[_NSWidgetContentStyle _configureStyleEffectConfiguration:forRenderingIntent:] (1 samples, 0.02%)</title><rect x="88.5853%" y="533" width="0.0157%" height="15" fill="rgb(209,109,2)"/><text x="88.8353%" y="543.50"></text></g><g><title>AppKit`-[NSAppearanceContentStyle _configureStyleEffectConfiguration:forRenderingIntent:] (1 samples, 0.02%)</title><rect x="88.5853%" y="517" width="0.0157%" height="15" fill="rgb(252,216,26)"/><text x="88.8353%" y="527.50"></text></g><g><title>AppKit`-[NSAppearanceContentStyle _resolvedAppearanceForEffectConfiguration:textStyleName:] (1 samples, 0.02%)</title><rect x="88.5853%" y="501" width="0.0157%" height="15" fill="rgb(227,173,36)"/><text x="88.8353%" y="511.50"></text></g><g><title>AppKit`-[NSCompositeAppearance resolvedAppearanceForStyleName:styleConfiguration:] (1 samples, 0.02%)</title><rect x="88.5853%" y="485" width="0.0157%" height="15" fill="rgb(209,90,7)"/><text x="88.8353%" y="495.50"></text></g><g><title>AppKit`-[NSAppearance resolvedAppearanceForStyleName:styleConfiguration:] (1 samples, 0.02%)</title><rect x="88.5853%" y="469" width="0.0157%" height="15" fill="rgb(250,194,11)"/><text x="88.8353%" y="479.50"></text></g><g><title>AppKit`-[NSAppearance _coreUICatalog] (1 samples, 0.02%)</title><rect x="88.5853%" y="453" width="0.0157%" height="15" fill="rgb(220,72,50)"/><text x="88.8353%" y="463.50"></text></g><g><title>CoreUI`-[CUICatalog initWithName:fromBundle:error:] (1 samples, 0.02%)</title><rect x="88.5853%" y="437" width="0.0157%" height="15" fill="rgb(222,106,48)"/><text x="88.8353%" y="447.50"></text></g><g><title>CoreUI`-[CUICatalog _setPreferredLocalization:] (1 samples, 0.02%)</title><rect x="88.5853%" y="421" width="0.0157%" height="15" fill="rgb(216,220,45)"/><text x="88.8353%" y="431.50"></text></g><g><title>CoreFoundation`-[__NSArray0 autorelease] (1 samples, 0.02%)</title><rect x="88.5853%" y="405" width="0.0157%" height="15" fill="rgb(234,112,18)"/><text x="88.8353%" y="415.50"></text></g><g><title>AppKit`__NSGetStringAndAttributesFromTextCell (1 samples, 0.02%)</title><rect x="88.6010%" y="613" width="0.0157%" height="15" fill="rgb(206,179,9)"/><text x="88.8510%" y="623.50"></text></g><g><title>UIFoundation`NSDefaultFont (1 samples, 0.02%)</title><rect x="88.6010%" y="597" width="0.0157%" height="15" fill="rgb(215,115,40)"/><text x="88.8510%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="88.6010%" y="581" width="0.0157%" height="15" fill="rgb(222,69,34)"/><text x="88.8510%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="88.6010%" y="565" width="0.0157%" height="15" fill="rgb(209,161,10)"/><text x="88.8510%" y="575.50"></text></g><g><title>UIFoundation`__NSDefaultFont_block_invoke (1 samples, 0.02%)</title><rect x="88.6010%" y="549" width="0.0157%" height="15" fill="rgb(217,6,38)"/><text x="88.8510%" y="559.50"></text></g><g><title>UIFoundation`+[NSFont fontWithName:size:] (1 samples, 0.02%)</title><rect x="88.6010%" y="533" width="0.0157%" height="15" fill="rgb(229,229,48)"/><text x="88.8510%" y="543.50"></text></g><g><title>UIFoundation`-[__NSFontTypefaceInfo fontInstanceForKey:renderingMode:] (1 samples, 0.02%)</title><rect x="88.6010%" y="517" width="0.0157%" height="15" fill="rgb(225,21,28)"/><text x="88.8510%" y="527.50"></text></g><g><title>UIFoundation`-[NSFont initWithTypefaceInfo:key:renderingMode:] (1 samples, 0.02%)</title><rect x="88.6010%" y="501" width="0.0157%" height="15" fill="rgb(206,33,13)"/><text x="88.8510%" y="511.50"></text></g><g><title>UIFoundation`__UIFontGetExtraData (1 samples, 0.02%)</title><rect x="88.6010%" y="485" width="0.0157%" height="15" fill="rgb(242,178,17)"/><text x="88.8510%" y="495.50"></text></g><g><title>UIFoundation`-[__NSFontExtraData initWithFont:] (1 samples, 0.02%)</title><rect x="88.6010%" y="469" width="0.0157%" height="15" fill="rgb(220,162,5)"/><text x="88.8510%" y="479.50"></text></g><g><title>CoreText`CTFontGetAscent (1 samples, 0.02%)</title><rect x="88.6010%" y="453" width="0.0157%" height="15" fill="rgb(210,33,43)"/><text x="88.8510%" y="463.50"></text></g><g><title>CoreText`TFont::InitStrikeMetrics (1 samples, 0.02%)</title><rect x="88.6010%" y="437" width="0.0157%" height="15" fill="rgb(216,116,54)"/><text x="88.8510%" y="447.50"></text></g><g><title>CoreText`TBaseFont::GetStrikeMetrics (1 samples, 0.02%)</title><rect x="88.6010%" y="421" width="0.0157%" height="15" fill="rgb(249,92,24)"/><text x="88.8510%" y="431.50"></text></g><g><title>CoreText`TBaseFont::InitFontMetrics (1 samples, 0.02%)</title><rect x="88.6010%" y="405" width="0.0157%" height="15" fill="rgb(231,189,14)"/><text x="88.8510%" y="415.50"></text></g><g><title>CoreText`TBaseFont::CalculateFontMetrics (1 samples, 0.02%)</title><rect x="88.6010%" y="389" width="0.0157%" height="15" fill="rgb(230,8,41)"/><text x="88.8510%" y="399.50"></text></g><g><title>CoreText`TBaseFont::CopyGraphicsFont (1 samples, 0.02%)</title><rect x="88.6010%" y="373" width="0.0157%" height="15" fill="rgb(249,7,27)"/><text x="88.8510%" y="383.50"></text></g><g><title>CoreText`TBaseFont::CopyNativeFont (1 samples, 0.02%)</title><rect x="88.6010%" y="357" width="0.0157%" height="15" fill="rgb(232,86,5)"/><text x="88.8510%" y="367.50"></text></g><g><title>CoreText`TCGFontCache::CopyFont (1 samples, 0.02%)</title><rect x="88.6010%" y="341" width="0.0157%" height="15" fill="rgb(224,175,18)"/><text x="88.8510%" y="351.50"></text></g><g><title>CoreText`CreateFontWithFontURL(__CFURL const*, bool) (1 samples, 0.02%)</title><rect x="88.6010%" y="325" width="0.0157%" height="15" fill="rgb(220,129,12)"/><text x="88.8510%" y="335.50"></text></g><g><title>CoreText`CreateFontsWithURL(__CFURL const*, bool) (1 samples, 0.02%)</title><rect x="88.6010%" y="309" width="0.0157%" height="15" fill="rgb(210,19,36)"/><text x="88.8510%" y="319.50"></text></g><g><title>libsystem_sandbox.dylib`sandbox_check (1 samples, 0.02%)</title><rect x="88.6010%" y="293" width="0.0157%" height="15" fill="rgb(219,96,14)"/><text x="88.8510%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__mac_syscall (1 samples, 0.02%)</title><rect x="88.6010%" y="277" width="0.0157%" height="15" fill="rgb(249,106,1)"/><text x="88.8510%" y="287.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertColorComponents (1 samples, 0.02%)</title><rect x="88.6167%" y="485" width="0.0157%" height="15" fill="rgb(249,155,20)"/><text x="88.8667%" y="495.50"></text></g><g><title>CoreGraphics`CGColorTransformCacheGetConversionType (1 samples, 0.02%)</title><rect x="88.6167%" y="469" width="0.0157%" height="15" fill="rgb(244,168,9)"/><text x="88.8667%" y="479.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreate (1 samples, 0.02%)</title><rect x="88.6167%" y="453" width="0.0157%" height="15" fill="rgb(216,23,50)"/><text x="88.8667%" y="463.50"></text></g><g><title>CoreGraphics`CGColorSyncTransformCacheGetRetained (1 samples, 0.02%)</title><rect x="88.6167%" y="437" width="0.0157%" height="15" fill="rgb(224,219,20)"/><text x="88.8667%" y="447.50"></text></g><g><title>ColorSync`ColorSyncTransformCreate (1 samples, 0.02%)</title><rect x="88.6167%" y="421" width="0.0157%" height="15" fill="rgb(222,156,15)"/><text x="88.8667%" y="431.50"></text></g><g><title>ColorSync`AppleCMMInitializeTransform (1 samples, 0.02%)</title><rect x="88.6167%" y="405" width="0.0157%" height="15" fill="rgb(231,97,17)"/><text x="88.8667%" y="415.50"></text></g><g><title>ColorSync`DoInitializeTransform (1 samples, 0.02%)</title><rect x="88.6167%" y="389" width="0.0157%" height="15" fill="rgb(218,70,48)"/><text x="88.8667%" y="399.50"></text></g><g><title>ColorSync`ConversionManager::MakeConversionSequence (1 samples, 0.02%)</title><rect x="88.6167%" y="373" width="0.0157%" height="15" fill="rgb(212,196,52)"/><text x="88.8667%" y="383.50"></text></g><g><title>ColorSync`ConversionManager::AddInvMatrixConv(CMMXYZTag*  (1 samples, 0.02%)</title><rect x="88.6167%" y="357" width="0.0157%" height="15" fill="rgb(243,203,18)"/><text x="88.8667%" y="367.50"></text></g><g><title>ColorSync`CMMRGBCurves::MakeInvertedTRC (1 samples, 0.02%)</title><rect x="88.6167%" y="341" width="0.0157%" height="15" fill="rgb(252,125,41)"/><text x="88.8667%" y="351.50"></text></g><g><title>ColorSync`CMMParaCurveTag::MakeInvertedTRC (1 samples, 0.02%)</title><rect x="88.6167%" y="325" width="0.0157%" height="15" fill="rgb(223,180,33)"/><text x="88.8667%" y="335.50"></text></g><g><title>ColorSync`InvertLUT(int*, int*) (1 samples, 0.02%)</title><rect x="88.6167%" y="309" width="0.0157%" height="15" fill="rgb(254,159,46)"/><text x="88.8667%" y="319.50"></text></g><g><title>AppKit`-[NSTextLayer display] (5 samples, 0.08%)</title><rect x="88.5696%" y="837" width="0.0785%" height="15" fill="rgb(254,38,10)"/><text x="88.8196%" y="847.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (5 samples, 0.08%)</title><rect x="88.5696%" y="821" width="0.0785%" height="15" fill="rgb(208,217,32)"/><text x="88.8196%" y="831.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke (5 samples, 0.08%)</title><rect x="88.5696%" y="805" width="0.0785%" height="15" fill="rgb(221,120,13)"/><text x="88.8196%" y="815.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (5 samples, 0.08%)</title><rect x="88.5696%" y="789" width="0.0785%" height="15" fill="rgb(246,54,52)"/><text x="88.8196%" y="799.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke_2 (5 samples, 0.08%)</title><rect x="88.5696%" y="773" width="0.0785%" height="15" fill="rgb(242,34,25)"/><text x="88.8196%" y="783.50"></text></g><g><title>QuartzCore`-[CALayer _display] (4 samples, 0.06%)</title><rect x="88.5853%" y="757" width="0.0628%" height="15" fill="rgb(247,209,9)"/><text x="88.8353%" y="767.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Layer::display_ (4 samples, 0.06%)</title><rect x="88.5853%" y="741" width="0.0628%" height="15" fill="rgb(228,71,26)"/><text x="88.8353%" y="751.50"></text></g><g><title>QuartzCore`CABackingStoreUpdate_ (4 samples, 0.06%)</title><rect x="88.5853%" y="725" width="0.0628%" height="15" fill="rgb(222,145,49)"/><text x="88.8353%" y="735.50"></text></g><g><title>AppKit`NSTextLayerDrawForeground (4 samples, 0.06%)</title><rect x="88.5853%" y="709" width="0.0628%" height="15" fill="rgb(218,121,17)"/><text x="88.8353%" y="719.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.06%)</title><rect x="88.5853%" y="693" width="0.0628%" height="15" fill="rgb(244,50,7)"/><text x="88.8353%" y="703.50"></text></g><g><title>AppKit`__NSTextLayerDrawForeground_block_invoke (4 samples, 0.06%)</title><rect x="88.5853%" y="677" width="0.0628%" height="15" fill="rgb(246,229,37)"/><text x="88.8353%" y="687.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.06%)</title><rect x="88.5853%" y="661" width="0.0628%" height="15" fill="rgb(225,18,5)"/><text x="88.8353%" y="671.50"></text></g><g><title>AppKit`-[NSTextFieldCell _drawForegroundOfTextLayer] (4 samples, 0.06%)</title><rect x="88.5853%" y="645" width="0.0628%" height="15" fill="rgb(213,204,8)"/><text x="88.8353%" y="655.50"></text></g><g><title>AppKit`_NSDrawTextCell (4 samples, 0.06%)</title><rect x="88.5853%" y="629" width="0.0628%" height="15" fill="rgb(238,103,6)"/><text x="88.8353%" y="639.50"></text></g><g><title>UIFoundation`_NSStringDrawingCore (2 samples, 0.03%)</title><rect x="88.6167%" y="613" width="0.0314%" height="15" fill="rgb(222,25,35)"/><text x="88.8667%" y="623.50"></text></g><g><title>UIFoundation`__NSStringDrawingEngine (2 samples, 0.03%)</title><rect x="88.6167%" y="597" width="0.0314%" height="15" fill="rgb(213,203,35)"/><text x="88.8667%" y="607.50"></text></g><g><title>UIFoundation`-[NSCoreTypesetter _stringDrawingCoreTextEngineWithOriginalString:rect:padding:graphicsContext:forceClipping:attributes:stringDrawingOptions:drawingContext:wantsTextLineFragments:validatedAttributedString:firstNonRenderedCharacterIndex:foundSoftHyphenAtEOL:enginePathUsed:] (2 samples, 0.03%)</title><rect x="88.6167%" y="581" width="0.0314%" height="15" fill="rgb(221,79,53)"/><text x="88.8667%" y="591.50"></text></g><g><title>UIFoundation`-[NSCoreTypesetter _NSFastDrawString:length:attributes:paragraphStyle:typesetterBehavior:lineBreakMode:rect:padding:graphicsContext:baselineRendering:usesFontLeading:usesScreenFont:scrollable:syncAlignment:mirrored:boundingRectPointer:baselineOffsetPointer:wantsTextLineFragments:drawingContext:] (2 samples, 0.03%)</title><rect x="88.6167%" y="565" width="0.0314%" height="15" fill="rgb(243,200,35)"/><text x="88.8667%" y="575.50"></text></g><g><title>CoreText`CTFontDrawGlyphsWithAdvancesInternal (2 samples, 0.03%)</title><rect x="88.6167%" y="549" width="0.0314%" height="15" fill="rgb(248,60,25)"/><text x="88.8667%" y="559.50"></text></g><g><title>CoreGraphics`CGContextShowGlyphsWithAdvances (2 samples, 0.03%)</title><rect x="88.6167%" y="533" width="0.0314%" height="15" fill="rgb(227,53,46)"/><text x="88.8667%" y="543.50"></text></g><g><title>CoreGraphics`draw_glyphs (2 samples, 0.03%)</title><rect x="88.6167%" y="517" width="0.0314%" height="15" fill="rgb(216,120,32)"/><text x="88.8667%" y="527.50"></text></g><g><title>CoreGraphics`CGContextDelegateDrawGlyphs (2 samples, 0.03%)</title><rect x="88.6167%" y="501" width="0.0314%" height="15" fill="rgb(220,134,1)"/><text x="88.8667%" y="511.50"></text></g><g><title>CoreGraphics`ripc_DrawGlyphs (1 samples, 0.02%)</title><rect x="88.6324%" y="485" width="0.0157%" height="15" fill="rgb(237,168,5)"/><text x="88.8824%" y="495.50"></text></g><g><title>CoreGraphics`draw_glyph_bitmaps (1 samples, 0.02%)</title><rect x="88.6324%" y="469" width="0.0157%" height="15" fill="rgb(231,100,33)"/><text x="88.8824%" y="479.50"></text></g><g><title>CoreGraphics`render_glyphs (1 samples, 0.02%)</title><rect x="88.6324%" y="453" width="0.0157%" height="15" fill="rgb(236,177,47)"/><text x="88.8824%" y="463.50"></text></g><g><title>CoreGraphics`CGGlyphBuilder::lock_glyph_bitmaps (1 samples, 0.02%)</title><rect x="88.6324%" y="437" width="0.0157%" height="15" fill="rgb(235,7,49)"/><text x="88.8824%" y="447.50"></text></g><g><title>CoreGraphics`CGGlyphBuilder::create_missing_bitmaps (1 samples, 0.02%)</title><rect x="88.6324%" y="421" width="0.0157%" height="15" fill="rgb(232,119,22)"/><text x="88.8824%" y="431.50"></text></g><g><title>CoreGraphics`CGFontCreateGlyphBitmapWithDilation (1 samples, 0.02%)</title><rect x="88.6324%" y="405" width="0.0157%" height="15" fill="rgb(254,73,53)"/><text x="88.8824%" y="415.50"></text></g><g><title>CoreGraphics`CGGlyphBitmapCreateWithPathAndDilation_8 (1 samples, 0.02%)</title><rect x="88.6324%" y="389" width="0.0157%" height="15" fill="rgb(251,35,20)"/><text x="88.8824%" y="399.50"></text></g><g><title>CoreGraphics`CG::Path::apply_iterator (1 samples, 0.02%)</title><rect x="88.6324%" y="373" width="0.0157%" height="15" fill="rgb(241,119,20)"/><text x="88.8824%" y="383.50"></text></g><g><title>CoreGraphics`path_orientation_end (1 samples, 0.02%)</title><rect x="88.6324%" y="357" width="0.0157%" height="15" fill="rgb(207,102,14)"/><text x="88.8824%" y="367.50"></text></g><g><title>CoreGraphics`path_iterator_iterate (1 samples, 0.02%)</title><rect x="88.6324%" y="341" width="0.0157%" height="15" fill="rgb(248,201,50)"/><text x="88.8824%" y="351.50"></text></g><g><title>CoreGraphics`addLine (1 samples, 0.02%)</title><rect x="88.6324%" y="325" width="0.0157%" height="15" fill="rgb(222,185,44)"/><text x="88.8824%" y="335.50"></text></g><g><title>CoreGraphics`path_iterator_add_line_to_point (1 samples, 0.02%)</title><rect x="88.6324%" y="309" width="0.0157%" height="15" fill="rgb(218,107,18)"/><text x="88.8824%" y="319.50"></text></g><g><title>CoreGraphics`aa_lineto (1 samples, 0.02%)</title><rect x="88.6324%" y="293" width="0.0157%" height="15" fill="rgb(237,177,39)"/><text x="88.8824%" y="303.50"></text></g><g><title>CoreGraphics`aa_add_edges (1 samples, 0.02%)</title><rect x="88.6324%" y="277" width="0.0157%" height="15" fill="rgb(246,69,6)"/><text x="88.8824%" y="287.50"></text></g><g><title>AppKit`-[NSView(NSInternal) _sendViewWillDraw] (1 samples, 0.02%)</title><rect x="88.6481%" y="837" width="0.0157%" height="15" fill="rgb(234,208,37)"/><text x="88.8981%" y="847.50"></text></g><g><title>CoreUI`-[_CUIInternalLinkRendition imageForSliceIndex:] (1 samples, 0.02%)</title><rect x="88.6638%" y="581" width="0.0157%" height="15" fill="rgb(225,4,6)"/><text x="88.9138%" y="591.50"></text></g><g><title>CoreUI`-[_CUIInternalLinkRendition _fillOutImageSlices] (1 samples, 0.02%)</title><rect x="88.6638%" y="565" width="0.0157%" height="15" fill="rgb(233,45,0)"/><text x="88.9138%" y="575.50"></text></g><g><title>CoreUI`-[_CUIInternalLinkRendition unslicedImage] (1 samples, 0.02%)</title><rect x="88.6638%" y="549" width="0.0157%" height="15" fill="rgb(226,136,5)"/><text x="88.9138%" y="559.50"></text></g><g><title>CoreUI`-[_CUIInternalLinkRendition _sourceImage] (1 samples, 0.02%)</title><rect x="88.6638%" y="533" width="0.0157%" height="15" fill="rgb(211,91,47)"/><text x="88.9138%" y="543.50"></text></g><g><title>CoreUI`-[CUIStructuredThemeStore renditionWithKey:usingKeySignature:] (1 samples, 0.02%)</title><rect x="88.6638%" y="517" width="0.0157%" height="15" fill="rgb(242,88,51)"/><text x="88.9138%" y="527.50"></text></g><g><title>CoreUI`-[CUIThemeRendition initWithCSIData:forKey:artworkStatus:] (1 samples, 0.02%)</title><rect x="88.6638%" y="501" width="0.0157%" height="15" fill="rgb(230,91,28)"/><text x="88.9138%" y="511.50"></text></g><g><title>CoreUI`-[CUIThemeRendition _initWithCSIData:forKey:artworkStatus:] (1 samples, 0.02%)</title><rect x="88.6638%" y="485" width="0.0157%" height="15" fill="rgb(254,186,29)"/><text x="88.9138%" y="495.50"></text></g><g><title>CoreUI`-[_CUIThemePixelRendition _initWithCSIHeader:] (1 samples, 0.02%)</title><rect x="88.6638%" y="469" width="0.0157%" height="15" fill="rgb(238,6,4)"/><text x="88.9138%" y="479.50"></text></g><g><title>CoreUI`-[_CUIThemePixelRendition newImageFromCSIDataSlice:ofBitmap:usingColorspace:] (1 samples, 0.02%)</title><rect x="88.6638%" y="453" width="0.0157%" height="15" fill="rgb(221,151,16)"/><text x="88.9138%" y="463.50"></text></g><g><title>CoreFoundation`-[__NSSingleEntryDictionaryI objectForKey:] (1 samples, 0.02%)</title><rect x="88.6638%" y="437" width="0.0157%" height="15" fill="rgb(251,143,52)"/><text x="88.9138%" y="447.50"></text></g><g><title>CoreGraphics`CGAccessSessionCreate (1 samples, 0.02%)</title><rect x="88.6795%" y="453" width="0.0157%" height="15" fill="rgb(206,90,15)"/><text x="88.9295%" y="463.50"></text></g><g><title>CoreGraphics`CGDataProviderRetainData (1 samples, 0.02%)</title><rect x="88.6795%" y="437" width="0.0157%" height="15" fill="rgb(218,35,8)"/><text x="88.9295%" y="447.50"></text></g><g><title>CoreGraphics`provider_for_destination_retain_data (1 samples, 0.02%)</title><rect x="88.6795%" y="421" width="0.0157%" height="15" fill="rgb(239,215,6)"/><text x="88.9295%" y="431.50"></text></g><g><title>CoreGraphics`CGDataProviderRetainData (1 samples, 0.02%)</title><rect x="88.6795%" y="405" width="0.0157%" height="15" fill="rgb(245,116,39)"/><text x="88.9295%" y="415.50"></text></g><g><title>CoreGraphics`imageProvider_retain_data (1 samples, 0.02%)</title><rect x="88.6795%" y="389" width="0.0157%" height="15" fill="rgb(242,65,28)"/><text x="88.9295%" y="399.50"></text></g><g><title>CoreGraphics`subImageProviderCopyImageBlockSet (1 samples, 0.02%)</title><rect x="88.6795%" y="373" width="0.0157%" height="15" fill="rgb(252,132,53)"/><text x="88.9295%" y="383.50"></text></g><g><title>CoreUI`__csiCompressImageProviderCopyImageBlockSetWithOptions (1 samples, 0.02%)</title><rect x="88.6795%" y="357" width="0.0157%" height="15" fill="rgb(224,159,50)"/><text x="88.9295%" y="367.50"></text></g><g><title>CoreUI`-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:] (1 samples, 0.02%)</title><rect x="88.6795%" y="341" width="0.0157%" height="15" fill="rgb(224,93,4)"/><text x="88.9295%" y="351.50"></text></g><g><title>libdispatch.dylib`dispatch_apply_f (1 samples, 0.02%)</title><rect x="88.6795%" y="325" width="0.0157%" height="15" fill="rgb(208,81,34)"/><text x="88.9295%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke_and_wait (1 samples, 0.02%)</title><rect x="88.6795%" y="309" width="0.0157%" height="15" fill="rgb(233,92,54)"/><text x="88.9295%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (1 samples, 0.02%)</title><rect x="88.6795%" y="293" width="0.0157%" height="15" fill="rgb(237,21,14)"/><text x="88.9295%" y="303.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (1 samples, 0.02%)</title><rect x="88.6795%" y="277" width="0.0157%" height="15" fill="rgb(249,128,51)"/><text x="88.9295%" y="287.50"></text></g><g><title>CoreUI`BOMFileRead (1 samples, 0.02%)</title><rect x="88.6795%" y="261" width="0.0157%" height="15" fill="rgb(223,129,24)"/><text x="88.9295%" y="271.50"></text></g><g><title>libcompression.dylib`compression_stream_process (1 samples, 0.02%)</title><rect x="88.6795%" y="245" width="0.0157%" height="15" fill="rgb(231,168,25)"/><text x="88.9295%" y="255.50"></text></g><g><title>libcompression.dylib`lzfseStreamDecode (1 samples, 0.02%)</title><rect x="88.6795%" y="229" width="0.0157%" height="15" fill="rgb(224,39,20)"/><text x="88.9295%" y="239.50"></text></g><g><title>libcompression.dylib`lzfseDecode (1 samples, 0.02%)</title><rect x="88.6795%" y="213" width="0.0157%" height="15" fill="rgb(225,152,53)"/><text x="88.9295%" y="223.50"></text></g><g><title>AppKit`-[NSControl updateLayer] (3 samples, 0.05%)</title><rect x="88.6638%" y="805" width="0.0471%" height="15" fill="rgb(252,17,24)"/><text x="88.9138%" y="815.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (3 samples, 0.05%)</title><rect x="88.6638%" y="789" width="0.0471%" height="15" fill="rgb(250,114,30)"/><text x="88.9138%" y="799.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (3 samples, 0.05%)</title><rect x="88.6638%" y="773" width="0.0471%" height="15" fill="rgb(229,5,4)"/><text x="88.9138%" y="783.50"></text></g><g><title>AppKit`__50-[_NSThemeWidgetCell updateLayerWithFrame:inView:]_block_invoke (3 samples, 0.05%)</title><rect x="88.6638%" y="757" width="0.0471%" height="15" fill="rgb(225,176,49)"/><text x="88.9138%" y="767.50"></text></g><g><title>AppKit`-[NSAppearance _drawInRect:context:options:] (3 samples, 0.05%)</title><rect x="88.6638%" y="741" width="0.0471%" height="15" fill="rgb(224,221,49)"/><text x="88.9138%" y="751.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (3 samples, 0.05%)</title><rect x="88.6638%" y="725" width="0.0471%" height="15" fill="rgb(253,169,27)"/><text x="88.9138%" y="735.50"></text></g><g><title>AppKit`__44-[NSAppearance _drawInRect:context:options:]_block_invoke (3 samples, 0.05%)</title><rect x="88.6638%" y="709" width="0.0471%" height="15" fill="rgb(211,206,16)"/><text x="88.9138%" y="719.50"></text></g><g><title>CoreUI`CUIDraw (3 samples, 0.05%)</title><rect x="88.6638%" y="693" width="0.0471%" height="15" fill="rgb(244,87,35)"/><text x="88.9138%" y="703.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (3 samples, 0.05%)</title><rect x="88.6638%" y="677" width="0.0471%" height="15" fill="rgb(246,28,10)"/><text x="88.9138%" y="687.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawTitlebarButton (3 samples, 0.05%)</title><rect x="88.6638%" y="661" width="0.0471%" height="15" fill="rgb(229,12,44)"/><text x="88.9138%" y="671.50"></text></g><g><title>CoreUI`-[CUIThemeFacet drawInFrame:isFocused:context:effects:] (3 samples, 0.05%)</title><rect x="88.6638%" y="645" width="0.0471%" height="15" fill="rgb(210,145,37)"/><text x="88.9138%" y="655.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:inFrame:context:isFocused:isFlipped:effects:] (3 samples, 0.05%)</title><rect x="88.6638%" y="629" width="0.0471%" height="15" fill="rgb(227,112,52)"/><text x="88.9138%" y="639.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:rendition:inFrame:context:alpha:operation:isFocused:isFlipped:effects:] (3 samples, 0.05%)</title><rect x="88.6638%" y="613" width="0.0471%" height="15" fill="rgb(238,155,34)"/><text x="88.9138%" y="623.50"></text></g><g><title>CoreUI`DrawOnePartElementFromRenditionWithOperation (3 samples, 0.05%)</title><rect x="88.6638%" y="597" width="0.0471%" height="15" fill="rgb(239,226,36)"/><text x="88.9138%" y="607.50"></text></g><g><title>CoreUI`DrawOnePartImageWithOperation (2 samples, 0.03%)</title><rect x="88.6795%" y="581" width="0.0314%" height="15" fill="rgb(230,16,23)"/><text x="88.9295%" y="591.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (2 samples, 0.03%)</title><rect x="88.6795%" y="565" width="0.0314%" height="15" fill="rgb(236,171,36)"/><text x="88.9295%" y="575.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (2 samples, 0.03%)</title><rect x="88.6795%" y="549" width="0.0314%" height="15" fill="rgb(221,22,14)"/><text x="88.9295%" y="559.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (2 samples, 0.03%)</title><rect x="88.6795%" y="533" width="0.0314%" height="15" fill="rgb(242,43,11)"/><text x="88.9295%" y="543.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (2 samples, 0.03%)</title><rect x="88.6795%" y="517" width="0.0314%" height="15" fill="rgb(232,69,23)"/><text x="88.9295%" y="527.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (2 samples, 0.03%)</title><rect x="88.6795%" y="501" width="0.0314%" height="15" fill="rgb(216,180,54)"/><text x="88.9295%" y="511.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (2 samples, 0.03%)</title><rect x="88.6795%" y="485" width="0.0314%" height="15" fill="rgb(216,5,24)"/><text x="88.9295%" y="495.50"></text></g><g><title>CoreGraphics`img_data_lock (2 samples, 0.03%)</title><rect x="88.6795%" y="469" width="0.0314%" height="15" fill="rgb(225,89,9)"/><text x="88.9295%" y="479.50"></text></g><g><title>CoreGraphics`img_raw_read (1 samples, 0.02%)</title><rect x="88.6952%" y="453" width="0.0157%" height="15" fill="rgb(243,75,33)"/><text x="88.9452%" y="463.50"></text></g><g><title>CoreGraphics`get_chunks_direct (1 samples, 0.02%)</title><rect x="88.6952%" y="437" width="0.0157%" height="15" fill="rgb(247,141,45)"/><text x="88.9452%" y="447.50"></text></g><g><title>CoreGraphics`CGDataProviderDirectGetBytesAtPositionInternal (1 samples, 0.02%)</title><rect x="88.6952%" y="421" width="0.0157%" height="15" fill="rgb(232,177,36)"/><text x="88.9452%" y="431.50"></text></g><g><title>CoreGraphics`provider_for_destination_get_bytes_at_position_inner (1 samples, 0.02%)</title><rect x="88.6952%" y="405" width="0.0157%" height="15" fill="rgb(219,125,36)"/><text x="88.9452%" y="415.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertUsingCMSConverter (1 samples, 0.02%)</title><rect x="88.6952%" y="389" width="0.0157%" height="15" fill="rgb(227,94,9)"/><text x="88.9452%" y="399.50"></text></g><g><title>CoreGraphics`convert_using_vImageConverter (1 samples, 0.02%)</title><rect x="88.6952%" y="373" width="0.0157%" height="15" fill="rgb(240,34,52)"/><text x="88.9452%" y="383.50"></text></g><g><title>CoreGraphics`vImageConverterConvert (1 samples, 0.02%)</title><rect x="88.6952%" y="357" width="0.0157%" height="15" fill="rgb(216,45,12)"/><text x="88.9452%" y="367.50"></text></g><g><title>CoreGraphics`vImageConverter_convert_internal (1 samples, 0.02%)</title><rect x="88.6952%" y="341" width="0.0157%" height="15" fill="rgb(246,21,19)"/><text x="88.9452%" y="351.50"></text></g><g><title>vImage`vImageConvert_AnyToAny (1 samples, 0.02%)</title><rect x="88.6952%" y="325" width="0.0157%" height="15" fill="rgb(213,98,42)"/><text x="88.9452%" y="335.50"></text></g><g><title>libsystem_c.dylib`arc4random (1 samples, 0.02%)</title><rect x="88.6952%" y="309" width="0.0157%" height="15" fill="rgb(250,136,47)"/><text x="88.9452%" y="319.50"></text></g><g><title>libcorecrypto.dylib`ccrng_cryptographic_generate (1 samples, 0.02%)</title><rect x="88.6952%" y="293" width="0.0157%" height="15" fill="rgb(251,124,27)"/><text x="88.9452%" y="303.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 0.02%)</title><rect x="88.6952%" y="277" width="0.0157%" height="15" fill="rgb(229,180,14)"/><text x="88.9452%" y="287.50"></text></g><g><title>libcorecrypto.dylib`drbg_update (1 samples, 0.02%)</title><rect x="88.6952%" y="261" width="0.0157%" height="15" fill="rgb(245,216,25)"/><text x="88.9452%" y="271.50"></text></g><g><title>libcorecrypto.dylib`ccmode_ctr_init (1 samples, 0.02%)</title><rect x="88.6952%" y="245" width="0.0157%" height="15" fill="rgb(251,43,5)"/><text x="88.9452%" y="255.50"></text></g><g><title>libcorecrypto.dylib`vng_aes_encrypt_aesni_key (1 samples, 0.02%)</title><rect x="88.6952%" y="229" width="0.0157%" height="15" fill="rgb(250,128,24)"/><text x="88.9452%" y="239.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver _initForReadingFromData:error:throwLegacyExceptions:] (1 samples, 0.02%)</title><rect x="88.7109%" y="597" width="0.0157%" height="15" fill="rgb(217,117,27)"/><text x="88.9609%" y="607.50"></text></g><g><title>CoreFoundation`CFDictionaryCreateMutable (1 samples, 0.02%)</title><rect x="88.7109%" y="581" width="0.0157%" height="15" fill="rgb(245,147,4)"/><text x="88.9609%" y="591.50"></text></g><g><title>CoreFoundation`__CFDictionaryCreateGeneric (1 samples, 0.02%)</title><rect x="88.7109%" y="565" width="0.0157%" height="15" fill="rgb(242,201,35)"/><text x="88.9609%" y="575.50"></text></g><g><title>CoreFoundation`CFBasicHashCreate (1 samples, 0.02%)</title><rect x="88.7109%" y="549" width="0.0157%" height="15" fill="rgb(218,181,1)"/><text x="88.9609%" y="559.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.02%)</title><rect x="88.7109%" y="533" width="0.0157%" height="15" fill="rgb(222,6,29)"/><text x="88.9609%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="88.7109%" y="517" width="0.0157%" height="15" fill="rgb(208,186,3)"/><text x="88.9609%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (1 samples, 0.02%)</title><rect x="88.7109%" y="501" width="0.0157%" height="15" fill="rgb(216,36,26)"/><text x="88.9609%" y="511.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistGetOffsetForValueFromArray2 (1 samples, 0.02%)</title><rect x="88.7266%" y="389" width="0.0157%" height="15" fill="rgb(248,201,23)"/><text x="88.9766%" y="399.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (12 samples, 0.19%)</title><rect x="88.5696%" y="853" width="0.1884%" height="15" fill="rgb(251,170,31)"/><text x="88.8196%" y="863.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (6 samples, 0.09%)</title><rect x="88.6638%" y="837" width="0.0942%" height="15" fill="rgb(207,110,25)"/><text x="88.9138%" y="847.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (6 samples, 0.09%)</title><rect x="88.6638%" y="821" width="0.0942%" height="15" fill="rgb(250,54,15)"/><text x="88.9138%" y="831.50"></text></g><g><title>AppKit`-[NSVisualEffectView updateLayer] (3 samples, 0.05%)</title><rect x="88.7109%" y="805" width="0.0471%" height="15" fill="rgb(227,68,33)"/><text x="88.9609%" y="815.50"></text></g><g><title>AppKit`-[NSVisualEffectView _updateMaterialLayer] (3 samples, 0.05%)</title><rect x="88.7109%" y="789" width="0.0471%" height="15" fill="rgb(238,34,41)"/><text x="88.9609%" y="799.50"></text></g><g><title>AppKit`-[NSAppearance _createOrUpdateLayer:options:] (3 samples, 0.05%)</title><rect x="88.7109%" y="773" width="0.0471%" height="15" fill="rgb(220,11,15)"/><text x="88.9609%" y="783.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (3 samples, 0.05%)</title><rect x="88.7109%" y="757" width="0.0471%" height="15" fill="rgb(246,111,35)"/><text x="88.9609%" y="767.50"></text></g><g><title>CoreUI`CUICreateOrUpdateLayer (3 samples, 0.05%)</title><rect x="88.7109%" y="741" width="0.0471%" height="15" fill="rgb(209,88,53)"/><text x="88.9609%" y="751.50"></text></g><g><title>CoreUI`CUIRenderer::CreateOrUpdateLayer (3 samples, 0.05%)</title><rect x="88.7109%" y="725" width="0.0471%" height="15" fill="rgb(231,185,47)"/><text x="88.9609%" y="735.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CreateOrUpdateLayer (3 samples, 0.05%)</title><rect x="88.7109%" y="709" width="0.0471%" height="15" fill="rgb(233,154,1)"/><text x="88.9609%" y="719.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CreateOrUpdateVisualEffectLayer (3 samples, 0.05%)</title><rect x="88.7109%" y="693" width="0.0471%" height="15" fill="rgb(225,15,46)"/><text x="88.9609%" y="703.50"></text></g><g><title>CoreUI`-[CUIThemeFacet updateLayer:effects:] (3 samples, 0.05%)</title><rect x="88.7109%" y="677" width="0.0471%" height="15" fill="rgb(211,135,41)"/><text x="88.9609%" y="687.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _makeLayerFromCAPackageData] (3 samples, 0.05%)</title><rect x="88.7109%" y="661" width="0.0471%" height="15" fill="rgb(208,54,0)"/><text x="88.9609%" y="671.50"></text></g><g><title>QuartzCore`+[CAPackage packageWithData:type:options:error:] (3 samples, 0.05%)</title><rect x="88.7109%" y="645" width="0.0471%" height="15" fill="rgb(244,136,14)"/><text x="88.9609%" y="655.50"></text></g><g><title>QuartzCore`-[CAPackage _initWithData:type:options:error:] (3 samples, 0.05%)</title><rect x="88.7109%" y="629" width="0.0471%" height="15" fill="rgb(241,56,14)"/><text x="88.9609%" y="639.50"></text></g><g><title>QuartzCore`-[CAPackage _readFromArchiveData:options:error:] (3 samples, 0.05%)</title><rect x="88.7109%" y="613" width="0.0471%" height="15" fill="rgb(205,80,24)"/><text x="88.9609%" y="623.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (2 samples, 0.03%)</title><rect x="88.7266%" y="597" width="0.0314%" height="15" fill="rgb(220,57,4)"/><text x="88.9766%" y="607.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (2 samples, 0.03%)</title><rect x="88.7266%" y="581" width="0.0314%" height="15" fill="rgb(226,193,50)"/><text x="88.9766%" y="591.50"></text></g><g><title>Foundation`_decodeObject (2 samples, 0.03%)</title><rect x="88.7266%" y="565" width="0.0314%" height="15" fill="rgb(231,168,22)"/><text x="88.9766%" y="575.50"></text></g><g><title>Foundation`_decodeObjectBinary (2 samples, 0.03%)</title><rect x="88.7266%" y="549" width="0.0314%" height="15" fill="rgb(254,215,14)"/><text x="88.9766%" y="559.50"></text></g><g><title>Foundation`-[NSDictionary(NSDictionary) initWithCoder:] (2 samples, 0.03%)</title><rect x="88.7266%" y="533" width="0.0314%" height="15" fill="rgb(211,115,16)"/><text x="88.9766%" y="543.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver _decodeArrayOfObjectsForKey:] (2 samples, 0.03%)</title><rect x="88.7266%" y="517" width="0.0314%" height="15" fill="rgb(236,210,16)"/><text x="88.9766%" y="527.50"></text></g><g><title>Foundation`_decodeObjectBinary (2 samples, 0.03%)</title><rect x="88.7266%" y="501" width="0.0314%" height="15" fill="rgb(221,94,12)"/><text x="88.9766%" y="511.50"></text></g><g><title>QuartzCore`-[CALayer initWithCoder:] (2 samples, 0.03%)</title><rect x="88.7266%" y="485" width="0.0314%" height="15" fill="rgb(235,218,49)"/><text x="88.9766%" y="495.50"></text></g><g><title>QuartzCore`CAObject_initWithCoder (2 samples, 0.03%)</title><rect x="88.7266%" y="469" width="0.0314%" height="15" fill="rgb(217,114,14)"/><text x="88.9766%" y="479.50"></text></g><g><title>QuartzCore`-[NSCoder(CACoderAdditions) CA_decodeObjectForKey:] (2 samples, 0.03%)</title><rect x="88.7266%" y="453" width="0.0314%" height="15" fill="rgb(216,145,22)"/><text x="88.9766%" y="463.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (2 samples, 0.03%)</title><rect x="88.7266%" y="437" width="0.0314%" height="15" fill="rgb(217,112,39)"/><text x="88.9766%" y="447.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (2 samples, 0.03%)</title><rect x="88.7266%" y="421" width="0.0314%" height="15" fill="rgb(225,85,32)"/><text x="88.9766%" y="431.50"></text></g><g><title>Foundation`_decodeObject (2 samples, 0.03%)</title><rect x="88.7266%" y="405" width="0.0314%" height="15" fill="rgb(245,209,47)"/><text x="88.9766%" y="415.50"></text></g><g><title>Foundation`_decodeObjectBinary (1 samples, 0.02%)</title><rect x="88.7423%" y="389" width="0.0157%" height="15" fill="rgb(218,220,15)"/><text x="88.9923%" y="399.50"></text></g><g><title>QuartzCore`-[LKNSValueCodingProxy initWithCoder:] (1 samples, 0.02%)</title><rect x="88.7423%" y="373" width="0.0157%" height="15" fill="rgb(222,202,31)"/><text x="88.9923%" y="383.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeFloatForKey:] (1 samples, 0.02%)</title><rect x="88.7423%" y="357" width="0.0157%" height="15" fill="rgb(243,203,4)"/><text x="88.9923%" y="367.50"></text></g><g><title>Foundation`_decodeFloat (1 samples, 0.02%)</title><rect x="88.7423%" y="341" width="0.0157%" height="15" fill="rgb(237,92,17)"/><text x="88.9923%" y="351.50"></text></g><g><title>Foundation`_decodeDouble (1 samples, 0.02%)</title><rect x="88.7423%" y="325" width="0.0157%" height="15" fill="rgb(231,119,7)"/><text x="88.9923%" y="335.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistGetOffsetForValueFromDictionary3 (1 samples, 0.02%)</title><rect x="88.7423%" y="309" width="0.0157%" height="15" fill="rgb(237,82,41)"/><text x="88.9923%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.02%)</title><rect x="88.7423%" y="293" width="0.0157%" height="15" fill="rgb(226,81,48)"/><text x="88.9923%" y="303.50"></text></g><g><title>CoreGraphics`ERROR_CGBlt_copyBytes_BufferIsNotReadable (1 samples, 0.02%)</title><rect x="88.7580%" y="677" width="0.0157%" height="15" fill="rgb(234,70,51)"/><text x="89.0080%" y="687.50"></text></g><g><title>QuartzCore`CA::Layer::prepare_commit (2 samples, 0.03%)</title><rect x="88.7580%" y="853" width="0.0314%" height="15" fill="rgb(251,86,4)"/><text x="89.0080%" y="863.50"></text></g><g><title>QuartzCore`CA::Render::prepare_image (2 samples, 0.03%)</title><rect x="88.7580%" y="837" width="0.0314%" height="15" fill="rgb(244,144,28)"/><text x="89.0080%" y="847.50"></text></g><g><title>QuartzCore`CA::Render::copy_image (2 samples, 0.03%)</title><rect x="88.7580%" y="821" width="0.0314%" height="15" fill="rgb(232,161,39)"/><text x="89.0080%" y="831.50"></text></g><g><title>QuartzCore`CA::Render::(anonymous namespace)::create_image_by_rendering (2 samples, 0.03%)</title><rect x="88.7580%" y="805" width="0.0314%" height="15" fill="rgb(247,34,51)"/><text x="89.0080%" y="815.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (2 samples, 0.03%)</title><rect x="88.7580%" y="789" width="0.0314%" height="15" fill="rgb(225,132,2)"/><text x="89.0080%" y="799.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (2 samples, 0.03%)</title><rect x="88.7580%" y="773" width="0.0314%" height="15" fill="rgb(209,159,44)"/><text x="89.0080%" y="783.50"></text></g><g><title>CoreGraphics`ripc_RenderImage (2 samples, 0.03%)</title><rect x="88.7580%" y="757" width="0.0314%" height="15" fill="rgb(251,214,1)"/><text x="89.0080%" y="767.50"></text></g><g><title>CoreGraphics`RIPLayerBltImage (2 samples, 0.03%)</title><rect x="88.7580%" y="741" width="0.0314%" height="15" fill="rgb(247,84,47)"/><text x="89.0080%" y="751.50"></text></g><g><title>CoreGraphics`ripl_Mark (2 samples, 0.03%)</title><rect x="88.7580%" y="725" width="0.0314%" height="15" fill="rgb(240,111,43)"/><text x="89.0080%" y="735.50"></text></g><g><title>CoreGraphics`argb32_image (2 samples, 0.03%)</title><rect x="88.7580%" y="709" width="0.0314%" height="15" fill="rgb(215,214,35)"/><text x="89.0080%" y="719.50"></text></g><g><title>CoreGraphics`CGBlt_copyBytes (2 samples, 0.03%)</title><rect x="88.7580%" y="693" width="0.0314%" height="15" fill="rgb(248,207,23)"/><text x="89.0080%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="88.7737%" y="677" width="0.0157%" height="15" fill="rgb(214,186,4)"/><text x="89.0237%" y="687.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (17 samples, 0.27%)</title><rect x="88.5382%" y="869" width="0.2669%" height="15" fill="rgb(220,133,22)"/><text x="88.7882%" y="879.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (1 samples, 0.02%)</title><rect x="88.7894%" y="853" width="0.0157%" height="15" fill="rgb(239,134,19)"/><text x="89.0394%" y="863.50"></text></g><g><title>AppKit`__39+[_NSCGSTransaction currentTransaction]_block_invoke.32 (1 samples, 0.02%)</title><rect x="88.7894%" y="837" width="0.0157%" height="15" fill="rgb(250,140,9)"/><text x="89.0394%" y="847.50"></text></g><g><title>AppKit`NSCGSTransactionRunPreCommitActions_ (1 samples, 0.02%)</title><rect x="88.7894%" y="821" width="0.0157%" height="15" fill="rgb(225,59,14)"/><text x="89.0394%" y="831.50"></text></g><g><title>AppKit`NSCGSTransactionRunPreCommitActionsForOrder_ (1 samples, 0.02%)</title><rect x="88.7894%" y="805" width="0.0157%" height="15" fill="rgb(214,152,51)"/><text x="89.0394%" y="815.50"></text></g><g><title>AppKit`__NSCGSWindowBackingStoreMark__block_invoke (1 samples, 0.02%)</title><rect x="88.7894%" y="789" width="0.0157%" height="15" fill="rgb(251,227,43)"/><text x="89.0394%" y="799.50"></text></g><g><title>SkyLight`SLSSetWindowColorSpace (1 samples, 0.02%)</title><rect x="88.7894%" y="773" width="0.0157%" height="15" fill="rgb(241,96,17)"/><text x="89.0394%" y="783.50"></text></g><g><title>SkyLight`CGSColorSpaceRegistryAddColorSpace (1 samples, 0.02%)</title><rect x="88.7894%" y="757" width="0.0157%" height="15" fill="rgb(234,198,43)"/><text x="89.0394%" y="767.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateConversionCurve (1 samples, 0.02%)</title><rect x="88.7894%" y="741" width="0.0157%" height="15" fill="rgb(220,108,29)"/><text x="89.0394%" y="751.50"></text></g><g><title>CoreGraphics`conversion_cache_get_retained_conversion_params (1 samples, 0.02%)</title><rect x="88.7894%" y="725" width="0.0157%" height="15" fill="rgb(226,163,33)"/><text x="89.0394%" y="735.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoIterateColorSpaceFunctionsWithCallbacks (1 samples, 0.02%)</title><rect x="88.7894%" y="709" width="0.0157%" height="15" fill="rgb(205,194,45)"/><text x="89.0394%" y="719.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoCreate (1 samples, 0.02%)</title><rect x="88.7894%" y="693" width="0.0157%" height="15" fill="rgb(206,143,44)"/><text x="89.0394%" y="703.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoCreateFromList (1 samples, 0.02%)</title><rect x="88.7894%" y="677" width="0.0157%" height="15" fill="rgb(236,136,36)"/><text x="89.0394%" y="687.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoCreateFromListWithArguments (1 samples, 0.02%)</title><rect x="88.7894%" y="661" width="0.0157%" height="15" fill="rgb(249,172,42)"/><text x="89.0394%" y="671.50"></text></g><g><title>CoreGraphics`CGColorSyncTransformCacheGetRetained (1 samples, 0.02%)</title><rect x="88.7894%" y="645" width="0.0157%" height="15" fill="rgb(216,139,23)"/><text x="89.0394%" y="655.50"></text></g><g><title>ColorSync`ColorSyncTransformCreate (1 samples, 0.02%)</title><rect x="88.7894%" y="629" width="0.0157%" height="15" fill="rgb(207,166,20)"/><text x="89.0394%" y="639.50"></text></g><g><title>ColorSync`AppleCMMInitializeTransform (1 samples, 0.02%)</title><rect x="88.7894%" y="613" width="0.0157%" height="15" fill="rgb(210,209,22)"/><text x="89.0394%" y="623.50"></text></g><g><title>ColorSync`DoInitializeTransform (1 samples, 0.02%)</title><rect x="88.7894%" y="597" width="0.0157%" height="15" fill="rgb(232,118,20)"/><text x="89.0394%" y="607.50"></text></g><g><title>ColorSync`ConversionManager::MakeConversionSequence (1 samples, 0.02%)</title><rect x="88.7894%" y="581" width="0.0157%" height="15" fill="rgb(238,113,42)"/><text x="89.0394%" y="591.50"></text></g><g><title>ColorSync`ConversionManager::AddInvMatrixConv(CMMXYZTag*  (1 samples, 0.02%)</title><rect x="88.7894%" y="565" width="0.0157%" height="15" fill="rgb(231,42,5)"/><text x="89.0394%" y="575.50"></text></g><g><title>ColorSync`CMMRGBCurves::MakeInvertedTRC (1 samples, 0.02%)</title><rect x="88.7894%" y="549" width="0.0157%" height="15" fill="rgb(243,166,24)"/><text x="89.0394%" y="559.50"></text></g><g><title>ColorSync`CMMParaCurveTag::MakeInvertedTRC (1 samples, 0.02%)</title><rect x="88.7894%" y="533" width="0.0157%" height="15" fill="rgb(237,226,12)"/><text x="89.0394%" y="543.50"></text></g><g><title>ColorSync`InvertLUT(int*, int*) (1 samples, 0.02%)</title><rect x="88.7894%" y="517" width="0.0157%" height="15" fill="rgb(229,133,24)"/><text x="89.0394%" y="527.50"></text></g><g><title>AppKit`-[NSView buildLayerTree] (1 samples, 0.02%)</title><rect x="88.8051%" y="773" width="0.0157%" height="15" fill="rgb(238,33,43)"/><text x="89.0551%" y="783.50"></text></g><g><title>AppKit`-[NSView buildLayerTreeWithOwnLayerRequirement:someAncestorWantsLayer:] (1 samples, 0.02%)</title><rect x="88.8051%" y="757" width="0.0157%" height="15" fill="rgb(227,59,38)"/><text x="89.0551%" y="767.50"></text></g><g><title>AppKit`-[NSView buildLayerTreeWithOwnLayerRequirement:someAncestorWantsLayer:] (1 samples, 0.02%)</title><rect x="88.8051%" y="741" width="0.0157%" height="15" fill="rgb(230,97,0)"/><text x="89.0551%" y="751.50"></text></g><g><title>AppKit`-[NSView buildLayerTreeWithOwnLayerRequirement:someAncestorWantsLayer:] (1 samples, 0.02%)</title><rect x="88.8051%" y="725" width="0.0157%" height="15" fill="rgb(250,173,50)"/><text x="89.0551%" y="735.50"></text></g><g><title>AppKit`-[NSView buildLayerTreeWithOwnLayerRequirement:someAncestorWantsLayer:] (1 samples, 0.02%)</title><rect x="88.8051%" y="709" width="0.0157%" height="15" fill="rgb(240,15,50)"/><text x="89.0551%" y="719.50"></text></g><g><title>AppKit`-[NSView _updateLayerBackedness] (1 samples, 0.02%)</title><rect x="88.8051%" y="693" width="0.0157%" height="15" fill="rgb(221,93,22)"/><text x="89.0551%" y="703.50"></text></g><g><title>AppKit`-[NSView(NSInternal) _createLayerAndInitialize] (1 samples, 0.02%)</title><rect x="88.8051%" y="677" width="0.0157%" height="15" fill="rgb(245,180,53)"/><text x="89.0551%" y="687.50"></text></g><g><title>QuartzCore`CA::Layer::set_delegate (1 samples, 0.02%)</title><rect x="88.8051%" y="661" width="0.0157%" height="15" fill="rgb(231,88,51)"/><text x="89.0551%" y="671.50"></text></g><g><title>QuartzCore`CA::Layer::State::set_delegate (1 samples, 0.02%)</title><rect x="88.8051%" y="645" width="0.0157%" height="15" fill="rgb(240,58,21)"/><text x="89.0551%" y="655.50"></text></g><g><title>QuartzCore`lookup_delegate_methods(CA::Transaction*, objc_object*) (1 samples, 0.02%)</title><rect x="88.8051%" y="629" width="0.0157%" height="15" fill="rgb(237,21,10)"/><text x="89.0551%" y="639.50"></text></g><g><title>libobjc.A.dylib`class_respondsToSelector_inst (1 samples, 0.02%)</title><rect x="88.8051%" y="613" width="0.0157%" height="15" fill="rgb(218,43,11)"/><text x="89.0551%" y="623.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="88.8051%" y="597" width="0.0157%" height="15" fill="rgb(218,221,29)"/><text x="89.0551%" y="607.50"></text></g><g><title>ColorSync`ConversionManager::AddInvMatrixConv(CMMXYZTag*  (1 samples, 0.02%)</title><rect x="88.8209%" y="469" width="0.0157%" height="15" fill="rgb(214,118,42)"/><text x="89.0709%" y="479.50"></text></g><g><title>ColorSync`CMMRGBCurves::MakeInvertedTRC (1 samples, 0.02%)</title><rect x="88.8209%" y="453" width="0.0157%" height="15" fill="rgb(251,200,26)"/><text x="89.0709%" y="463.50"></text></g><g><title>ColorSync`CMMParaCurveTag::MakeInvertedTRC (1 samples, 0.02%)</title><rect x="88.8209%" y="437" width="0.0157%" height="15" fill="rgb(237,101,39)"/><text x="89.0709%" y="447.50"></text></g><g><title>ColorSync`InvertLUT(int*, int*) (1 samples, 0.02%)</title><rect x="88.8209%" y="421" width="0.0157%" height="15" fill="rgb(251,117,11)"/><text x="89.0709%" y="431.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForDisplay_block_invoke (3 samples, 0.05%)</title><rect x="88.8051%" y="821" width="0.0471%" height="15" fill="rgb(216,223,23)"/><text x="89.0551%" y="831.50"></text></g><g><title>AppKit`-[NSWindow displayIfNeeded] (3 samples, 0.05%)</title><rect x="88.8051%" y="805" width="0.0471%" height="15" fill="rgb(251,54,12)"/><text x="89.0551%" y="815.50"></text></g><g><title>AppKit`NSViewBuildLayerTreeForDisplay (3 samples, 0.05%)</title><rect x="88.8051%" y="789" width="0.0471%" height="15" fill="rgb(254,176,54)"/><text x="89.0551%" y="799.50"></text></g><g><title>AppKit`NSViewUpdateLayerSurfacesForSubtree (2 samples, 0.03%)</title><rect x="88.8209%" y="773" width="0.0314%" height="15" fill="rgb(210,32,8)"/><text x="89.0709%" y="783.50"></text></g><g><title>AppKit`NSViewAttachLayerSurface (2 samples, 0.03%)</title><rect x="88.8209%" y="757" width="0.0314%" height="15" fill="rgb(235,52,38)"/><text x="89.0709%" y="767.50"></text></g><g><title>AppKit`-[_NSViewLayerSurface initWithView:] (2 samples, 0.03%)</title><rect x="88.8209%" y="741" width="0.0314%" height="15" fill="rgb(231,4,44)"/><text x="89.0709%" y="751.50"></text></g><g><title>AppKit`-[_NSViewLayerSurface update] (2 samples, 0.03%)</title><rect x="88.8209%" y="725" width="0.0314%" height="15" fill="rgb(249,2,32)"/><text x="89.0709%" y="735.50"></text></g><g><title>AppKit`-[NSCGSWindow(NSCGSWindowSurface) makeLayerSurface] (2 samples, 0.03%)</title><rect x="88.8209%" y="709" width="0.0314%" height="15" fill="rgb(224,65,26)"/><text x="89.0709%" y="719.50"></text></g><g><title>AppKit`-[_NSCGSWindowLayerSurface initWithWindow:] (2 samples, 0.03%)</title><rect x="88.8209%" y="693" width="0.0314%" height="15" fill="rgb(250,73,40)"/><text x="89.0709%" y="703.50"></text></g><g><title>SkyLight`SLSSetSurfaceColorSpace (2 samples, 0.03%)</title><rect x="88.8209%" y="677" width="0.0314%" height="15" fill="rgb(253,177,16)"/><text x="89.0709%" y="687.50"></text></g><g><title>SkyLight`CGSColorSpaceRegistryAddColorSpace (2 samples, 0.03%)</title><rect x="88.8209%" y="661" width="0.0314%" height="15" fill="rgb(217,32,34)"/><text x="89.0709%" y="671.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateConversionCurve (2 samples, 0.03%)</title><rect x="88.8209%" y="645" width="0.0314%" height="15" fill="rgb(212,7,10)"/><text x="89.0709%" y="655.50"></text></g><g><title>CoreGraphics`conversion_cache_get_retained_conversion_params (2 samples, 0.03%)</title><rect x="88.8209%" y="629" width="0.0314%" height="15" fill="rgb(245,89,8)"/><text x="89.0709%" y="639.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoIterateColorSpaceFunctionsWithCallbacks (2 samples, 0.03%)</title><rect x="88.8209%" y="613" width="0.0314%" height="15" fill="rgb(237,16,53)"/><text x="89.0709%" y="623.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoCreate (2 samples, 0.03%)</title><rect x="88.8209%" y="597" width="0.0314%" height="15" fill="rgb(250,204,30)"/><text x="89.0709%" y="607.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoCreateFromList (2 samples, 0.03%)</title><rect x="88.8209%" y="581" width="0.0314%" height="15" fill="rgb(208,77,27)"/><text x="89.0709%" y="591.50"></text></g><g><title>CoreGraphics`CGColorConversionInfoCreateFromListWithArguments (2 samples, 0.03%)</title><rect x="88.8209%" y="565" width="0.0314%" height="15" fill="rgb(250,204,28)"/><text x="89.0709%" y="575.50"></text></g><g><title>CoreGraphics`CGColorSyncTransformCacheGetRetained (2 samples, 0.03%)</title><rect x="88.8209%" y="549" width="0.0314%" height="15" fill="rgb(244,63,21)"/><text x="89.0709%" y="559.50"></text></g><g><title>ColorSync`ColorSyncTransformCreate (2 samples, 0.03%)</title><rect x="88.8209%" y="533" width="0.0314%" height="15" fill="rgb(236,85,44)"/><text x="89.0709%" y="543.50"></text></g><g><title>ColorSync`AppleCMMInitializeTransform (2 samples, 0.03%)</title><rect x="88.8209%" y="517" width="0.0314%" height="15" fill="rgb(215,98,4)"/><text x="89.0709%" y="527.50"></text></g><g><title>ColorSync`DoInitializeTransform (2 samples, 0.03%)</title><rect x="88.8209%" y="501" width="0.0314%" height="15" fill="rgb(235,38,11)"/><text x="89.0709%" y="511.50"></text></g><g><title>ColorSync`ConversionManager::MakeConversionSequence (2 samples, 0.03%)</title><rect x="88.8209%" y="485" width="0.0314%" height="15" fill="rgb(254,186,25)"/><text x="89.0709%" y="495.50"></text></g><g><title>ColorSync`ConversionManager::AddMatrixConv(CMMXYZTag*  (1 samples, 0.02%)</title><rect x="88.8366%" y="469" width="0.0157%" height="15" fill="rgb(225,55,31)"/><text x="89.0866%" y="479.50"></text></g><g><title>ColorSync`CMMRGBCurves::MakeTRC (1 samples, 0.02%)</title><rect x="88.8366%" y="453" width="0.0157%" height="15" fill="rgb(211,15,21)"/><text x="89.0866%" y="463.50"></text></g><g><title>ColorSync`CMMParaCurveTag::MakeTRC (1 samples, 0.02%)</title><rect x="88.8366%" y="437" width="0.0157%" height="15" fill="rgb(215,187,41)"/><text x="89.0866%" y="447.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6e4bbfd0 (1 samples, 0.02%)</title><rect x="88.8366%" y="421" width="0.0157%" height="15" fill="rgb(248,69,32)"/><text x="89.0866%" y="431.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForUpdateConstraints_block_invoke (1 samples, 0.02%)</title><rect x="88.8523%" y="821" width="0.0157%" height="15" fill="rgb(252,102,52)"/><text x="89.1023%" y="831.50"></text></g><g><title>AppKit`-[NSWindow(NSConstraintBasedLayout) updateConstraintsIfNeeded] (1 samples, 0.02%)</title><rect x="88.8523%" y="805" width="0.0157%" height="15" fill="rgb(253,140,32)"/><text x="89.1023%" y="815.50"></text></g><g><title>AppKit`__62-[NSWindow(NSConstraintBasedLayout) updateConstraintsIfNeeded]_block_invoke (1 samples, 0.02%)</title><rect x="88.8523%" y="789" width="0.0157%" height="15" fill="rgb(216,56,42)"/><text x="89.1023%" y="799.50"></text></g><g><title>AppKit`-[NSView updateConstraintsForSubtreeIfNeeded] (1 samples, 0.02%)</title><rect x="88.8523%" y="773" width="0.0157%" height="15" fill="rgb(216,184,14)"/><text x="89.1023%" y="783.50"></text></g><g><title>AppKit`__45-[NSView updateConstraintsForSubtreeIfNeeded]_block_invoke (1 samples, 0.02%)</title><rect x="88.8523%" y="757" width="0.0157%" height="15" fill="rgb(237,187,27)"/><text x="89.1023%" y="767.50"></text></g><g><title>AppKit`-[NSView _updateConstraintsForSubtreeIfNeededCollectingViewsWithInvalidBaselines:] (1 samples, 0.02%)</title><rect x="88.8523%" y="741" width="0.0157%" height="15" fill="rgb(219,65,3)"/><text x="89.1023%" y="751.50"></text></g><g><title>AppKit`-[NSView _updateConstraintsForSubtreeIfNeededCollectingViewsWithInvalidBaselines:] (1 samples, 0.02%)</title><rect x="88.8523%" y="725" width="0.0157%" height="15" fill="rgb(245,83,25)"/><text x="89.1023%" y="735.50"></text></g><g><title>AppKit`-[NSView _updateConstraintsForSubtreeIfNeededCollectingViewsWithInvalidBaselines:] (1 samples, 0.02%)</title><rect x="88.8523%" y="709" width="0.0157%" height="15" fill="rgb(214,205,45)"/><text x="89.1023%" y="719.50"></text></g><g><title>AppKit`_NSViewUpdateConstraints (1 samples, 0.02%)</title><rect x="88.8523%" y="693" width="0.0157%" height="15" fill="rgb(241,20,18)"/><text x="89.1023%" y="703.50"></text></g><g><title>AppKit`-[NSView updateConstraints] (1 samples, 0.02%)</title><rect x="88.8523%" y="677" width="0.0157%" height="15" fill="rgb(232,163,23)"/><text x="89.1023%" y="687.50"></text></g><g><title>AppKit`-[NSView(NSConstraintBasedLayout) _updateAutoresizingConstraints] (1 samples, 0.02%)</title><rect x="88.8523%" y="661" width="0.0157%" height="15" fill="rgb(214,5,46)"/><text x="89.1023%" y="671.50"></text></g><g><title>AppKit`-[NSView(NSConstraintBasedLayout) _constraintsEquivalentToAutoresizingMask] (1 samples, 0.02%)</title><rect x="88.8523%" y="645" width="0.0157%" height="15" fill="rgb(229,78,17)"/><text x="89.1023%" y="655.50"></text></g><g><title>Foundation`+[NSAutoresizingMaskLayoutConstraint constraintsWithAutoresizingMask:subitem:frame:superitem:bounds:] (1 samples, 0.02%)</title><rect x="88.8523%" y="629" width="0.0157%" height="15" fill="rgb(248,89,10)"/><text x="89.1023%" y="639.50"></text></g><g><title>Foundation`+[NSLayoutConstraint constraintWithItem:attribute:relatedBy:constant:] (1 samples, 0.02%)</title><rect x="88.8523%" y="613" width="0.0157%" height="15" fill="rgb(248,54,15)"/><text x="89.1023%" y="623.50"></text></g><g><title>Foundation`+[NSAutoresizingMaskLayoutConstraint constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:] (1 samples, 0.02%)</title><rect x="88.8523%" y="597" width="0.0157%" height="15" fill="rgb(223,116,6)"/><text x="89.1023%" y="607.50"></text></g><g><title>Foundation`-[NSLayoutConstraint _setFirstItem:attribute:] (1 samples, 0.02%)</title><rect x="88.8523%" y="581" width="0.0157%" height="15" fill="rgb(205,125,38)"/><text x="89.1023%" y="591.50"></text></g><g><title>Foundation`+[NSLayoutAnchor _anchorForItem:attribute:] (1 samples, 0.02%)</title><rect x="88.8523%" y="565" width="0.0157%" height="15" fill="rgb(251,78,38)"/><text x="89.1023%" y="575.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="88.8523%" y="549" width="0.0157%" height="15" fill="rgb(253,78,28)"/><text x="89.1023%" y="559.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.02%)</title><rect x="88.8523%" y="533" width="0.0157%" height="15" fill="rgb(209,120,3)"/><text x="89.1023%" y="543.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (5 samples, 0.08%)</title><rect x="88.8051%" y="853" width="0.0785%" height="15" fill="rgb(238,229,9)"/><text x="89.0551%" y="863.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (5 samples, 0.08%)</title><rect x="88.8051%" y="837" width="0.0785%" height="15" fill="rgb(253,159,18)"/><text x="89.0551%" y="847.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForUpdateStructuralRegions_block_invoke (1 samples, 0.02%)</title><rect x="88.8680%" y="821" width="0.0157%" height="15" fill="rgb(244,42,34)"/><text x="89.1180%" y="831.50"></text></g><g><title>AppKit`-[NSWindow(NSWindow_Theme) _resetDragMarginsIfNeeded] (1 samples, 0.02%)</title><rect x="88.8680%" y="805" width="0.0157%" height="15" fill="rgb(224,8,7)"/><text x="89.1180%" y="815.50"></text></g><g><title>AppKit`-[NSWindow(NSWindow_Theme) _resetDragMargins] (1 samples, 0.02%)</title><rect x="88.8680%" y="789" width="0.0157%" height="15" fill="rgb(210,201,45)"/><text x="89.1180%" y="799.50"></text></g><g><title>AppKit`-[NSWindow(NSWindow_Theme) _regionForOpaqueViewsBlockingDraggableFrame:] (1 samples, 0.02%)</title><rect x="88.8680%" y="773" width="0.0157%" height="15" fill="rgb(252,185,21)"/><text x="89.1180%" y="783.50"></text></g><g><title>AppKit`-[NSThemeFrame _regionForOpaqueDescendants:forMove:forUnderTitlebar:] (1 samples, 0.02%)</title><rect x="88.8680%" y="757" width="0.0157%" height="15" fill="rgb(223,131,1)"/><text x="89.1180%" y="767.50"></text></g><g><title>AppKit`-[NSTitledFrame _regionForOpaqueDescendants:forMove:forUnderTitlebar:] (1 samples, 0.02%)</title><rect x="88.8680%" y="741" width="0.0157%" height="15" fill="rgb(245,141,16)"/><text x="89.1180%" y="751.50"></text></g><g><title>AppKit`-[NSView _regionForOpaqueDescendants:forMove:forUnderTitlebar:] (1 samples, 0.02%)</title><rect x="88.8680%" y="725" width="0.0157%" height="15" fill="rgb(229,55,45)"/><text x="89.1180%" y="735.50"></text></g><g><title>AppKit`-[NSView(NSInternal) _opaqueRect] (1 samples, 0.02%)</title><rect x="88.8680%" y="709" width="0.0157%" height="15" fill="rgb(208,92,15)"/><text x="89.1180%" y="719.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="88.8680%" y="693" width="0.0157%" height="15" fill="rgb(234,185,47)"/><text x="89.1180%" y="703.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.02%)</title><rect x="88.8680%" y="677" width="0.0157%" height="15" fill="rgb(253,104,50)"/><text x="89.1180%" y="687.50"></text></g><g><title>QuartzCore`+[CAContext allContexts] (1 samples, 0.02%)</title><rect x="88.8837%" y="837" width="0.0157%" height="15" fill="rgb(205,70,7)"/><text x="89.1337%" y="847.50"></text></g><g><title>QuartzCore`CA::Context::retain_objc_contexts (1 samples, 0.02%)</title><rect x="88.8837%" y="821" width="0.0157%" height="15" fill="rgb(240,178,43)"/><text x="89.1337%" y="831.50"></text></g><g><title>CoreFoundation`__NSArrayI_new (1 samples, 0.02%)</title><rect x="88.8837%" y="805" width="0.0157%" height="15" fill="rgb(214,112,2)"/><text x="89.1337%" y="815.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (1 samples, 0.02%)</title><rect x="88.8837%" y="789" width="0.0157%" height="15" fill="rgb(206,46,17)"/><text x="89.1337%" y="799.50"></text></g><g><title>libobjc.A.dylib`DYLD-STUB$$calloc (1 samples, 0.02%)</title><rect x="88.8837%" y="773" width="0.0157%" height="15" fill="rgb(225,220,16)"/><text x="89.1337%" y="783.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (24 samples, 0.38%)</title><rect x="88.5382%" y="917" width="0.3768%" height="15" fill="rgb(238,65,40)"/><text x="88.7882%" y="927.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (24 samples, 0.38%)</title><rect x="88.5382%" y="901" width="0.3768%" height="15" fill="rgb(230,151,21)"/><text x="88.7882%" y="911.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (24 samples, 0.38%)</title><rect x="88.5382%" y="885" width="0.3768%" height="15" fill="rgb(218,58,49)"/><text x="88.7882%" y="895.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (7 samples, 0.11%)</title><rect x="88.8051%" y="869" width="0.1099%" height="15" fill="rgb(219,179,14)"/><text x="89.0551%" y="879.50"></text></g><g><title>AppKit`__39+[_NSCGSTransaction currentTransaction]_block_invoke (2 samples, 0.03%)</title><rect x="88.8837%" y="853" width="0.0314%" height="15" fill="rgb(223,72,1)"/><text x="89.1337%" y="863.50"></text></g><g><title>QuartzCore`-[CAContextImpl createFencePort] (1 samples, 0.02%)</title><rect x="88.8994%" y="837" width="0.0157%" height="15" fill="rgb(238,126,10)"/><text x="89.1494%" y="847.50"></text></g><g><title>QuartzCore`CA::Transaction::set_fence(unsigned int, unsigned int, void  (1 samples, 0.02%)</title><rect x="88.8994%" y="821" width="0.0157%" height="15" fill="rgb(224,206,38)"/><text x="89.1494%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (1 samples, 0.02%)</title><rect x="88.8994%" y="805" width="0.0157%" height="15" fill="rgb(212,201,54)"/><text x="89.1494%" y="815.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (1 samples, 0.02%)</title><rect x="88.9308%" y="901" width="0.0157%" height="15" fill="rgb(218,154,48)"/><text x="89.1808%" y="911.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (1 samples, 0.02%)</title><rect x="88.9308%" y="885" width="0.0157%" height="15" fill="rgb(232,93,24)"/><text x="89.1808%" y="895.50"></text></g><g><title>QuartzCore`CA::Transaction::observer_callback (3 samples, 0.05%)</title><rect x="88.9151%" y="917" width="0.0471%" height="15" fill="rgb(245,30,21)"/><text x="89.1651%" y="927.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_unreliably_with_name_impl (1 samples, 0.02%)</title><rect x="88.9465%" y="901" width="0.0157%" height="15" fill="rgb(242,148,29)"/><text x="89.1965%" y="911.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.03%)</title><rect x="88.9622%" y="917" width="0.0314%" height="15" fill="rgb(244,153,54)"/><text x="89.2122%" y="927.50"></text></g><g><title>rvfm_main`__rdl_alloc (1 samples, 0.02%)</title><rect x="88.9936%" y="917" width="0.0157%" height="15" fill="rgb(252,87,22)"/><text x="89.2436%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="89.0564%" y="901" width="0.0157%" height="15" fill="rgb(210,51,29)"/><text x="89.3064%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="89.0564%" y="885" width="0.0157%" height="15" fill="rgb(242,136,47)"/><text x="89.3064%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="89.0721%" y="901" width="0.0314%" height="15" fill="rgb(238,68,4)"/><text x="89.3221%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="89.0878%" y="885" width="0.0157%" height="15" fill="rgb(242,161,30)"/><text x="89.3378%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="89.0878%" y="869" width="0.0157%" height="15" fill="rgb(218,58,44)"/><text x="89.3378%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="89.1035%" y="901" width="0.0157%" height="15" fill="rgb(252,125,32)"/><text x="89.3535%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="89.1035%" y="885" width="0.0157%" height="15" fill="rgb(219,178,0)"/><text x="89.3535%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="89.1035%" y="869" width="0.0157%" height="15" fill="rgb(213,152,7)"/><text x="89.3535%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="89.1192%" y="901" width="0.0471%" height="15" fill="rgb(249,109,34)"/><text x="89.3692%" y="911.50"></text></g><g><title>rvfm_main`&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="89.1663%" y="901" width="0.0157%" height="15" fill="rgb(232,96,21)"/><text x="89.4163%" y="911.50"></text></g><g><title>rvfm_main`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (1 samples, 0.02%)</title><rect x="89.1820%" y="901" width="0.0157%" height="15" fill="rgb(228,27,39)"/><text x="89.4320%" y="911.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.02%)</title><rect x="89.2291%" y="821" width="0.0157%" height="15" fill="rgb(211,182,52)"/><text x="89.4791%" y="831.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Token&lt;wgpu_core::hub::Root&gt;::root (1 samples, 0.02%)</title><rect x="89.2448%" y="821" width="0.0157%" height="15" fill="rgb(234,178,38)"/><text x="89.4948%" y="831.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (1 samples, 0.02%)</title><rect x="89.2919%" y="773" width="0.0157%" height="15" fill="rgb(221,111,3)"/><text x="89.5419%" y="783.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (1 samples, 0.02%)</title><rect x="89.2919%" y="757" width="0.0157%" height="15" fill="rgb(228,175,21)"/><text x="89.5419%" y="767.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (1 samples, 0.02%)</title><rect x="89.2919%" y="741" width="0.0157%" height="15" fill="rgb(228,174,43)"/><text x="89.5419%" y="751.50"></text></g><g><title>Metal`MTLDispatchListAppendBlock (1 samples, 0.02%)</title><rect x="89.3076%" y="741" width="0.0157%" height="15" fill="rgb(211,191,0)"/><text x="89.5576%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="89.3076%" y="725" width="0.0157%" height="15" fill="rgb(253,117,3)"/><text x="89.5576%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="89.3076%" y="709" width="0.0157%" height="15" fill="rgb(241,127,19)"/><text x="89.5576%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.3076%" y="693" width="0.0157%" height="15" fill="rgb(218,103,12)"/><text x="89.5576%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.3076%" y="677" width="0.0157%" height="15" fill="rgb(236,214,43)"/><text x="89.5576%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="89.3076%" y="661" width="0.0157%" height="15" fill="rgb(244,144,19)"/><text x="89.5576%" y="671.50"></text></g><g><title>CoreFoundation`-[NSArray containsObject:] (1 samples, 0.02%)</title><rect x="89.3233%" y="725" width="0.0157%" height="15" fill="rgb(246,188,10)"/><text x="89.5733%" y="735.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (1 samples, 0.02%)</title><rect x="89.3390%" y="725" width="0.0157%" height="15" fill="rgb(212,193,33)"/><text x="89.5890%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_poll (1 samples, 0.02%)</title><rect x="89.3704%" y="693" width="0.0157%" height="15" fill="rgb(241,51,29)"/><text x="89.6204%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (12 samples, 0.19%)</title><rect x="89.3547%" y="725" width="0.1884%" height="15" fill="rgb(211,58,19)"/><text x="89.6047%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (11 samples, 0.17%)</title><rect x="89.3704%" y="709" width="0.1727%" height="15" fill="rgb(229,111,26)"/><text x="89.6204%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (10 samples, 0.16%)</title><rect x="89.3861%" y="693" width="0.1570%" height="15" fill="rgb(213,115,40)"/><text x="89.6361%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_activate (1 samples, 0.02%)</title><rect x="89.5431%" y="709" width="0.0157%" height="15" fill="rgb(209,56,44)"/><text x="89.7931%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_resume_activate (2 samples, 0.03%)</title><rect x="89.5431%" y="725" width="0.0314%" height="15" fill="rgb(230,108,32)"/><text x="89.7931%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_activate (1 samples, 0.02%)</title><rect x="89.5588%" y="709" width="0.0157%" height="15" fill="rgb(216,165,31)"/><text x="89.8088%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (1 samples, 0.02%)</title><rect x="89.5902%" y="709" width="0.0157%" height="15" fill="rgb(218,122,21)"/><text x="89.8402%" y="719.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (1 samples, 0.02%)</title><rect x="89.5902%" y="693" width="0.0157%" height="15" fill="rgb(223,224,47)"/><text x="89.8402%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="89.5902%" y="677" width="0.0157%" height="15" fill="rgb(238,102,44)"/><text x="89.8402%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="89.5902%" y="661" width="0.0157%" height="15" fill="rgb(236,46,40)"/><text x="89.8402%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.5902%" y="645" width="0.0157%" height="15" fill="rgb(247,202,50)"/><text x="89.8402%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.5902%" y="629" width="0.0157%" height="15" fill="rgb(209,99,20)"/><text x="89.8402%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="89.5902%" y="613" width="0.0157%" height="15" fill="rgb(252,27,34)"/><text x="89.8402%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_timer_create (1 samples, 0.02%)</title><rect x="89.6059%" y="693" width="0.0157%" height="15" fill="rgb(215,206,23)"/><text x="89.8559%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_calloc (1 samples, 0.02%)</title><rect x="89.6059%" y="677" width="0.0157%" height="15" fill="rgb(212,135,36)"/><text x="89.8559%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="89.6059%" y="661" width="0.0157%" height="15" fill="rgb(240,189,1)"/><text x="89.8559%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="89.6059%" y="645" width="0.0157%" height="15" fill="rgb(242,56,20)"/><text x="89.8559%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.6059%" y="629" width="0.0157%" height="15" fill="rgb(247,132,33)"/><text x="89.8559%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.6059%" y="613" width="0.0157%" height="15" fill="rgb(208,149,11)"/><text x="89.8559%" y="623.50"></text></g><g><title>libdispatch.dylib`dispatch_after (4 samples, 0.06%)</title><rect x="89.5745%" y="725" width="0.0628%" height="15" fill="rgb(211,33,11)"/><text x="89.8245%" y="735.50"></text></g><g><title>libdispatch.dylib`dispatch_source_create (2 samples, 0.03%)</title><rect x="89.6059%" y="709" width="0.0314%" height="15" fill="rgb(221,29,38)"/><text x="89.8559%" y="719.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.02%)</title><rect x="89.6216%" y="693" width="0.0157%" height="15" fill="rgb(206,182,49)"/><text x="89.8716%" y="703.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.02%)</title><rect x="89.6216%" y="677" width="0.0157%" height="15" fill="rgb(216,140,1)"/><text x="89.8716%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="89.6216%" y="661" width="0.0157%" height="15" fill="rgb(232,57,40)"/><text x="89.8716%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="89.6216%" y="645" width="0.0157%" height="15" fill="rgb(224,186,18)"/><text x="89.8716%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.6216%" y="629" width="0.0157%" height="15" fill="rgb(215,121,11)"/><text x="89.8716%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.6216%" y="613" width="0.0157%" height="15" fill="rgb(245,147,10)"/><text x="89.8716%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="89.6216%" y="597" width="0.0157%" height="15" fill="rgb(238,153,13)"/><text x="89.8716%" y="607.50"></text></g><g><title>libdispatch.dylib`dispatch_source_create (1 samples, 0.02%)</title><rect x="89.6373%" y="725" width="0.0157%" height="15" fill="rgb(233,108,0)"/><text x="89.8873%" y="735.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable addPresentScheduledHandler:] (22 samples, 0.35%)</title><rect x="89.3233%" y="741" width="0.3454%" height="15" fill="rgb(212,157,17)"/><text x="89.5733%" y="751.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (1 samples, 0.02%)</title><rect x="89.6530%" y="725" width="0.0157%" height="15" fill="rgb(225,213,38)"/><text x="89.9030%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="89.6530%" y="709" width="0.0157%" height="15" fill="rgb(248,16,11)"/><text x="89.9030%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_mgr_queue_push (1 samples, 0.02%)</title><rect x="89.6687%" y="741" width="0.0157%" height="15" fill="rgb(241,33,4)"/><text x="89.9187%" y="751.50"></text></g><g><title>libobjc.A.dylib`class_respondsToSelector_inst (1 samples, 0.02%)</title><rect x="89.6844%" y="741" width="0.0157%" height="15" fill="rgb(222,26,43)"/><text x="89.9344%" y="751.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="89.6844%" y="725" width="0.0157%" height="15" fill="rgb(243,29,36)"/><text x="89.9344%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer presentDrawable:] (26 samples, 0.41%)</title><rect x="89.3076%" y="773" width="0.4082%" height="15" fill="rgb(241,9,27)"/><text x="89.5576%" y="783.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:] (26 samples, 0.41%)</title><rect x="89.3076%" y="757" width="0.4082%" height="15" fill="rgb(205,117,26)"/><text x="89.5576%" y="767.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (1 samples, 0.02%)</title><rect x="89.7001%" y="741" width="0.0157%" height="15" fill="rgb(209,80,39)"/><text x="89.9501%" y="751.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.02%)</title><rect x="89.7158%" y="757" width="0.0157%" height="15" fill="rgb(239,155,6)"/><text x="89.9658%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="89.7158%" y="741" width="0.0157%" height="15" fill="rgb(212,104,12)"/><text x="89.9658%" y="751.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="89.7315%" y="757" width="0.0157%" height="15" fill="rgb(234,204,3)"/><text x="89.9815%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="89.7315%" y="741" width="0.0157%" height="15" fill="rgb(251,218,7)"/><text x="89.9815%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="89.7315%" y="725" width="0.0157%" height="15" fill="rgb(221,81,32)"/><text x="89.9815%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.7315%" y="709" width="0.0157%" height="15" fill="rgb(214,152,26)"/><text x="89.9815%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="89.7315%" y="693" width="0.0157%" height="15" fill="rgb(223,22,3)"/><text x="89.9815%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="89.7315%" y="677" width="0.0157%" height="15" fill="rgb(207,174,7)"/><text x="89.9815%" y="687.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBuffer] (3 samples, 0.05%)</title><rect x="89.7158%" y="773" width="0.0471%" height="15" fill="rgb(224,19,52)"/><text x="89.9658%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="89.7472%" y="757" width="0.0157%" height="15" fill="rgb(228,24,14)"/><text x="89.9972%" y="767.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (1 samples, 0.02%)</title><rect x="89.7629%" y="773" width="0.0157%" height="15" fill="rgb(230,153,43)"/><text x="90.0129%" y="783.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (1 samples, 0.02%)</title><rect x="89.7786%" y="773" width="0.0157%" height="15" fill="rgb(231,106,12)"/><text x="90.0286%" y="783.50"></text></g><g><title>libobjc.A.dylib`-[NSObject autorelease] (1 samples, 0.02%)</title><rect x="89.7786%" y="757" width="0.0157%" height="15" fill="rgb(215,92,2)"/><text x="90.0286%" y="767.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::present (33 samples, 0.52%)</title><rect x="89.2919%" y="805" width="0.5181%" height="15" fill="rgb(249,143,25)"/><text x="89.5419%" y="815.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (33 samples, 0.52%)</title><rect x="89.2919%" y="789" width="0.5181%" height="15" fill="rgb(252,7,35)"/><text x="89.5419%" y="799.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (1 samples, 0.02%)</title><rect x="89.7943%" y="773" width="0.0157%" height="15" fill="rgb(216,69,40)"/><text x="90.0443%" y="783.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (1 samples, 0.02%)</title><rect x="89.7943%" y="757" width="0.0157%" height="15" fill="rgb(240,36,33)"/><text x="90.0443%" y="767.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.02%)</title><rect x="89.7943%" y="741" width="0.0157%" height="15" fill="rgb(231,128,14)"/><text x="90.0443%" y="751.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.02%)</title><rect x="89.7943%" y="725" width="0.0157%" height="15" fill="rgb(245,143,14)"/><text x="90.0443%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="89.7943%" y="709" width="0.0157%" height="15" fill="rgb(222,130,28)"/><text x="90.0443%" y="719.50"></text></g><g><title>rvfm_main`&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (38 samples, 0.60%)</title><rect x="89.2291%" y="837" width="0.5966%" height="15" fill="rgb(212,10,48)"/><text x="89.4791%" y="847.50"></text></g><g><title>rvfm_main`wgpu_core::swap_chain::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (36 samples, 0.57%)</title><rect x="89.2605%" y="821" width="0.5652%" height="15" fill="rgb(254,118,45)"/><text x="89.5105%" y="831.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Storage&lt;T,I&gt;::remove (1 samples, 0.02%)</title><rect x="89.8100%" y="805" width="0.0157%" height="15" fill="rgb(228,6,45)"/><text x="90.0600%" y="815.50"></text></g><g><title>rvfm_main`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="89.8257%" y="821" width="0.0157%" height="15" fill="rgb(241,18,35)"/><text x="90.0757%" y="831.50"></text></g><g><title>rvfm_main`wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::extend (1 samples, 0.02%)</title><rect x="89.8414%" y="821" width="0.0157%" height="15" fill="rgb(227,214,53)"/><text x="90.0914%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="89.9042%" y="805" width="0.0314%" height="15" fill="rgb(224,107,51)"/><text x="90.1542%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="89.9356%" y="805" width="0.0157%" height="15" fill="rgb(248,60,28)"/><text x="90.1856%" y="815.50"></text></g><g><title>rvfm_main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="89.9513%" y="805" width="0.0157%" height="15" fill="rgb(249,101,23)"/><text x="90.2013%" y="815.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAutorelease (1 samples, 0.02%)</title><rect x="89.9670%" y="773" width="0.0157%" height="15" fill="rgb(228,51,19)"/><text x="90.2170%" y="783.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (2 samples, 0.03%)</title><rect x="89.9670%" y="789" width="0.0314%" height="15" fill="rgb(213,20,6)"/><text x="90.2170%" y="799.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (1 samples, 0.02%)</title><rect x="89.9827%" y="773" width="0.0157%" height="15" fill="rgb(212,124,10)"/><text x="90.2327%" y="783.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.02%)</title><rect x="89.9827%" y="757" width="0.0157%" height="15" fill="rgb(248,3,40)"/><text x="90.2327%" y="767.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (1 samples, 0.02%)</title><rect x="89.9984%" y="789" width="0.0157%" height="15" fill="rgb(223,178,23)"/><text x="90.2484%" y="799.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.02%)</title><rect x="90.0298%" y="725" width="0.0157%" height="15" fill="rgb(240,132,45)"/><text x="90.2798%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.02%)</title><rect x="90.0298%" y="709" width="0.0157%" height="15" fill="rgb(245,164,36)"/><text x="90.2798%" y="719.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel init] (1 samples, 0.02%)</title><rect x="90.0455%" y="725" width="0.0157%" height="15" fill="rgb(231,188,53)"/><text x="90.2955%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.06%)</title><rect x="90.0141%" y="757" width="0.0628%" height="15" fill="rgb(237,198,39)"/><text x="90.2641%" y="767.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.05%)</title><rect x="90.0298%" y="741" width="0.0471%" height="15" fill="rgb(223,120,35)"/><text x="90.2798%" y="751.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStoragePoolCreateStorage (1 samples, 0.02%)</title><rect x="90.0612%" y="725" width="0.0157%" height="15" fill="rgb(253,107,49)"/><text x="90.3112%" y="735.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (8 samples, 0.13%)</title><rect x="89.9670%" y="805" width="0.1256%" height="15" fill="rgb(216,44,31)"/><text x="90.2170%" y="815.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (5 samples, 0.08%)</title><rect x="90.0141%" y="789" width="0.0785%" height="15" fill="rgb(253,87,21)"/><text x="90.2641%" y="799.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.08%)</title><rect x="90.0141%" y="773" width="0.0785%" height="15" fill="rgb(226,18,2)"/><text x="90.2641%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="90.0769%" y="757" width="0.0157%" height="15" fill="rgb(216,8,46)"/><text x="90.3269%" y="767.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::finish (2 samples, 0.03%)</title><rect x="90.0926%" y="805" width="0.0314%" height="15" fill="rgb(226,140,39)"/><text x="90.3426%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_wakeup (1 samples, 0.02%)</title><rect x="90.1397%" y="757" width="0.0157%" height="15" fill="rgb(221,194,54)"/><text x="90.3897%" y="767.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (2 samples, 0.03%)</title><rect x="90.1397%" y="789" width="0.0314%" height="15" fill="rgb(213,92,11)"/><text x="90.3897%" y="799.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (2 samples, 0.03%)</title><rect x="90.1397%" y="773" width="0.0314%" height="15" fill="rgb(229,162,46)"/><text x="90.3897%" y="783.50"></text></g><g><title>libdispatch.dylib`_os_object_release_internal_n (1 samples, 0.02%)</title><rect x="90.1554%" y="757" width="0.0157%" height="15" fill="rgb(214,111,36)"/><text x="90.4054%" y="767.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.02%)</title><rect x="90.1711%" y="757" width="0.0157%" height="15" fill="rgb(207,6,21)"/><text x="90.4211%" y="767.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.03%)</title><rect x="90.1711%" y="773" width="0.0314%" height="15" fill="rgb(213,127,38)"/><text x="90.4211%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="90.1868%" y="757" width="0.0157%" height="15" fill="rgb(238,118,32)"/><text x="90.4368%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="90.1868%" y="741" width="0.0157%" height="15" fill="rgb(240,139,39)"/><text x="90.4368%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="90.1868%" y="725" width="0.0157%" height="15" fill="rgb(235,10,37)"/><text x="90.4368%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="90.1868%" y="709" width="0.0157%" height="15" fill="rgb(249,171,38)"/><text x="90.4368%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="90.1868%" y="693" width="0.0157%" height="15" fill="rgb(242,144,32)"/><text x="90.4368%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="90.1868%" y="677" width="0.0157%" height="15" fill="rgb(217,117,21)"/><text x="90.4368%" y="687.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (3 samples, 0.05%)</title><rect x="90.1711%" y="789" width="0.0471%" height="15" fill="rgb(249,87,1)"/><text x="90.4211%" y="799.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="90.2025%" y="773" width="0.0157%" height="15" fill="rgb(248,196,48)"/><text x="90.4525%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="90.2025%" y="757" width="0.0157%" height="15" fill="rgb(251,206,33)"/><text x="90.4525%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="90.2025%" y="741" width="0.0157%" height="15" fill="rgb(232,141,28)"/><text x="90.4525%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="90.2025%" y="725" width="0.0157%" height="15" fill="rgb(209,167,14)"/><text x="90.4525%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="90.2025%" y="709" width="0.0157%" height="15" fill="rgb(225,11,50)"/><text x="90.4525%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="90.2025%" y="693" width="0.0157%" height="15" fill="rgb(209,50,20)"/><text x="90.4525%" y="703.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (1 samples, 0.02%)</title><rect x="90.2182%" y="789" width="0.0157%" height="15" fill="rgb(212,17,46)"/><text x="90.4682%" y="799.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (2 samples, 0.03%)</title><rect x="90.2339%" y="789" width="0.0314%" height="15" fill="rgb(216,101,39)"/><text x="90.4839%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="90.2339%" y="773" width="0.0314%" height="15" fill="rgb(212,228,48)"/><text x="90.4839%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="90.2653%" y="789" width="0.0157%" height="15" fill="rgb(250,6,50)"/><text x="90.5153%" y="799.50"></text></g><g><title>libsystem_blocks.dylib`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="90.2810%" y="789" width="0.0157%" height="15" fill="rgb(250,160,48)"/><text x="90.5310%" y="799.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_metal::Backend&gt;&gt;::submit (12 samples, 0.19%)</title><rect x="90.1240%" y="805" width="0.1884%" height="15" fill="rgb(244,216,33)"/><text x="90.3740%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.02%)</title><rect x="90.2967%" y="789" width="0.0157%" height="15" fill="rgb(207,157,5)"/><text x="90.5467%" y="799.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="90.3125%" y="805" width="0.0157%" height="15" fill="rgb(228,199,8)"/><text x="90.5625%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.02%)</title><rect x="90.3439%" y="789" width="0.0157%" height="15" fill="rgb(227,80,20)"/><text x="90.5939%" y="799.50"></text></g><g><title>rvfm_main`wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (4 samples, 0.06%)</title><rect x="90.3282%" y="805" width="0.0628%" height="15" fill="rgb(222,9,33)"/><text x="90.5782%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (2 samples, 0.03%)</title><rect x="90.3596%" y="789" width="0.0314%" height="15" fill="rgb(239,44,28)"/><text x="90.6096%" y="799.50"></text></g><g><title>rvfm_main`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="90.4067%" y="789" width="0.0157%" height="15" fill="rgb(249,187,43)"/><text x="90.6567%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="90.4067%" y="773" width="0.0157%" height="15" fill="rgb(216,141,28)"/><text x="90.6567%" y="783.50"></text></g><g><title>rvfm_main`wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::after_submit (3 samples, 0.05%)</title><rect x="90.3910%" y="805" width="0.0471%" height="15" fill="rgb(230,154,53)"/><text x="90.6410%" y="815.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="90.4224%" y="789" width="0.0157%" height="15" fill="rgb(227,82,4)"/><text x="90.6724%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="90.4224%" y="773" width="0.0157%" height="15" fill="rgb(220,107,16)"/><text x="90.6724%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="90.4852%" y="789" width="0.0157%" height="15" fill="rgb(207,187,2)"/><text x="90.7352%" y="799.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt; &gt;::~__hash_table (2 samples, 0.03%)</title><rect x="90.5009%" y="741" width="0.0314%" height="15" fill="rgb(210,162,52)"/><text x="90.7509%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="90.5009%" y="725" width="0.0314%" height="15" fill="rgb(217,216,49)"/><text x="90.7509%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="90.5009%" y="709" width="0.0314%" height="15" fill="rgb(218,146,49)"/><text x="90.7509%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="90.5166%" y="693" width="0.0157%" height="15" fill="rgb(216,55,40)"/><text x="90.7666%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.03%)</title><rect x="90.5323%" y="709" width="0.0314%" height="15" fill="rgb(208,196,21)"/><text x="90.7823%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.03%)</title><rect x="90.5323%" y="693" width="0.0314%" height="15" fill="rgb(242,117,42)"/><text x="90.7823%" y="703.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (3 samples, 0.05%)</title><rect x="90.5323%" y="725" width="0.0471%" height="15" fill="rgb(210,11,23)"/><text x="90.7823%" y="735.50"></text></g><g><title>libdispatch.dylib`dispatch_async (1 samples, 0.02%)</title><rect x="90.5637%" y="709" width="0.0157%" height="15" fill="rgb(217,110,2)"/><text x="90.8137%" y="719.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (2 samples, 0.03%)</title><rect x="90.5794%" y="725" width="0.0314%" height="15" fill="rgb(229,77,54)"/><text x="90.8294%" y="735.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (6 samples, 0.09%)</title><rect x="90.5323%" y="741" width="0.0942%" height="15" fill="rgb(218,53,16)"/><text x="90.7823%" y="751.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageDealloc (1 samples, 0.02%)</title><rect x="90.6108%" y="725" width="0.0157%" height="15" fill="rgb(215,38,13)"/><text x="90.8608%" y="735.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::reset (9 samples, 0.14%)</title><rect x="90.5009%" y="789" width="0.1413%" height="15" fill="rgb(235,42,18)"/><text x="90.7509%" y="799.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::CommandBufferInner::reset (9 samples, 0.14%)</title><rect x="90.5009%" y="773" width="0.1413%" height="15" fill="rgb(219,66,54)"/><text x="90.7509%" y="783.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (9 samples, 0.14%)</title><rect x="90.5009%" y="757" width="0.1413%" height="15" fill="rgb(222,205,4)"/><text x="90.7509%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="90.6265%" y="741" width="0.0157%" height="15" fill="rgb(227,213,46)"/><text x="90.8765%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`small_size (1 samples, 0.02%)</title><rect x="90.6265%" y="725" width="0.0157%" height="15" fill="rgb(250,145,42)"/><text x="90.8765%" y="735.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="90.6422%" y="789" width="0.0157%" height="15" fill="rgb(219,15,2)"/><text x="90.8922%" y="799.50"></text></g><g><title>Metal`-[_MTLSamplerState dealloc] (1 samples, 0.02%)</title><rect x="90.6736%" y="773" width="0.0157%" height="15" fill="rgb(231,181,52)"/><text x="90.9236%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="90.6736%" y="757" width="0.0157%" height="15" fill="rgb(235,1,42)"/><text x="90.9236%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="90.6736%" y="741" width="0.0157%" height="15" fill="rgb(249,88,27)"/><text x="90.9236%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="90.6736%" y="725" width="0.0157%" height="15" fill="rgb(235,145,16)"/><text x="90.9236%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="90.6893%" y="773" width="0.0157%" height="15" fill="rgb(237,114,19)"/><text x="90.9393%" y="783.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (4 samples, 0.06%)</title><rect x="90.6579%" y="789" width="0.0628%" height="15" fill="rgb(238,51,50)"/><text x="90.9079%" y="799.50"></text></g><g><title>rvfm_main`&lt;alloc::vec::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="90.7050%" y="773" width="0.0157%" height="15" fill="rgb(205,194,25)"/><text x="90.9550%" y="783.50"></text></g><g><title>rvfm_main`&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.03%)</title><rect x="90.7364%" y="773" width="0.0314%" height="15" fill="rgb(215,203,17)"/><text x="90.9864%" y="783.50"></text></g><g><title>rvfm_main`hashbrown::raw::RawTable&lt;T&gt;::insert (1 samples, 0.02%)</title><rect x="90.7521%" y="757" width="0.0157%" height="15" fill="rgb(233,112,49)"/><text x="91.0021%" y="767.50"></text></g><g><title>rvfm_main`hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="90.7521%" y="741" width="0.0157%" height="15" fill="rgb(241,130,26)"/><text x="91.0021%" y="751.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_framebuffers (4 samples, 0.06%)</title><rect x="90.7207%" y="789" width="0.0628%" height="15" fill="rgb(252,223,19)"/><text x="90.9707%" y="799.50"></text></g><g><title>rvfm_main`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.02%)</title><rect x="90.7678%" y="773" width="0.0157%" height="15" fill="rgb(211,95,25)"/><text x="91.0178%" y="783.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::terminate (1 samples, 0.02%)</title><rect x="90.7835%" y="757" width="0.0157%" height="15" fill="rgb(251,182,27)"/><text x="91.0335%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="90.7835%" y="741" width="0.0157%" height="15" fill="rgb(238,24,4)"/><text x="91.0335%" y="751.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (2 samples, 0.03%)</title><rect x="90.7835%" y="773" width="0.0314%" height="15" fill="rgb(224,220,25)"/><text x="91.0335%" y="783.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (1 samples, 0.02%)</title><rect x="90.7992%" y="757" width="0.0157%" height="15" fill="rgb(239,133,26)"/><text x="91.0492%" y="767.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (1 samples, 0.02%)</title><rect x="90.7992%" y="741" width="0.0157%" height="15" fill="rgb(211,94,48)"/><text x="91.0492%" y="751.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (1 samples, 0.02%)</title><rect x="90.7992%" y="725" width="0.0157%" height="15" fill="rgb(239,87,6)"/><text x="91.0492%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="90.7992%" y="709" width="0.0157%" height="15" fill="rgb(227,62,0)"/><text x="91.0492%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="90.7992%" y="693" width="0.0157%" height="15" fill="rgb(211,226,4)"/><text x="91.0492%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="90.7992%" y="677" width="0.0157%" height="15" fill="rgb(253,38,52)"/><text x="91.0492%" y="687.50"></text></g><g><title>Metal`-[_MTLCommandBuffer status] (1 samples, 0.02%)</title><rect x="90.8149%" y="773" width="0.0157%" height="15" fill="rgb(229,126,40)"/><text x="91.0649%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="90.8306%" y="773" width="0.0157%" height="15" fill="rgb(229,165,44)"/><text x="91.0806%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="90.8463%" y="773" width="0.0157%" height="15" fill="rgb(247,95,47)"/><text x="91.0963%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="90.8463%" y="757" width="0.0157%" height="15" fill="rgb(216,140,30)"/><text x="91.0963%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="90.8463%" y="741" width="0.0157%" height="15" fill="rgb(246,214,8)"/><text x="91.0963%" y="751.50"></text></g><g><title>rvfm_main`wgpu_core::device::Device&lt;B&gt;::maintain (28 samples, 0.44%)</title><rect x="90.4381%" y="805" width="0.4396%" height="15" fill="rgb(227,224,15)"/><text x="90.6881%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (6 samples, 0.09%)</title><rect x="90.7835%" y="789" width="0.0942%" height="15" fill="rgb(233,175,4)"/><text x="91.0335%" y="799.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::get_fence_status (1 samples, 0.02%)</title><rect x="90.8620%" y="773" width="0.0157%" height="15" fill="rgb(221,66,45)"/><text x="91.1120%" y="783.50"></text></g><g><title>Metal`-[_MTLCommandBuffer status] (1 samples, 0.02%)</title><rect x="90.8620%" y="757" width="0.0157%" height="15" fill="rgb(221,178,18)"/><text x="91.1120%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="90.8777%" y="773" width="0.0157%" height="15" fill="rgb(213,81,29)"/><text x="91.1277%" y="783.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (69 samples, 1.08%)</title><rect x="89.8257%" y="837" width="1.0834%" height="15" fill="rgb(220,89,49)"/><text x="90.0757%" y="847.50"></text></g><g><title>rvfm_main`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (67 samples, 1.05%)</title><rect x="89.8571%" y="821" width="1.0520%" height="15" fill="rgb(227,60,33)"/><text x="90.1071%" y="831.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::LifetimeTracker&lt;B&gt;::track_submission (2 samples, 0.03%)</title><rect x="90.8777%" y="805" width="0.0314%" height="15" fill="rgb(205,113,12)"/><text x="91.1277%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::device::life::SuspectedResources::extend (2 samples, 0.03%)</title><rect x="90.8777%" y="789" width="0.0314%" height="15" fill="rgb(211,32,1)"/><text x="91.1277%" y="799.50"></text></g><g><title>rvfm_main`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="90.8934%" y="773" width="0.0157%" height="15" fill="rgb(246,2,12)"/><text x="91.1434%" y="783.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="90.8934%" y="757" width="0.0157%" height="15" fill="rgb(243,37,27)"/><text x="91.1434%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (6 samples, 0.09%)</title><rect x="90.9091%" y="805" width="0.0942%" height="15" fill="rgb(248,211,31)"/><text x="91.1591%" y="815.50"></text></g><g><title>rvfm_main`parking_lot::raw_mutex::RawMutex::unlock_slow (7 samples, 0.11%)</title><rect x="90.9091%" y="821" width="0.1099%" height="15" fill="rgb(242,146,47)"/><text x="91.1591%" y="831.50"></text></g><g><title>rvfm_main`&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (1 samples, 0.02%)</title><rect x="91.0033%" y="805" width="0.0157%" height="15" fill="rgb(206,70,20)"/><text x="91.2533%" y="815.50"></text></g><g><title>rvfm_main`rv_vsys::cpu::CpuWakeupHandle::cpu_wake (8 samples, 0.13%)</title><rect x="90.9091%" y="837" width="0.1256%" height="15" fill="rgb(215,10,51)"/><text x="91.1591%" y="847.50"></text></g><g><title>rvfm_main`std::time::Instant::now (1 samples, 0.02%)</title><rect x="91.0190%" y="821" width="0.0157%" height="15" fill="rgb(243,178,53)"/><text x="91.2690%" y="831.50"></text></g><g><title>rvfm_main`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="91.0347%" y="821" width="0.0157%" height="15" fill="rgb(233,221,20)"/><text x="91.2847%" y="831.50"></text></g><g><title>rvfm_main`&lt;wgpu::TextureView as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="91.0504%" y="821" width="0.0157%" height="15" fill="rgb(218,95,35)"/><text x="91.3004%" y="831.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_view_drop (1 samples, 0.02%)</title><rect x="91.0504%" y="805" width="0.0157%" height="15" fill="rgb(229,13,5)"/><text x="91.3004%" y="815.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::set_viewports (1 samples, 0.02%)</title><rect x="91.0661%" y="805" width="0.0157%" height="15" fill="rgb(252,164,30)"/><text x="91.3161%" y="815.50"></text></g><g><title>rvfm_main`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="91.0818%" y="805" width="0.0157%" height="15" fill="rgb(232,68,36)"/><text x="91.3318%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="91.1446%" y="789" width="0.0157%" height="15" fill="rgb(219,59,54)"/><text x="91.3946%" y="799.50"></text></g><g><title>rvfm_main`&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="91.1603%" y="789" width="0.0157%" height="15" fill="rgb(250,92,33)"/><text x="91.4103%" y="799.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (2 samples, 0.03%)</title><rect x="91.2074%" y="741" width="0.0314%" height="15" fill="rgb(229,162,54)"/><text x="91.4574%" y="751.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (2 samples, 0.03%)</title><rect x="91.2074%" y="725" width="0.0314%" height="15" fill="rgb(244,114,52)"/><text x="91.4574%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="91.2231%" y="709" width="0.0157%" height="15" fill="rgb(212,211,43)"/><text x="91.4731%" y="719.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (3 samples, 0.05%)</title><rect x="91.2074%" y="773" width="0.0471%" height="15" fill="rgb(226,147,8)"/><text x="91.4574%" y="783.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (3 samples, 0.05%)</title><rect x="91.2074%" y="757" width="0.0471%" height="15" fill="rgb(226,23,13)"/><text x="91.4574%" y="767.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.02%)</title><rect x="91.2388%" y="741" width="0.0157%" height="15" fill="rgb(240,63,4)"/><text x="91.4888%" y="751.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::IntelStateHeaps (1 samples, 0.02%)</title><rect x="91.2702%" y="725" width="0.0157%" height="15" fill="rgb(221,1,32)"/><text x="91.5202%" y="735.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.03%)</title><rect x="91.2859%" y="725" width="0.0314%" height="15" fill="rgb(242,117,10)"/><text x="91.5359%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_retain (1 samples, 0.02%)</title><rect x="91.3016%" y="709" width="0.0157%" height="15" fill="rgb(249,172,44)"/><text x="91.5516%" y="719.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.08%)</title><rect x="91.2545%" y="757" width="0.0785%" height="15" fill="rgb(244,46,45)"/><text x="91.5045%" y="767.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (5 samples, 0.08%)</title><rect x="91.2545%" y="741" width="0.0785%" height="15" fill="rgb(206,43,17)"/><text x="91.5045%" y="751.50"></text></g><g><title>libobjc.A.dylib`objc_retain (1 samples, 0.02%)</title><rect x="91.3173%" y="725" width="0.0157%" height="15" fill="rgb(239,218,39)"/><text x="91.5673%" y="735.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (7 samples, 0.11%)</title><rect x="91.2545%" y="773" width="0.1099%" height="15" fill="rgb(208,169,54)"/><text x="91.5045%" y="783.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:] (2 samples, 0.03%)</title><rect x="91.3330%" y="757" width="0.0314%" height="15" fill="rgb(247,25,42)"/><text x="91.5830%" y="767.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (13 samples, 0.20%)</title><rect x="91.1760%" y="789" width="0.2041%" height="15" fill="rgb(226,23,31)"/><text x="91.4260%" y="799.50"></text></g><g><title>rvfm_main`parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.02%)</title><rect x="91.3644%" y="773" width="0.0157%" height="15" fill="rgb(247,16,28)"/><text x="91.6144%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1 samples, 0.02%)</title><rect x="91.3644%" y="757" width="0.0157%" height="15" fill="rgb(231,147,38)"/><text x="91.6144%" y="767.50"></text></g><g><title>Metal` (1 samples, 0.02%)</title><rect x="91.3801%" y="773" width="0.0157%" height="15" fill="rgb(253,81,48)"/><text x="91.6301%" y="783.50"></text></g><g><title>libobjc.A.dylib`_objc_rootRetain (1 samples, 0.02%)</title><rect x="91.4272%" y="741" width="0.0157%" height="15" fill="rgb(249,222,43)"/><text x="91.6772%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="91.4429%" y="741" width="0.0314%" height="15" fill="rgb(221,3,27)"/><text x="91.6929%" y="751.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer getContextStateDescriptor] (1 samples, 0.02%)</title><rect x="91.4743%" y="709" width="0.0157%" height="15" fill="rgb(228,180,5)"/><text x="91.7243%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="91.4743%" y="693" width="0.0157%" height="15" fill="rgb(227,131,42)"/><text x="91.7243%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="91.4743%" y="677" width="0.0157%" height="15" fill="rgb(212,3,39)"/><text x="91.7243%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="91.4743%" y="661" width="0.0157%" height="15" fill="rgb(226,45,5)"/><text x="91.7243%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="91.4743%" y="645" width="0.0157%" height="15" fill="rgb(215,167,45)"/><text x="91.7243%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="91.4743%" y="629" width="0.0157%" height="15" fill="rgb(250,218,53)"/><text x="91.7243%" y="639.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateBindingTable::IGRenderStateBindingTable (2 samples, 0.03%)</title><rect x="91.4900%" y="677" width="0.0314%" height="15" fill="rgb(207,140,0)"/><text x="91.7400%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="91.5057%" y="661" width="0.0157%" height="15" fill="rgb(238,133,51)"/><text x="91.7557%" y="671.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (3 samples, 0.05%)</title><rect x="91.4900%" y="693" width="0.0471%" height="15" fill="rgb(218,203,53)"/><text x="91.7400%" y="703.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__bzero (1 samples, 0.02%)</title><rect x="91.5214%" y="677" width="0.0157%" height="15" fill="rgb(226,184,25)"/><text x="91.7714%" y="687.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (1 samples, 0.02%)</title><rect x="91.5842%" y="613" width="0.0157%" height="15" fill="rgb(231,121,21)"/><text x="91.8342%" y="623.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateBindingTable::initNullSurfaceState (6 samples, 0.09%)</title><rect x="91.5685%" y="661" width="0.0942%" height="15" fill="rgb(251,14,34)"/><text x="91.8185%" y="671.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::initialize (6 samples, 0.09%)</title><rect x="91.5685%" y="645" width="0.0942%" height="15" fill="rgb(249,193,11)"/><text x="91.8185%" y="655.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IntelStateHeaps::acquireHeap (6 samples, 0.09%)</title><rect x="91.5685%" y="629" width="0.0942%" height="15" fill="rgb(220,172,37)"/><text x="91.8185%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.06%)</title><rect x="91.5999%" y="613" width="0.0628%" height="15" fill="rgb(231,229,43)"/><text x="91.8499%" y="623.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateVertexFetch::init (1 samples, 0.02%)</title><rect x="91.6627%" y="661" width="0.0157%" height="15" fill="rgb(250,161,5)"/><text x="91.9127%" y="671.50"></text></g><g><title>libdyld.dylib`dyld_get_program_sdk_version (1 samples, 0.02%)</title><rect x="91.6627%" y="645" width="0.0157%" height="15" fill="rgb(218,225,18)"/><text x="91.9127%" y="655.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`PixelShaderBindingStage::init (1 samples, 0.02%)</title><rect x="91.6784%" y="661" width="0.0157%" height="15" fill="rgb(245,45,42)"/><text x="91.9284%" y="671.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`ShaderBindingStage::init (1 samples, 0.02%)</title><rect x="91.6784%" y="645" width="0.0157%" height="15" fill="rgb(211,115,1)"/><text x="91.9284%" y="655.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (11 samples, 0.17%)</title><rect x="91.5371%" y="677" width="0.1727%" height="15" fill="rgb(248,133,52)"/><text x="91.7871%" y="687.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`ShaderBindingStage::init (1 samples, 0.02%)</title><rect x="91.6941%" y="661" width="0.0157%" height="15" fill="rgb(238,100,21)"/><text x="91.9441%" y="671.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGBufferMemory&lt;64ul&gt;::init (1 samples, 0.02%)</title><rect x="91.6941%" y="645" width="0.0157%" height="15" fill="rgb(247,144,11)"/><text x="91.9441%" y="655.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (1 samples, 0.02%)</title><rect x="91.6941%" y="629" width="0.0157%" height="15" fill="rgb(206,164,16)"/><text x="91.9441%" y="639.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (1 samples, 0.02%)</title><rect x="91.6941%" y="613" width="0.0157%" height="15" fill="rgb(222,34,3)"/><text x="91.9441%" y="623.50"></text></g><g><title>Metal`-[MTLIOAccelResource setPurgeableState:] (1 samples, 0.02%)</title><rect x="91.6941%" y="597" width="0.0157%" height="15" fill="rgb(248,82,4)"/><text x="91.9441%" y="607.50"></text></g><g><title>IOAccelerator`IOAccelResourceSetPurgeable (1 samples, 0.02%)</title><rect x="91.6941%" y="581" width="0.0157%" height="15" fill="rgb(228,81,46)"/><text x="91.9441%" y="591.50"></text></g><g><title>IOKit`IOConnectCallMethod (1 samples, 0.02%)</title><rect x="91.6941%" y="565" width="0.0157%" height="15" fill="rgb(227,67,47)"/><text x="91.9441%" y="575.50"></text></g><g><title>IOKit`io_connect_method (1 samples, 0.02%)</title><rect x="91.6941%" y="549" width="0.0157%" height="15" fill="rgb(215,93,53)"/><text x="91.9441%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="91.6941%" y="533" width="0.0157%" height="15" fill="rgb(248,194,39)"/><text x="91.9441%" y="543.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderClearEncoder::writeBlendState (1 samples, 0.02%)</title><rect x="91.7098%" y="629" width="0.0157%" height="15" fill="rgb(215,5,19)"/><text x="91.9598%" y="639.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (2 samples, 0.03%)</title><rect x="91.7098%" y="645" width="0.0314%" height="15" fill="rgb(226,215,51)"/><text x="91.9598%" y="655.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderClearEncoder::writePSState (1 samples, 0.02%)</title><rect x="91.7255%" y="629" width="0.0157%" height="15" fill="rgb(225,56,26)"/><text x="91.9755%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="91.7255%" y="613" width="0.0157%" height="15" fill="rgb(222,75,29)"/><text x="91.9755%" y="623.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGBufferMemory&lt;1ul&gt;::init (2 samples, 0.03%)</title><rect x="91.7412%" y="629" width="0.0314%" height="15" fill="rgb(236,139,6)"/><text x="91.9912%" y="639.50"></text></g><g><title>IOAccelerator`IOAccelResourceListAddResource (1 samples, 0.02%)</title><rect x="91.7569%" y="613" width="0.0157%" height="15" fill="rgb(223,137,36)"/><text x="92.0069%" y="623.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (5 samples, 0.08%)</title><rect x="91.7098%" y="661" width="0.0785%" height="15" fill="rgb(226,99,2)"/><text x="91.9598%" y="671.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderClearEncoder::IGRenderClearEncoder (3 samples, 0.05%)</title><rect x="91.7412%" y="645" width="0.0471%" height="15" fill="rgb(206,133,23)"/><text x="91.9912%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="91.7726%" y="629" width="0.0157%" height="15" fill="rgb(243,173,15)"/><text x="92.0226%" y="639.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderClearEncoder::IGRenderClearEncoder (1 samples, 0.02%)</title><rect x="91.7883%" y="661" width="0.0157%" height="15" fill="rgb(228,69,28)"/><text x="92.0383%" y="671.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (9 samples, 0.14%)</title><rect x="91.7098%" y="677" width="0.1413%" height="15" fill="rgb(212,51,22)"/><text x="91.9598%" y="687.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderPass::initWithDescriptor (3 samples, 0.05%)</title><rect x="91.8041%" y="661" width="0.0471%" height="15" fill="rgb(227,113,0)"/><text x="92.0541%" y="671.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderPass::generateSurfaceState (3 samples, 0.05%)</title><rect x="91.8041%" y="645" width="0.0471%" height="15" fill="rgb(252,84,27)"/><text x="92.0541%" y="655.50"></text></g><g><title>Metal`-[MTLIOAccelTexture textureType] (2 samples, 0.03%)</title><rect x="91.8198%" y="629" width="0.0314%" height="15" fill="rgb(223,145,39)"/><text x="92.0698%" y="639.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (21 samples, 0.33%)</title><rect x="91.5371%" y="693" width="0.3297%" height="15" fill="rgb(239,219,30)"/><text x="91.7871%" y="703.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`bool IGAccelEncoderBase::initialize&lt;(IntelConstants::eEngineID)1&gt; (1 samples, 0.02%)</title><rect x="91.8512%" y="677" width="0.0157%" height="15" fill="rgb(224,196,39)"/><text x="92.1012%" y="687.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`bool IntelCommandBuffer::initialize&lt;(IntelConstants::eEngineID)1&gt; (1 samples, 0.02%)</title><rect x="91.8512%" y="661" width="0.0157%" height="15" fill="rgb(205,35,43)"/><text x="92.1012%" y="671.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageAllocResourceAtIndex (1 samples, 0.02%)</title><rect x="91.8512%" y="645" width="0.0157%" height="15" fill="rgb(228,201,21)"/><text x="92.1012%" y="655.50"></text></g><g><title>Metal`MTLIOAccelResourcePoolCreatePooledResource (1 samples, 0.02%)</title><rect x="91.8512%" y="629" width="0.0157%" height="15" fill="rgb(237,118,16)"/><text x="92.1012%" y="639.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="91.8512%" y="613" width="0.0157%" height="15" fill="rgb(241,17,19)"/><text x="92.1012%" y="623.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (1 samples, 0.02%)</title><rect x="91.8512%" y="597" width="0.0157%" height="15" fill="rgb(214,10,25)"/><text x="92.1012%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (1 samples, 0.02%)</title><rect x="91.8512%" y="581" width="0.0157%" height="15" fill="rgb(238,37,29)"/><text x="92.1012%" y="591.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (1 samples, 0.02%)</title><rect x="91.8512%" y="565" width="0.0157%" height="15" fill="rgb(253,83,25)"/><text x="92.1012%" y="575.50"></text></g><g><title>libobjc.A.dylib`append_referrer(weak_entry_t*, objc_object**) (1 samples, 0.02%)</title><rect x="91.8512%" y="549" width="0.0157%" height="15" fill="rgb(234,192,12)"/><text x="92.1012%" y="559.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (25 samples, 0.39%)</title><rect x="91.4900%" y="709" width="0.3925%" height="15" fill="rgb(241,216,45)"/><text x="91.7400%" y="719.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder initWithCommandBuffer:] (1 samples, 0.02%)</title><rect x="91.8669%" y="693" width="0.0157%" height="15" fill="rgb(242,22,33)"/><text x="92.1169%" y="703.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (27 samples, 0.42%)</title><rect x="91.4743%" y="725" width="0.4239%" height="15" fill="rgb(231,105,49)"/><text x="91.7243%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="91.8826%" y="709" width="0.0157%" height="15" fill="rgb(218,204,15)"/><text x="92.1326%" y="719.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="91.8983%" y="725" width="0.0157%" height="15" fill="rgb(235,138,41)"/><text x="92.1483%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="91.9140%" y="725" width="0.0157%" height="15" fill="rgb(246,0,9)"/><text x="92.1640%" y="735.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::CommandSink::switch_render (30 samples, 0.47%)</title><rect x="91.4743%" y="741" width="0.4710%" height="15" fill="rgb(210,74,4)"/><text x="91.7243%" y="751.50"></text></g><g><title>rvfm_main`metal::encoder::CommandEncoderRef::set_label (1 samples, 0.02%)</title><rect x="91.9297%" y="725" width="0.0157%" height="15" fill="rgb(250,60,41)"/><text x="92.1797%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="91.9297%" y="709" width="0.0157%" height="15" fill="rgb(220,115,12)"/><text x="92.1797%" y="719.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::setPipelineState (1 samples, 0.02%)</title><rect x="92.0553%" y="725" width="0.0157%" height="15" fill="rgb(237,100,13)"/><text x="92.3053%" y="735.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::next_subpass (44 samples, 0.69%)</title><rect x="91.3958%" y="773" width="0.6908%" height="15" fill="rgb(213,55,26)"/><text x="91.6458%" y="783.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (43 samples, 0.68%)</title><rect x="91.4115%" y="757" width="0.6751%" height="15" fill="rgb(216,17,4)"/><text x="91.6615%" y="767.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::PreRender::issue_many (9 samples, 0.14%)</title><rect x="91.9454%" y="741" width="0.1413%" height="15" fill="rgb(220,153,47)"/><text x="92.1954%" y="751.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::exec_render (1 samples, 0.02%)</title><rect x="92.0710%" y="725" width="0.0157%" height="15" fill="rgb(215,131,9)"/><text x="92.3210%" y="735.50"></text></g><g><title>rvfm_main`metal::encoder::RenderCommandEncoderRef::set_viewport (1 samples, 0.02%)</title><rect x="92.0710%" y="709" width="0.0157%" height="15" fill="rgb(233,46,42)"/><text x="92.3210%" y="719.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder setViewport:] (1 samples, 0.02%)</title><rect x="92.0710%" y="693" width="0.0157%" height="15" fill="rgb(226,86,7)"/><text x="92.3210%" y="703.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::setViewport (1 samples, 0.02%)</title><rect x="92.0710%" y="677" width="0.0157%" height="15" fill="rgb(239,226,21)"/><text x="92.3210%" y="687.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal init] (1 samples, 0.02%)</title><rect x="92.0867%" y="741" width="0.0157%" height="15" fill="rgb(244,137,22)"/><text x="92.3367%" y="751.50"></text></g><g><title>Metal`+[MTLRenderPassColorAttachmentDescriptorArray alloc] (1 samples, 0.02%)</title><rect x="92.0867%" y="725" width="0.0157%" height="15" fill="rgb(211,139,35)"/><text x="92.3367%" y="735.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="92.0867%" y="709" width="0.0157%" height="15" fill="rgb(214,62,50)"/><text x="92.3367%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="92.0867%" y="693" width="0.0157%" height="15" fill="rgb(212,113,44)"/><text x="92.3367%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="92.0867%" y="677" width="0.0157%" height="15" fill="rgb(226,150,43)"/><text x="92.3367%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.0867%" y="661" width="0.0157%" height="15" fill="rgb(250,71,37)"/><text x="92.3367%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.0867%" y="645" width="0.0157%" height="15" fill="rgb(219,76,19)"/><text x="92.3367%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="92.0867%" y="629" width="0.0157%" height="15" fill="rgb(250,39,11)"/><text x="92.3367%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="92.0867%" y="613" width="0.0157%" height="15" fill="rgb(230,64,31)"/><text x="92.3367%" y="623.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptorInternal renderPassDescriptor] (2 samples, 0.03%)</title><rect x="92.0867%" y="757" width="0.0314%" height="15" fill="rgb(208,222,23)"/><text x="92.3367%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="92.1024%" y="741" width="0.0157%" height="15" fill="rgb(227,125,18)"/><text x="92.3524%" y="751.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:] (2 samples, 0.03%)</title><rect x="92.1181%" y="757" width="0.0314%" height="15" fill="rgb(234,210,9)"/><text x="92.3681%" y="767.50"></text></g><g><title>Metal`+[MTLRenderPassColorAttachmentDescriptor allocWithZone:] (2 samples, 0.03%)</title><rect x="92.1181%" y="741" width="0.0314%" height="15" fill="rgb(217,127,24)"/><text x="92.3681%" y="751.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="92.1338%" y="725" width="0.0157%" height="15" fill="rgb(239,141,48)"/><text x="92.3838%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="92.1338%" y="709" width="0.0157%" height="15" fill="rgb(227,109,8)"/><text x="92.3838%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="92.1338%" y="693" width="0.0157%" height="15" fill="rgb(235,184,23)"/><text x="92.3838%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.1338%" y="677" width="0.0157%" height="15" fill="rgb(227,226,48)"/><text x="92.3838%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.1338%" y="661" width="0.0157%" height="15" fill="rgb(206,150,11)"/><text x="92.3838%" y="671.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin_render_pass (50 samples, 0.79%)</title><rect x="91.3801%" y="789" width="0.7851%" height="15" fill="rgb(254,2,33)"/><text x="91.6301%" y="799.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (5 samples, 0.08%)</title><rect x="92.0867%" y="773" width="0.0785%" height="15" fill="rgb(243,160,20)"/><text x="92.3367%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.02%)</title><rect x="92.1495%" y="757" width="0.0157%" height="15" fill="rgb(218,208,30)"/><text x="92.3995%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.02%)</title><rect x="92.1495%" y="741" width="0.0157%" height="15" fill="rgb(224,120,49)"/><text x="92.3995%" y="751.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder setFragmentTextures:withRange:] (1 samples, 0.02%)</title><rect x="92.1652%" y="757" width="0.0157%" height="15" fill="rgb(246,12,2)"/><text x="92.4152%" y="767.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::bind_graphics_descriptor_sets (2 samples, 0.03%)</title><rect x="92.1652%" y="789" width="0.0314%" height="15" fill="rgb(236,117,3)"/><text x="92.4152%" y="799.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::PreRender::issue (2 samples, 0.03%)</title><rect x="92.1652%" y="773" width="0.0314%" height="15" fill="rgb(216,128,52)"/><text x="92.4152%" y="783.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::exec_render (1 samples, 0.02%)</title><rect x="92.1809%" y="757" width="0.0157%" height="15" fill="rgb(246,145,19)"/><text x="92.4309%" y="767.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::bind_graphics_pipeline (3 samples, 0.05%)</title><rect x="92.1966%" y="789" width="0.0471%" height="15" fill="rgb(222,11,46)"/><text x="92.4466%" y="799.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelEncoderBase::writePipelineFlush (1 samples, 0.02%)</title><rect x="92.2437%" y="741" width="0.0157%" height="15" fill="rgb(245,82,36)"/><text x="92.4937%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="92.2437%" y="725" width="0.0157%" height="15" fill="rgb(250,73,51)"/><text x="92.4937%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::preparePipeline (1 samples, 0.02%)</title><rect x="92.2594%" y="725" width="0.0157%" height="15" fill="rgb(221,189,23)"/><text x="92.5094%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::writeClipState (1 samples, 0.02%)</title><rect x="92.2751%" y="725" width="0.0157%" height="15" fill="rgb(210,33,7)"/><text x="92.5251%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::writeVSState (1 samples, 0.02%)</title><rect x="92.2908%" y="725" width="0.0157%" height="15" fill="rgb(210,107,22)"/><text x="92.5408%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt; &gt;::__emplace_unique_key_args&lt;unsigned int, std::__1::pair&lt;unsigned int, IntelStateHeaps::IGKernelCacheElement&gt; &gt;(unsigned int const&amp;, std::__1::pair (1 samples, 0.02%)</title><rect x="92.2908%" y="709" width="0.0157%" height="15" fill="rgb(222,116,37)"/><text x="92.5408%" y="719.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="92.2908%" y="693" width="0.0157%" height="15" fill="rgb(254,17,48)"/><text x="92.5408%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="92.2908%" y="677" width="0.0157%" height="15" fill="rgb(224,36,32)"/><text x="92.5408%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="92.2908%" y="661" width="0.0157%" height="15" fill="rgb(232,90,46)"/><text x="92.5408%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.2908%" y="645" width="0.0157%" height="15" fill="rgb(241,66,40)"/><text x="92.5408%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.2908%" y="629" width="0.0157%" height="15" fill="rgb(249,184,29)"/><text x="92.5408%" y="639.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderStateSamplers::writeIf (1 samples, 0.02%)</title><rect x="92.3065%" y="725" width="0.0157%" height="15" fill="rgb(231,181,1)"/><text x="92.5565%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`SamplerStage::writeSamplerState (1 samples, 0.02%)</title><rect x="92.3065%" y="709" width="0.0157%" height="15" fill="rgb(224,94,2)"/><text x="92.5565%" y="719.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`PixelShaderBindingStage::updateBindingTableData (1 samples, 0.02%)</title><rect x="92.3222%" y="709" width="0.0157%" height="15" fill="rgb(229,170,15)"/><text x="92.5722%" y="719.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`ShaderBindingStage::writeIf (2 samples, 0.03%)</title><rect x="92.3222%" y="725" width="0.0314%" height="15" fill="rgb(240,127,35)"/><text x="92.5722%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`ShaderBindingStage::updateBindingTableData (1 samples, 0.02%)</title><rect x="92.3379%" y="709" width="0.0157%" height="15" fill="rgb(248,196,34)"/><text x="92.5879%" y="719.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`ShaderBindingStage::updateResourceTable (1 samples, 0.02%)</title><rect x="92.3379%" y="693" width="0.0157%" height="15" fill="rgb(236,137,7)"/><text x="92.5879%" y="703.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::draw (8 samples, 0.13%)</title><rect x="92.2437%" y="789" width="0.1256%" height="15" fill="rgb(235,127,16)"/><text x="92.4937%" y="799.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:] (8 samples, 0.13%)</title><rect x="92.2437%" y="773" width="0.1256%" height="15" fill="rgb(250,192,54)"/><text x="92.4937%" y="783.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::drawPrimitives (8 samples, 0.13%)</title><rect x="92.2437%" y="757" width="0.1256%" height="15" fill="rgb(218,98,20)"/><text x="92.4937%" y="767.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (7 samples, 0.11%)</title><rect x="92.2594%" y="741" width="0.1099%" height="15" fill="rgb(230,176,47)"/><text x="92.5094%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="92.3536%" y="725" width="0.0157%" height="15" fill="rgb(244,2,33)"/><text x="92.6036%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::endEncoding (3 samples, 0.05%)</title><rect x="92.3693%" y="741" width="0.0471%" height="15" fill="rgb(231,100,17)"/><text x="92.6193%" y="751.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::handleClearResolves (3 samples, 0.05%)</title><rect x="92.3693%" y="725" width="0.0471%" height="15" fill="rgb(245,23,12)"/><text x="92.6193%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (3 samples, 0.05%)</title><rect x="92.3693%" y="709" width="0.0471%" height="15" fill="rgb(249,55,22)"/><text x="92.6193%" y="719.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelRenderCommandEncoder::prepareClearPipeline (1 samples, 0.02%)</title><rect x="92.4007%" y="693" width="0.0157%" height="15" fill="rgb(207,134,9)"/><text x="92.6507%" y="703.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelEncoderBase::writePipelineFlush (1 samples, 0.02%)</title><rect x="92.4007%" y="677" width="0.0157%" height="15" fill="rgb(218,134,0)"/><text x="92.6507%" y="687.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGAccelEncoderBase::writePipeControl (1 samples, 0.02%)</title><rect x="92.4007%" y="661" width="0.0157%" height="15" fill="rgb(213,212,33)"/><text x="92.6507%" y="671.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorInternal dealloc] (1 samples, 0.02%)</title><rect x="92.4164%" y="693" width="0.0157%" height="15" fill="rgb(252,106,18)"/><text x="92.6664%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="92.4164%" y="677" width="0.0157%" height="15" fill="rgb(208,126,42)"/><text x="92.6664%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="92.4164%" y="661" width="0.0157%" height="15" fill="rgb(246,175,29)"/><text x="92.6664%" y="671.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`IGRenderPass::~IGRenderPass (2 samples, 0.03%)</title><rect x="92.4164%" y="741" width="0.0314%" height="15" fill="rgb(215,13,50)"/><text x="92.6664%" y="751.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal dealloc] (2 samples, 0.03%)</title><rect x="92.4164%" y="725" width="0.0314%" height="15" fill="rgb(216,172,15)"/><text x="92.6664%" y="735.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal dealloc] (2 samples, 0.03%)</title><rect x="92.4164%" y="709" width="0.0314%" height="15" fill="rgb(212,103,13)"/><text x="92.6664%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="92.4321%" y="693" width="0.0157%" height="15" fill="rgb(231,171,36)"/><text x="92.6821%" y="703.50"></text></g><g><title>Metal`-[MTLIOAccelCommandEncoder endEncoding] (1 samples, 0.02%)</title><rect x="92.4478%" y="741" width="0.0157%" height="15" fill="rgb(250,123,20)"/><text x="92.6978%" y="751.50"></text></g><g><title>Metal`-[_MTLCommandEncoder endEncoding] (1 samples, 0.02%)</title><rect x="92.4478%" y="725" width="0.0157%" height="15" fill="rgb(212,53,50)"/><text x="92.6978%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__getpid (1 samples, 0.02%)</title><rect x="92.4478%" y="709" width="0.0157%" height="15" fill="rgb(243,54,12)"/><text x="92.6978%" y="719.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::end_render_pass (7 samples, 0.11%)</title><rect x="92.3693%" y="789" width="0.1099%" height="15" fill="rgb(234,101,34)"/><text x="92.6193%" y="799.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::EncoderState::end (7 samples, 0.11%)</title><rect x="92.3693%" y="773" width="0.1099%" height="15" fill="rgb(254,67,22)"/><text x="92.6193%" y="783.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (7 samples, 0.11%)</title><rect x="92.3693%" y="757" width="0.1099%" height="15" fill="rgb(250,35,47)"/><text x="92.6193%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="92.4635%" y="741" width="0.0157%" height="15" fill="rgb(226,126,38)"/><text x="92.7135%" y="751.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::finish (1 samples, 0.02%)</title><rect x="92.4792%" y="789" width="0.0157%" height="15" fill="rgb(216,138,53)"/><text x="92.7292%" y="799.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::window::SurfaceImage as core::borrow::Borrow&lt;gfx_backend_metal::native::ImageView&gt;&gt;::borrow (1 samples, 0.02%)</title><rect x="92.4949%" y="789" width="0.0157%" height="15" fill="rgb(246,199,43)"/><text x="92.7449%" y="799.50"></text></g><g><title>rvfm_main`&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="92.5106%" y="789" width="0.0157%" height="15" fill="rgb(232,125,11)"/><text x="92.7606%" y="799.50"></text></g><g><title>rvfm_main`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.02%)</title><rect x="92.5263%" y="789" width="0.0157%" height="15" fill="rgb(218,219,45)"/><text x="92.7763%" y="799.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="92.5420%" y="789" width="0.0157%" height="15" fill="rgb(216,102,54)"/><text x="92.7920%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="92.5420%" y="773" width="0.0157%" height="15" fill="rgb(250,228,7)"/><text x="92.7920%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="92.5420%" y="757" width="0.0157%" height="15" fill="rgb(226,125,25)"/><text x="92.7920%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.02%)</title><rect x="92.5420%" y="741" width="0.0157%" height="15" fill="rgb(224,165,27)"/><text x="92.7920%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="92.5420%" y="725" width="0.0157%" height="15" fill="rgb(233,86,3)"/><text x="92.7920%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="92.5577%" y="773" width="0.0157%" height="15" fill="rgb(228,116,20)"/><text x="92.8077%" y="783.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (2 samples, 0.03%)</title><rect x="92.5577%" y="789" width="0.0314%" height="15" fill="rgb(209,192,17)"/><text x="92.8077%" y="799.50"></text></g><g><title>rvfm_main`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="92.5734%" y="773" width="0.0157%" height="15" fill="rgb(224,88,34)"/><text x="92.8234%" y="783.50"></text></g><g><title>rvfm_main`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="92.5891%" y="789" width="0.0157%" height="15" fill="rgb(233,38,6)"/><text x="92.8391%" y="799.50"></text></g><g><title>rvfm_main`metal::encoder::RenderCommandEncoderRef::set_depth_bias (1 samples, 0.02%)</title><rect x="92.6048%" y="789" width="0.0157%" height="15" fill="rgb(212,59,30)"/><text x="92.8548%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.03%)</title><rect x="92.6205%" y="773" width="0.0314%" height="15" fill="rgb(213,80,3)"/><text x="92.8705%" y="783.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (3 samples, 0.05%)</title><rect x="92.6205%" y="789" width="0.0471%" height="15" fill="rgb(251,178,7)"/><text x="92.8705%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1 samples, 0.02%)</title><rect x="92.6519%" y="773" width="0.0157%" height="15" fill="rgb(213,154,26)"/><text x="92.9019%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (7 samples, 0.11%)</title><rect x="92.6833%" y="773" width="0.1099%" height="15" fill="rgb(238,165,49)"/><text x="92.9333%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (3 samples, 0.05%)</title><rect x="92.7932%" y="773" width="0.0471%" height="15" fill="rgb(248,91,46)"/><text x="93.0432%" y="783.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (12 samples, 0.19%)</title><rect x="92.6676%" y="789" width="0.1884%" height="15" fill="rgb(244,21,52)"/><text x="92.9176%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.02%)</title><rect x="92.8403%" y="773" width="0.0157%" height="15" fill="rgb(247,122,20)"/><text x="93.0903%" y="783.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (2 samples, 0.03%)</title><rect x="92.8560%" y="789" width="0.0314%" height="15" fill="rgb(218,27,9)"/><text x="93.1060%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.03%)</title><rect x="92.8560%" y="773" width="0.0314%" height="15" fill="rgb(246,7,6)"/><text x="93.1060%" y="783.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (2 samples, 0.03%)</title><rect x="92.8874%" y="773" width="0.0314%" height="15" fill="rgb(227,135,54)"/><text x="93.1374%" y="783.50"></text></g><g><title>rvfm_main`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (2 samples, 0.03%)</title><rect x="92.8874%" y="757" width="0.0314%" height="15" fill="rgb(247,14,11)"/><text x="93.1374%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="92.8874%" y="741" width="0.0314%" height="15" fill="rgb(206,149,34)"/><text x="93.1374%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.03%)</title><rect x="92.8874%" y="725" width="0.0314%" height="15" fill="rgb(227,228,4)"/><text x="93.1374%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="92.8874%" y="709" width="0.0314%" height="15" fill="rgb(238,218,28)"/><text x="93.1374%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.03%)</title><rect x="92.8874%" y="693" width="0.0314%" height="15" fill="rgb(252,86,40)"/><text x="93.1374%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="92.9031%" y="677" width="0.0157%" height="15" fill="rgb(251,225,11)"/><text x="93.1531%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="92.9031%" y="661" width="0.0157%" height="15" fill="rgb(206,46,49)"/><text x="93.1531%" y="671.50"></text></g><g><title>rvfm_main`wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (4 samples, 0.06%)</title><rect x="92.8874%" y="789" width="0.0628%" height="15" fill="rgb(245,128,24)"/><text x="93.1374%" y="799.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (2 samples, 0.03%)</title><rect x="92.9188%" y="773" width="0.0314%" height="15" fill="rgb(219,177,34)"/><text x="93.1688%" y="783.50"></text></g><g><title>rvfm_main`&lt;arrayvec::ArrayVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="92.9345%" y="757" width="0.0157%" height="15" fill="rgb(218,60,48)"/><text x="93.1845%" y="767.50"></text></g><g><title>rvfm_main`smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.02%)</title><rect x="92.9345%" y="741" width="0.0157%" height="15" fill="rgb(221,11,5)"/><text x="93.1845%" y="751.50"></text></g><g><title>rvfm_main`wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate_for_thread_id (1 samples, 0.02%)</title><rect x="92.9502%" y="789" width="0.0157%" height="15" fill="rgb(220,148,13)"/><text x="93.2002%" y="799.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.02%)</title><rect x="92.9659%" y="789" width="0.0157%" height="15" fill="rgb(210,16,3)"/><text x="93.2159%" y="799.50"></text></g><g><title>rvfm_main`&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="92.9973%" y="773" width="0.0157%" height="15" fill="rgb(236,80,2)"/><text x="93.2473%" y="783.50"></text></g><g><title>rvfm_main`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="93.0130%" y="773" width="0.0157%" height="15" fill="rgb(239,129,19)"/><text x="93.2630%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="93.0130%" y="757" width="0.0157%" height="15" fill="rgb(220,106,35)"/><text x="93.2630%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="93.0130%" y="741" width="0.0157%" height="15" fill="rgb(252,139,45)"/><text x="93.2630%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="93.0130%" y="725" width="0.0157%" height="15" fill="rgb(229,8,36)"/><text x="93.2630%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="93.0130%" y="709" width="0.0157%" height="15" fill="rgb(230,126,33)"/><text x="93.2630%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="93.0130%" y="693" width="0.0157%" height="15" fill="rgb(239,140,21)"/><text x="93.2630%" y="703.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (4 samples, 0.06%)</title><rect x="92.9816%" y="789" width="0.0628%" height="15" fill="rgb(254,104,9)"/><text x="93.2316%" y="799.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.02%)</title><rect x="93.0287%" y="773" width="0.0157%" height="15" fill="rgb(239,52,14)"/><text x="93.2787%" y="783.50"></text></g><g><title>rvfm_main`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="93.0758%" y="773" width="0.0157%" height="15" fill="rgb(208,227,44)"/><text x="93.3258%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="93.1072%" y="709" width="0.0157%" height="15" fill="rgb(246,18,19)"/><text x="93.3572%" y="719.50"></text></g><g><title>rvfm_main`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (130 samples, 2.04%)</title><rect x="91.0975%" y="805" width="2.0411%" height="15" fill="rgb(235,228,25)"/><text x="91.3475%" y="815.50">r..</text></g><g><title>rvfm_main`wgpu_core::track::TrackerSet::merge_extend (6 samples, 0.09%)</title><rect x="93.0444%" y="789" width="0.0942%" height="15" fill="rgb(240,156,20)"/><text x="93.2944%" y="799.50"></text></g><g><title>rvfm_main`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (3 samples, 0.05%)</title><rect x="93.0915%" y="773" width="0.0471%" height="15" fill="rgb(224,8,20)"/><text x="93.3415%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="93.1072%" y="757" width="0.0314%" height="15" fill="rgb(214,12,52)"/><text x="93.3572%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.03%)</title><rect x="93.1072%" y="741" width="0.0314%" height="15" fill="rgb(211,220,47)"/><text x="93.3572%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="93.1072%" y="725" width="0.0314%" height="15" fill="rgb(250,173,5)"/><text x="93.3572%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="93.1229%" y="709" width="0.0157%" height="15" fill="rgb(250,125,52)"/><text x="93.3729%" y="719.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (133 samples, 2.09%)</title><rect x="91.0661%" y="821" width="2.0882%" height="15" fill="rgb(209,133,18)"/><text x="91.3161%" y="831.50">r..</text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (1 samples, 0.02%)</title><rect x="93.1386%" y="805" width="0.0157%" height="15" fill="rgb(216,173,22)"/><text x="93.3886%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.03%)</title><rect x="93.1543%" y="789" width="0.0314%" height="15" fill="rgb(205,3,22)"/><text x="93.4043%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.03%)</title><rect x="93.1543%" y="773" width="0.0314%" height="15" fill="rgb(248,22,20)"/><text x="93.4043%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="93.1543%" y="757" width="0.0314%" height="15" fill="rgb(233,6,29)"/><text x="93.4043%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="93.1543%" y="741" width="0.0314%" height="15" fill="rgb(240,22,54)"/><text x="93.4043%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="93.1700%" y="725" width="0.0157%" height="15" fill="rgb(231,133,32)"/><text x="93.4200%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="93.1700%" y="709" width="0.0157%" height="15" fill="rgb(248,193,4)"/><text x="93.4200%" y="719.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="93.1857%" y="789" width="0.0157%" height="15" fill="rgb(211,178,46)"/><text x="93.4357%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="93.1857%" y="773" width="0.0157%" height="15" fill="rgb(224,5,42)"/><text x="93.4357%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="93.1857%" y="757" width="0.0157%" height="15" fill="rgb(239,176,25)"/><text x="93.4357%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="93.1857%" y="741" width="0.0157%" height="15" fill="rgb(245,187,50)"/><text x="93.4357%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="93.1857%" y="725" width="0.0157%" height="15" fill="rgb(248,24,15)"/><text x="93.4357%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="93.1857%" y="709" width="0.0157%" height="15" fill="rgb(205,166,13)"/><text x="93.4357%" y="719.50"></text></g><g><title>rvfm_main`&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::change (2 samples, 0.03%)</title><rect x="93.2171%" y="773" width="0.0314%" height="15" fill="rgb(208,114,23)"/><text x="93.4671%" y="783.50"></text></g><g><title>rvfm_main`&lt;alloc::vec::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="93.2485%" y="757" width="0.0157%" height="15" fill="rgb(239,127,18)"/><text x="93.4985%" y="767.50"></text></g><g><title>rvfm_main`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.03%)</title><rect x="93.2642%" y="741" width="0.0314%" height="15" fill="rgb(219,154,28)"/><text x="93.5142%" y="751.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::native::DescriptorPool as gfx_hal::pso::descriptor::DescriptorPool&lt;gfx_backend_metal::Backend&gt;&gt;::allocate_set (3 samples, 0.05%)</title><rect x="93.2957%" y="741" width="0.0471%" height="15" fill="rgb(225,157,23)"/><text x="93.5457%" y="751.50"></text></g><g><title>rvfm_main`gfx_descriptor::allocator::Allocation&lt;B&gt;::grow (6 samples, 0.09%)</title><rect x="93.2642%" y="757" width="0.0942%" height="15" fill="rgb(219,8,6)"/><text x="93.5142%" y="767.50"></text></g><g><title>rvfm_main`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="93.3428%" y="741" width="0.0157%" height="15" fill="rgb(212,47,6)"/><text x="93.5928%" y="751.50"></text></g><g><title>rvfm_main`gfx_descriptor::allocator::DescriptorAllocator&lt;B&gt;::allocate (8 samples, 0.13%)</title><rect x="93.2485%" y="773" width="0.1256%" height="15" fill="rgb(224,190,4)"/><text x="93.4985%" y="783.50"></text></g><g><title>rvfm_main`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="93.3585%" y="757" width="0.0157%" height="15" fill="rgb(239,183,29)"/><text x="93.6085%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (4 samples, 0.06%)</title><rect x="93.4056%" y="741" width="0.0628%" height="15" fill="rgb(213,57,7)"/><text x="93.6556%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (4 samples, 0.06%)</title><rect x="93.4684%" y="741" width="0.0628%" height="15" fill="rgb(216,148,1)"/><text x="93.7184%" y="751.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (12 samples, 0.19%)</title><rect x="93.3742%" y="773" width="0.1884%" height="15" fill="rgb(236,182,29)"/><text x="93.6242%" y="783.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::wait_for_readers (11 samples, 0.17%)</title><rect x="93.3899%" y="757" width="0.1727%" height="15" fill="rgb(244,120,48)"/><text x="93.6399%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (2 samples, 0.03%)</title><rect x="93.5312%" y="741" width="0.0314%" height="15" fill="rgb(206,71,34)"/><text x="93.7812%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_testcancel (1 samples, 0.02%)</title><rect x="93.5469%" y="725" width="0.0157%" height="15" fill="rgb(242,32,6)"/><text x="93.7969%" y="735.50"></text></g><g><title>rvfm_main`&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="93.5626%" y="757" width="0.0157%" height="15" fill="rgb(241,35,3)"/><text x="93.8126%" y="767.50"></text></g><g><title>rvfm_main`wgpu::Device::create_bind_group (28 samples, 0.44%)</title><rect x="93.1543%" y="821" width="0.4396%" height="15" fill="rgb(222,62,19)"/><text x="93.4043%" y="831.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (28 samples, 0.44%)</title><rect x="93.1543%" y="805" width="0.4396%" height="15" fill="rgb(223,110,41)"/><text x="93.4043%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (25 samples, 0.39%)</title><rect x="93.2014%" y="789" width="0.3925%" height="15" fill="rgb(208,224,4)"/><text x="93.4514%" y="799.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (2 samples, 0.03%)</title><rect x="93.5626%" y="773" width="0.0314%" height="15" fill="rgb(241,137,19)"/><text x="93.8126%" y="783.50"></text></g><g><title>rvfm_main`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="93.5783%" y="757" width="0.0157%" height="15" fill="rgb(244,24,17)"/><text x="93.8283%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="93.6254%" y="773" width="0.0314%" height="15" fill="rgb(245,178,49)"/><text x="93.8754%" y="783.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelDevice newSamplerStateWithDescriptor:] (1 samples, 0.02%)</title><rect x="93.6568%" y="757" width="0.0157%" height="15" fill="rgb(219,160,38)"/><text x="93.9068%" y="767.50"></text></g><g><title>Metal`-[MTLSamplerDescriptorInternal dealloc] (2 samples, 0.03%)</title><rect x="93.6725%" y="757" width="0.0314%" height="15" fill="rgb(228,137,14)"/><text x="93.9225%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="93.6725%" y="741" width="0.0314%" height="15" fill="rgb(237,134,11)"/><text x="93.9225%" y="751.50"></text></g><g><title>Metal`-[MTLSamplerDescriptorInternal init] (1 samples, 0.02%)</title><rect x="93.7039%" y="757" width="0.0157%" height="15" fill="rgb(211,126,44)"/><text x="93.9539%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="93.7196%" y="757" width="0.0157%" height="15" fill="rgb(226,171,33)"/><text x="93.9696%" y="767.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGSampler initializeSamplerState:] (1 samples, 0.02%)</title><rect x="93.7353%" y="725" width="0.0157%" height="15" fill="rgb(253,99,13)"/><text x="93.9853%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGSampler initWithDevice:samplerDescriptor:] (2 samples, 0.03%)</title><rect x="93.7353%" y="741" width="0.0314%" height="15" fill="rgb(244,48,7)"/><text x="93.9853%" y="751.50"></text></g><g><title>Metal`-[MTLSamplerDescriptorInternal rAddressMode] (1 samples, 0.02%)</title><rect x="93.7510%" y="725" width="0.0157%" height="15" fill="rgb(244,217,54)"/><text x="94.0010%" y="735.50"></text></g><g><title>rvfm_main`metal::device::DeviceRef::new_sampler (3 samples, 0.05%)</title><rect x="93.7353%" y="757" width="0.0471%" height="15" fill="rgb(224,15,18)"/><text x="93.9853%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (1 samples, 0.02%)</title><rect x="93.7667%" y="741" width="0.0157%" height="15" fill="rgb(244,99,12)"/><text x="94.0167%" y="751.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::create_sampler (9 samples, 0.14%)</title><rect x="93.6568%" y="773" width="0.1413%" height="15" fill="rgb(233,226,8)"/><text x="93.9068%" y="783.50"></text></g><g><title>rvfm_main`metal::sampler::SamplerDescriptor::new (1 samples, 0.02%)</title><rect x="93.7824%" y="757" width="0.0157%" height="15" fill="rgb(229,211,3)"/><text x="94.0324%" y="767.50"></text></g><g><title>libobjc.A.dylib`+[NSObject new] (1 samples, 0.02%)</title><rect x="93.7824%" y="741" width="0.0157%" height="15" fill="rgb(216,140,21)"/><text x="94.0324%" y="751.50"></text></g><g><title>Metal`+[MTLSamplerDescriptor allocWithZone:] (1 samples, 0.02%)</title><rect x="93.7824%" y="725" width="0.0157%" height="15" fill="rgb(234,122,30)"/><text x="94.0324%" y="735.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="93.7824%" y="709" width="0.0157%" height="15" fill="rgb(236,25,46)"/><text x="94.0324%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="93.7824%" y="693" width="0.0157%" height="15" fill="rgb(217,52,54)"/><text x="94.0324%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="93.7824%" y="677" width="0.0157%" height="15" fill="rgb(222,29,26)"/><text x="94.0324%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="93.7824%" y="661" width="0.0157%" height="15" fill="rgb(216,177,29)"/><text x="94.0324%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="93.7824%" y="645" width="0.0157%" height="15" fill="rgb(247,136,51)"/><text x="94.0324%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="93.7824%" y="629" width="0.0157%" height="15" fill="rgb(231,47,47)"/><text x="94.0324%" y="639.50"></text></g><g><title>rvfm_main`metal::sampler::SamplerDescriptor::new (1 samples, 0.02%)</title><rect x="93.7981%" y="773" width="0.0157%" height="15" fill="rgb(211,192,36)"/><text x="94.0481%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (3 samples, 0.05%)</title><rect x="93.8295%" y="757" width="0.0471%" height="15" fill="rgb(229,156,32)"/><text x="94.0795%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (6 samples, 0.09%)</title><rect x="93.8766%" y="757" width="0.0942%" height="15" fill="rgb(248,213,20)"/><text x="94.1266%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (2 samples, 0.03%)</title><rect x="93.9708%" y="757" width="0.0314%" height="15" fill="rgb(217,64,7)"/><text x="94.2208%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.03%)</title><rect x="93.9708%" y="741" width="0.0314%" height="15" fill="rgb(232,142,8)"/><text x="94.2208%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.03%)</title><rect x="93.9708%" y="725" width="0.0314%" height="15" fill="rgb(224,92,44)"/><text x="94.2208%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="94.0022%" y="757" width="0.0157%" height="15" fill="rgb(214,169,17)"/><text x="94.2522%" y="767.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (14 samples, 0.22%)</title><rect x="93.8138%" y="773" width="0.2198%" height="15" fill="rgb(210,59,37)"/><text x="94.0638%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`sched_yield (1 samples, 0.02%)</title><rect x="94.0179%" y="757" width="0.0157%" height="15" fill="rgb(214,116,48)"/><text x="94.2679%" y="767.50"></text></g><g><title>rvfm_main`wgpu::Device::create_sampler (29 samples, 0.46%)</title><rect x="93.5940%" y="821" width="0.4553%" height="15" fill="rgb(244,191,6)"/><text x="93.8440%" y="831.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_sampler (29 samples, 0.46%)</title><rect x="93.5940%" y="805" width="0.4553%" height="15" fill="rgb(241,50,52)"/><text x="93.8440%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_sampler (29 samples, 0.46%)</title><rect x="93.5940%" y="789" width="0.4553%" height="15" fill="rgb(236,75,39)"/><text x="93.8440%" y="799.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::init (1 samples, 0.02%)</title><rect x="94.0336%" y="773" width="0.0157%" height="15" fill="rgb(236,99,0)"/><text x="94.2836%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (6 samples, 0.09%)</title><rect x="94.0807%" y="757" width="0.0942%" height="15" fill="rgb(207,202,15)"/><text x="94.3307%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (8 samples, 0.13%)</title><rect x="94.1749%" y="757" width="0.1256%" height="15" fill="rgb(233,207,14)"/><text x="94.4249%" y="767.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (15 samples, 0.24%)</title><rect x="94.0807%" y="773" width="0.2355%" height="15" fill="rgb(226,27,51)"/><text x="94.3307%" y="783.50"></text></g><g><title>rvfm_main`std::thread::yield_now (1 samples, 0.02%)</title><rect x="94.3005%" y="757" width="0.0157%" height="15" fill="rgb(206,104,42)"/><text x="94.5505%" y="767.50"></text></g><g><title>rvfm_main`std::thread::yield_now (1 samples, 0.02%)</title><rect x="94.3162%" y="773" width="0.0157%" height="15" fill="rgb(212,225,4)"/><text x="94.5662%" y="783.50"></text></g><g><title>rvfm_main`wgpu::Texture::create_view (19 samples, 0.30%)</title><rect x="94.0493%" y="821" width="0.2983%" height="15" fill="rgb(233,96,42)"/><text x="94.2993%" y="831.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (19 samples, 0.30%)</title><rect x="94.0493%" y="805" width="0.2983%" height="15" fill="rgb(229,21,32)"/><text x="94.2993%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (19 samples, 0.30%)</title><rect x="94.0493%" y="789" width="0.2983%" height="15" fill="rgb(226,216,24)"/><text x="94.2993%" y="799.50"></text></g><g><title>rvfm_main`wgpu_core::hub::Storage&lt;T,I&gt;::insert (1 samples, 0.02%)</title><rect x="94.3319%" y="773" width="0.0157%" height="15" fill="rgb(221,163,17)"/><text x="94.5819%" y="783.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (2 samples, 0.03%)</title><rect x="94.3633%" y="805" width="0.0314%" height="15" fill="rgb(216,216,42)"/><text x="94.6133%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 0.03%)</title><rect x="94.3633%" y="789" width="0.0314%" height="15" fill="rgb(240,118,7)"/><text x="94.6133%" y="799.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::bind_group_drop (4 samples, 0.06%)</title><rect x="94.3476%" y="821" width="0.0628%" height="15" fill="rgb(221,67,37)"/><text x="94.5976%" y="831.50"></text></g><g><title>rvfm_main`tracing::span::Span::enter (1 samples, 0.02%)</title><rect x="94.3947%" y="805" width="0.0157%" height="15" fill="rgb(241,32,44)"/><text x="94.6447%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::sampler_drop (1 samples, 0.02%)</title><rect x="94.4104%" y="821" width="0.0157%" height="15" fill="rgb(235,204,43)"/><text x="94.6604%" y="831.50"></text></g><g><title>rvfm_main`rvfm_main::fb_present_renderer::FramebufferPresentRenderer::render (217 samples, 3.41%)</title><rect x="91.0347%" y="837" width="3.4071%" height="15" fill="rgb(213,116,10)"/><text x="91.2847%" y="847.50">rvf..</text></g><g><title>rvfm_main`wgpu_render_pass_set_bind_group (1 samples, 0.02%)</title><rect x="94.4261%" y="821" width="0.0157%" height="15" fill="rgb(239,15,48)"/><text x="94.6761%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="94.4261%" y="805" width="0.0157%" height="15" fill="rgb(207,123,36)"/><text x="94.6761%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::command::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_finish (2 samples, 0.03%)</title><rect x="94.4418%" y="805" width="0.0314%" height="15" fill="rgb(209,103,30)"/><text x="94.6918%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::remove (2 samples, 0.03%)</title><rect x="94.4418%" y="789" width="0.0314%" height="15" fill="rgb(238,100,19)"/><text x="94.6918%" y="799.50"></text></g><g><title>rvfm_main`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.02%)</title><rect x="94.4575%" y="773" width="0.0157%" height="15" fill="rgb(244,30,14)"/><text x="94.7075%" y="783.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_finish (3 samples, 0.05%)</title><rect x="94.4418%" y="821" width="0.0471%" height="15" fill="rgb(249,174,6)"/><text x="94.6918%" y="831.50"></text></g><g><title>rvfm_main`wgpu_core::track::ResourceTracker&lt;S&gt;::remove (1 samples, 0.02%)</title><rect x="94.4732%" y="805" width="0.0157%" height="15" fill="rgb(235,213,41)"/><text x="94.7232%" y="815.50"></text></g><g><title>rvfm_main`wgpu::CommandEncoder::finish (4 samples, 0.06%)</title><rect x="94.4418%" y="837" width="0.0628%" height="15" fill="rgb(213,118,6)"/><text x="94.6918%" y="847.50"></text></g><g><title>rvfm_main`wgpu_core::command::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_finish (1 samples, 0.02%)</title><rect x="94.4889%" y="821" width="0.0157%" height="15" fill="rgb(235,44,51)"/><text x="94.7389%" y="831.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::set_command_buffer_name (1 samples, 0.02%)</title><rect x="94.5046%" y="805" width="0.0157%" height="15" fill="rgb(217,9,53)"/><text x="94.7546%" y="815.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer setLabel:] (1 samples, 0.02%)</title><rect x="94.5203%" y="773" width="0.0157%" height="15" fill="rgb(237,172,34)"/><text x="94.7703%" y="783.50"></text></g><g><title>CoreFoundation`_CFNonObjCStringCreateCopy (1 samples, 0.02%)</title><rect x="94.5203%" y="757" width="0.0157%" height="15" fill="rgb(206,206,11)"/><text x="94.7703%" y="767.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::reset (1 samples, 0.02%)</title><rect x="94.5360%" y="773" width="0.0157%" height="15" fill="rgb(214,149,29)"/><text x="94.7860%" y="783.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::CommandBufferInner::reset (1 samples, 0.02%)</title><rect x="94.5360%" y="757" width="0.0157%" height="15" fill="rgb(208,123,3)"/><text x="94.7860%" y="767.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAutorelease (1 samples, 0.02%)</title><rect x="94.5517%" y="757" width="0.0157%" height="15" fill="rgb(229,126,4)"/><text x="94.8017%" y="767.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (1 samples, 0.02%)</title><rect x="94.5674%" y="741" width="0.0157%" height="15" fill="rgb(222,92,36)"/><text x="94.8174%" y="751.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 0.02%)</title><rect x="94.5674%" y="725" width="0.0157%" height="15" fill="rgb(216,39,41)"/><text x="94.8174%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="94.5674%" y="709" width="0.0157%" height="15" fill="rgb(253,127,28)"/><text x="94.8174%" y="719.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (3 samples, 0.05%)</title><rect x="94.5517%" y="773" width="0.0471%" height="15" fill="rgb(249,152,51)"/><text x="94.8017%" y="783.50"></text></g><g><title>rvfm_main`metal::nsstring_from_str (2 samples, 0.03%)</title><rect x="94.5674%" y="757" width="0.0314%" height="15" fill="rgb(209,123,42)"/><text x="94.8174%" y="767.50"></text></g><g><title>Foundation`+[NSString allocWithZone:] (1 samples, 0.02%)</title><rect x="94.5831%" y="741" width="0.0157%" height="15" fill="rgb(241,118,22)"/><text x="94.8331%" y="751.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (1 samples, 0.02%)</title><rect x="94.5988%" y="725" width="0.0157%" height="15" fill="rgb(208,25,7)"/><text x="94.8488%" y="735.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStoragePoolCreateStorage (1 samples, 0.02%)</title><rect x="94.5988%" y="709" width="0.0157%" height="15" fill="rgb(243,144,39)"/><text x="94.8488%" y="719.50"></text></g><g><title>Metal`-[MTLIOAccelDevice deviceRef] (1 samples, 0.02%)</title><rect x="94.6145%" y="725" width="0.0157%" height="15" fill="rgb(250,50,5)"/><text x="94.8645%" y="735.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.05%)</title><rect x="94.5988%" y="741" width="0.0471%" height="15" fill="rgb(207,67,11)"/><text x="94.8488%" y="751.50"></text></g><g><title>Metal`DYLD-STUB$$objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="94.6302%" y="725" width="0.0157%" height="15" fill="rgb(245,204,40)"/><text x="94.8802%" y="735.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::begin (9 samples, 0.14%)</title><rect x="94.5203%" y="789" width="0.1413%" height="15" fill="rgb(238,228,24)"/><text x="94.7703%" y="799.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (4 samples, 0.06%)</title><rect x="94.5988%" y="773" width="0.0628%" height="15" fill="rgb(217,116,22)"/><text x="94.8488%" y="783.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (4 samples, 0.06%)</title><rect x="94.5988%" y="757" width="0.0628%" height="15" fill="rgb(234,98,12)"/><text x="94.8488%" y="767.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (1 samples, 0.02%)</title><rect x="94.6459%" y="741" width="0.0157%" height="15" fill="rgb(242,170,50)"/><text x="94.8959%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="94.6459%" y="725" width="0.0157%" height="15" fill="rgb(235,7,5)"/><text x="94.8959%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="94.6459%" y="709" width="0.0157%" height="15" fill="rgb(241,114,28)"/><text x="94.8959%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="94.6459%" y="693" width="0.0157%" height="15" fill="rgb(246,112,42)"/><text x="94.8959%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="94.6459%" y="677" width="0.0157%" height="15" fill="rgb(248,228,14)"/><text x="94.8959%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="94.6459%" y="661" width="0.0157%" height="15" fill="rgb(208,133,18)"/><text x="94.8959%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="94.6616%" y="773" width="0.0314%" height="15" fill="rgb(207,35,49)"/><text x="94.9116%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="94.6773%" y="757" width="0.0157%" height="15" fill="rgb(205,68,36)"/><text x="94.9273%" y="767.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::set_command_buffer_name (3 samples, 0.05%)</title><rect x="94.6616%" y="789" width="0.0471%" height="15" fill="rgb(245,62,40)"/><text x="94.9116%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="94.6930%" y="773" width="0.0157%" height="15" fill="rgb(228,27,24)"/><text x="94.9430%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="94.6930%" y="757" width="0.0157%" height="15" fill="rgb(253,19,12)"/><text x="94.9430%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="94.6930%" y="741" width="0.0157%" height="15" fill="rgb(232,28,20)"/><text x="94.9430%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="94.6930%" y="725" width="0.0157%" height="15" fill="rgb(218,35,51)"/><text x="94.9430%" y="735.50"></text></g><g><title>rvfm_main`metal::commandbuffer::CommandBufferRef::set_label (1 samples, 0.02%)</title><rect x="94.7087%" y="789" width="0.0157%" height="15" fill="rgb(212,90,40)"/><text x="94.9587%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.03%)</title><rect x="94.7401%" y="773" width="0.0314%" height="15" fill="rgb(220,172,12)"/><text x="94.9901%" y="783.50"></text></g><g><title>rvfm_main`wgpu::Device::create_command_encoder (19 samples, 0.30%)</title><rect x="94.5046%" y="837" width="0.2983%" height="15" fill="rgb(226,159,20)"/><text x="94.7546%" y="847.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (19 samples, 0.30%)</title><rect x="94.5046%" y="821" width="0.2983%" height="15" fill="rgb(234,205,16)"/><text x="94.7546%" y="831.50"></text></g><g><title>rvfm_main`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (18 samples, 0.28%)</title><rect x="94.5203%" y="805" width="0.2826%" height="15" fill="rgb(207,9,39)"/><text x="94.7703%" y="815.50"></text></g><g><title>rvfm_main`wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate (5 samples, 0.08%)</title><rect x="94.7244%" y="789" width="0.0785%" height="15" fill="rgb(249,143,15)"/><text x="94.9744%" y="799.50"></text></g><g><title>rvfm_main`std::sys_common::thread_info::ThreadInfo::with::_{{closure}} (2 samples, 0.03%)</title><rect x="94.7715%" y="773" width="0.0314%" height="15" fill="rgb(253,133,29)"/><text x="95.0215%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="94.8187%" y="789" width="0.0157%" height="15" fill="rgb(221,187,0)"/><text x="95.0687%" y="799.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:] (1 samples, 0.02%)</title><rect x="94.9129%" y="757" width="0.0157%" height="15" fill="rgb(205,204,26)"/><text x="95.1629%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (1 samples, 0.02%)</title><rect x="94.9129%" y="741" width="0.0157%" height="15" fill="rgb(224,68,54)"/><text x="95.1629%" y="751.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (1 samples, 0.02%)</title><rect x="94.9129%" y="725" width="0.0157%" height="15" fill="rgb(209,67,4)"/><text x="95.1629%" y="735.50"></text></g><g><title>IOSurface`IOSurfaceGetDetachModeCode (1 samples, 0.02%)</title><rect x="94.9286%" y="741" width="0.0157%" height="15" fill="rgb(228,229,18)"/><text x="95.1786%" y="751.50"></text></g><g><title>IOSurface`IOSurfaceClientGetDetachModeCode (1 samples, 0.02%)</title><rect x="94.9443%" y="725" width="0.0157%" height="15" fill="rgb(231,89,13)"/><text x="95.1943%" y="735.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (4 samples, 0.06%)</title><rect x="94.9443%" y="741" width="0.0628%" height="15" fill="rgb(210,182,18)"/><text x="95.1943%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.05%)</title><rect x="94.9600%" y="725" width="0.0471%" height="15" fill="rgb(240,105,2)"/><text x="95.2100%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.05%)</title><rect x="94.9600%" y="709" width="0.0471%" height="15" fill="rgb(207,170,50)"/><text x="95.2100%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.03%)</title><rect x="94.9757%" y="693" width="0.0314%" height="15" fill="rgb(232,133,24)"/><text x="95.2257%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.03%)</title><rect x="94.9757%" y="677" width="0.0314%" height="15" fill="rgb(235,166,27)"/><text x="95.2257%" y="687.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.02%)</title><rect x="95.0228%" y="693" width="0.0157%" height="15" fill="rgb(209,19,13)"/><text x="95.2728%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="95.0228%" y="677" width="0.0157%" height="15" fill="rgb(226,79,39)"/><text x="95.2728%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.02%)</title><rect x="95.0228%" y="661" width="0.0157%" height="15" fill="rgb(222,163,10)"/><text x="95.2728%" y="671.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (1 samples, 0.02%)</title><rect x="95.0385%" y="677" width="0.0157%" height="15" fill="rgb(214,44,19)"/><text x="95.2885%" y="687.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.02%)</title><rect x="95.0385%" y="661" width="0.0157%" height="15" fill="rgb(210,217,13)"/><text x="95.2885%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="95.0385%" y="645" width="0.0157%" height="15" fill="rgb(237,61,54)"/><text x="95.2885%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="95.0385%" y="629" width="0.0157%" height="15" fill="rgb(226,184,24)"/><text x="95.2885%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="95.0385%" y="613" width="0.0157%" height="15" fill="rgb(223,226,4)"/><text x="95.2885%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="95.0385%" y="597" width="0.0157%" height="15" fill="rgb(210,26,41)"/><text x="95.2885%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="95.0385%" y="581" width="0.0157%" height="15" fill="rgb(220,221,6)"/><text x="95.2885%" y="591.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (2 samples, 0.03%)</title><rect x="95.0385%" y="693" width="0.0314%" height="15" fill="rgb(225,89,49)"/><text x="95.2885%" y="703.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.02%)</title><rect x="95.0542%" y="677" width="0.0157%" height="15" fill="rgb(218,70,45)"/><text x="95.3042%" y="687.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (4 samples, 0.06%)</title><rect x="95.0228%" y="709" width="0.0628%" height="15" fill="rgb(238,166,21)"/><text x="95.2728%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (1 samples, 0.02%)</title><rect x="95.0699%" y="693" width="0.0157%" height="15" fill="rgb(224,141,44)"/><text x="95.3199%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="95.0856%" y="709" width="0.0157%" height="15" fill="rgb(230,12,49)"/><text x="95.3356%" y="719.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (12 samples, 0.19%)</title><rect x="94.9286%" y="757" width="0.1884%" height="15" fill="rgb(212,174,12)"/><text x="95.1786%" y="767.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (7 samples, 0.11%)</title><rect x="95.0071%" y="741" width="0.1099%" height="15" fill="rgb(246,67,9)"/><text x="95.2571%" y="751.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (7 samples, 0.11%)</title><rect x="95.0071%" y="725" width="0.1099%" height="15" fill="rgb(239,35,23)"/><text x="95.2571%" y="735.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (1 samples, 0.02%)</title><rect x="95.1013%" y="709" width="0.0157%" height="15" fill="rgb(211,167,0)"/><text x="95.3513%" y="719.50"></text></g><g><title>QuartzCore`CATimeWithHostTime (1 samples, 0.02%)</title><rect x="95.1170%" y="757" width="0.0157%" height="15" fill="rgb(225,119,45)"/><text x="95.3670%" y="767.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (26 samples, 0.41%)</title><rect x="94.8344%" y="773" width="0.4082%" height="15" fill="rgb(210,162,6)"/><text x="95.0844%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (7 samples, 0.11%)</title><rect x="95.1327%" y="757" width="0.1099%" height="15" fill="rgb(208,118,35)"/><text x="95.3827%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (7 samples, 0.11%)</title><rect x="95.1327%" y="741" width="0.1099%" height="15" fill="rgb(239,4,53)"/><text x="95.3827%" y="751.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (2 samples, 0.03%)</title><rect x="95.2426%" y="773" width="0.0314%" height="15" fill="rgb(213,130,21)"/><text x="95.4926%" y="783.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_metal::Backend&gt;&gt;::acquire_image (30 samples, 0.47%)</title><rect x="94.8187%" y="805" width="0.4710%" height="15" fill="rgb(235,148,0)"/><text x="95.0687%" y="815.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (29 samples, 0.46%)</title><rect x="94.8344%" y="789" width="0.4553%" height="15" fill="rgb(244,224,18)"/><text x="95.0844%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`pthread_setspecific (1 samples, 0.02%)</title><rect x="95.2740%" y="773" width="0.0157%" height="15" fill="rgb(211,214,4)"/><text x="95.5240%" y="783.50"></text></g><g><title>rvfm_main`winit::platform_impl::platform::app_state::AppState::cleared (407 samples, 6.39%)</title><rect x="89.0093%" y="917" width="6.3903%" height="15" fill="rgb(206,119,25)"/><text x="89.2593%" y="927.50">rvfm_mai..</text></g><g><title>rvfm_main`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (395 samples, 6.20%)</title><rect x="89.1977%" y="901" width="6.2019%" height="15" fill="rgb(243,93,47)"/><text x="89.4477%" y="911.50">rvfm_mai..</text></g><g><title>rvfm_main`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (394 samples, 6.19%)</title><rect x="89.2134%" y="885" width="6.1862%" height="15" fill="rgb(224,194,6)"/><text x="89.4634%" y="895.50">rvfm_mai..</text></g><g><title>rvfm_main`rvfm_main::application_gui::ApplicationGUI::run::_{{closure}} (394 samples, 6.19%)</title><rect x="89.2134%" y="869" width="6.1862%" height="15" fill="rgb(243,229,6)"/><text x="89.4634%" y="879.50">rvfm_mai..</text></g><g><title>rvfm_main`rvfm_main::gpu::GpuWindowEventSink::render_event (393 samples, 6.17%)</title><rect x="89.2291%" y="853" width="6.1705%" height="15" fill="rgb(207,23,50)"/><text x="89.4791%" y="863.50">rvfm_mai..</text></g><g><title>rvfm_main`wgpu::SwapChain::get_current_frame (38 samples, 0.60%)</title><rect x="94.8030%" y="837" width="0.5966%" height="15" fill="rgb(253,192,32)"/><text x="95.0530%" y="847.50"></text></g><g><title>rvfm_main`wgpu_core::swap_chain::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_get_current_texture_view (37 samples, 0.58%)</title><rect x="94.8187%" y="821" width="0.5809%" height="15" fill="rgb(213,21,6)"/><text x="95.0687%" y="831.50"></text></g><g><title>rvfm_main`parking_lot::raw_rwlock::RawRwLock::unlock_shared_slow (7 samples, 0.11%)</title><rect x="95.2897%" y="805" width="0.1099%" height="15" fill="rgb(243,151,13)"/><text x="95.5397%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (6 samples, 0.09%)</title><rect x="95.3054%" y="789" width="0.0942%" height="15" fill="rgb(233,165,41)"/><text x="95.5554%" y="799.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (444 samples, 6.97%)</title><rect x="88.4440%" y="933" width="6.9713%" height="15" fill="rgb(246,176,45)"/><text x="88.6940%" y="943.50">CoreFound..</text></g><g><title>rvfm_main`winit::platform_impl::platform::app_state::AppState::wakeup (1 samples, 0.02%)</title><rect x="95.3996%" y="917" width="0.0157%" height="15" fill="rgb(217,170,52)"/><text x="95.6496%" y="927.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="95.3996%" y="901" width="0.0157%" height="15" fill="rgb(214,203,54)"/><text x="95.6496%" y="911.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="95.4153%" y="933" width="0.0157%" height="15" fill="rgb(248,215,49)"/><text x="95.6653%" y="943.50"></text></g><g><title>rvfm_main`winit::platform_impl::platform::app_state::AppState::cleared (1 samples, 0.02%)</title><rect x="95.4310%" y="933" width="0.0157%" height="15" fill="rgb(208,46,10)"/><text x="95.6810%" y="943.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (451 samples, 7.08%)</title><rect x="88.3812%" y="949" width="7.0812%" height="15" fill="rgb(254,5,31)"/><text x="88.6312%" y="959.50">CoreFounda..</text></g><g><title>rvfm_main`winit::platform_impl::platform::app_state::AppState::wakeup (1 samples, 0.02%)</title><rect x="95.4467%" y="933" width="0.0157%" height="15" fill="rgb(222,104,33)"/><text x="95.6967%" y="943.50"></text></g><g><title>CoreFoundation`CFBasicHashGetBucket (1 samples, 0.02%)</title><rect x="95.4624%" y="901" width="0.0157%" height="15" fill="rgb(248,49,16)"/><text x="95.7124%" y="911.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (3 samples, 0.05%)</title><rect x="95.4624%" y="949" width="0.0471%" height="15" fill="rgb(232,198,41)"/><text x="95.7124%" y="959.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (3 samples, 0.05%)</title><rect x="95.4624%" y="933" width="0.0471%" height="15" fill="rgb(214,125,3)"/><text x="95.7124%" y="943.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (3 samples, 0.05%)</title><rect x="95.4624%" y="917" width="0.0471%" height="15" fill="rgb(229,220,28)"/><text x="95.7124%" y="927.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (2 samples, 0.03%)</title><rect x="95.4781%" y="901" width="0.0314%" height="15" fill="rgb(222,64,37)"/><text x="95.7281%" y="911.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (2 samples, 0.03%)</title><rect x="95.4781%" y="885" width="0.0314%" height="15" fill="rgb(249,184,13)"/><text x="95.7281%" y="895.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (4 samples, 0.06%)</title><rect x="95.5095%" y="933" width="0.0628%" height="15" fill="rgb(252,176,6)"/><text x="95.7595%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.05%)</title><rect x="95.5252%" y="917" width="0.0471%" height="15" fill="rgb(228,153,7)"/><text x="95.7752%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (1 samples, 0.02%)</title><rect x="95.5723%" y="933" width="0.0157%" height="15" fill="rgb(242,193,5)"/><text x="95.8223%" y="943.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (1 samples, 0.02%)</title><rect x="95.5880%" y="933" width="0.0157%" height="15" fill="rgb(232,140,9)"/><text x="95.8380%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.02%)</title><rect x="95.5880%" y="917" width="0.0157%" height="15" fill="rgb(213,222,16)"/><text x="95.8380%" y="927.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerInvalidate (1 samples, 0.02%)</title><rect x="96.9854%" y="917" width="0.0157%" height="15" fill="rgb(222,75,50)"/><text x="97.2354%" y="927.50"></text></g><g><title>CoreFoundation`CFRunLoopRemoveTimer (1 samples, 0.02%)</title><rect x="96.9854%" y="901" width="0.0157%" height="15" fill="rgb(205,180,2)"/><text x="97.2354%" y="911.50"></text></g><g><title>CoreFoundation`__CFRunLoopFindMode (1 samples, 0.02%)</title><rect x="96.9854%" y="885" width="0.0157%" height="15" fill="rgb(216,34,7)"/><text x="97.2354%" y="895.50"></text></g><g><title>CoreFoundation`CFSetGetValue (1 samples, 0.02%)</title><rect x="96.9854%" y="869" width="0.0157%" height="15" fill="rgb(253,16,32)"/><text x="97.2354%" y="879.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.02%)</title><rect x="96.9854%" y="853" width="0.0157%" height="15" fill="rgb(208,97,28)"/><text x="97.2354%" y="863.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.02%)</title><rect x="97.0011%" y="917" width="0.0157%" height="15" fill="rgb(225,92,11)"/><text x="97.2511%" y="927.50"></text></g><g><title>CoreFoundation`CFArrayInsertValueAtIndex (1 samples, 0.02%)</title><rect x="97.0168%" y="901" width="0.0157%" height="15" fill="rgb(243,38,12)"/><text x="97.2668%" y="911.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (1 samples, 0.02%)</title><rect x="97.0168%" y="885" width="0.0157%" height="15" fill="rgb(208,139,16)"/><text x="97.2668%" y="895.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (2 samples, 0.03%)</title><rect x="97.0325%" y="885" width="0.0314%" height="15" fill="rgb(227,24,9)"/><text x="97.2825%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="97.0482%" y="869" width="0.0157%" height="15" fill="rgb(206,62,11)"/><text x="97.2982%" y="879.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (3 samples, 0.05%)</title><rect x="97.0325%" y="901" width="0.0471%" height="15" fill="rgb(228,134,27)"/><text x="97.2825%" y="911.50"></text></g><g><title>CoreFoundation`__CFTypeCollectionRelease (1 samples, 0.02%)</title><rect x="97.0639%" y="885" width="0.0157%" height="15" fill="rgb(205,55,33)"/><text x="97.3139%" y="895.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (2 samples, 0.03%)</title><rect x="97.0796%" y="901" width="0.0314%" height="15" fill="rgb(243,75,43)"/><text x="97.3296%" y="911.50"></text></g><g><title>CoreFoundation`_CFArrayCheckAndGetValueAtIndex (1 samples, 0.02%)</title><rect x="97.0953%" y="885" width="0.0157%" height="15" fill="rgb(223,27,42)"/><text x="97.3453%" y="895.50"></text></g><g><title>CoreFoundation`__CFTimeIntervalToTSR (1 samples, 0.02%)</title><rect x="97.1110%" y="901" width="0.0157%" height="15" fill="rgb(232,189,33)"/><text x="97.3610%" y="911.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (22 samples, 0.35%)</title><rect x="97.0168%" y="917" width="0.3454%" height="15" fill="rgb(210,9,39)"/><text x="97.2668%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (15 samples, 0.24%)</title><rect x="97.1267%" y="901" width="0.2355%" height="15" fill="rgb(242,85,26)"/><text x="97.3767%" y="911.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (2 samples, 0.03%)</title><rect x="97.3779%" y="885" width="0.0314%" height="15" fill="rgb(248,44,4)"/><text x="97.6279%" y="895.50"></text></g><g><title>CoreFoundation`__CFRunLoopFindMode (6 samples, 0.09%)</title><rect x="97.3622%" y="917" width="0.0942%" height="15" fill="rgb(250,96,46)"/><text x="97.6122%" y="927.50"></text></g><g><title>CoreFoundation`CFSetGetValue (6 samples, 0.09%)</title><rect x="97.3622%" y="901" width="0.0942%" height="15" fill="rgb(229,116,26)"/><text x="97.6122%" y="911.50"></text></g><g><title>CoreFoundation`__CFStringHash (3 samples, 0.05%)</title><rect x="97.4093%" y="885" width="0.0471%" height="15" fill="rgb(246,94,34)"/><text x="97.6593%" y="895.50"></text></g><g><title>CoreFoundation`__CFTimeIntervalUntilTSR (2 samples, 0.03%)</title><rect x="97.4564%" y="917" width="0.0314%" height="15" fill="rgb(251,73,21)"/><text x="97.7064%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.03%)</title><rect x="97.4564%" y="901" width="0.0314%" height="15" fill="rgb(254,121,25)"/><text x="97.7064%" y="911.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="97.4878%" y="917" width="0.0314%" height="15" fill="rgb(215,161,49)"/><text x="97.7378%" y="927.50"></text></g><g><title>libobjc.A.dylib`object_setClass (1 samples, 0.02%)</title><rect x="97.5192%" y="917" width="0.0157%" height="15" fill="rgb(221,43,13)"/><text x="97.7692%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (12 samples, 0.19%)</title><rect x="97.5349%" y="917" width="0.1884%" height="15" fill="rgb(249,5,37)"/><text x="97.7849%" y="927.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (136 samples, 2.14%)</title><rect x="95.6037%" y="933" width="2.1353%" height="15" fill="rgb(226,25,44)"/><text x="95.8537%" y="943.50">C..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (1 samples, 0.02%)</title><rect x="97.7233%" y="917" width="0.0157%" height="15" fill="rgb(238,189,16)"/><text x="97.9733%" y="927.50"></text></g><g><title>CoreFoundation`__CFTimeIntervalUntilTSR (1 samples, 0.02%)</title><rect x="97.7390%" y="933" width="0.0157%" height="15" fill="rgb(251,186,8)"/><text x="97.9890%" y="943.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (1 samples, 0.02%)</title><rect x="97.7547%" y="933" width="0.0157%" height="15" fill="rgb(254,34,31)"/><text x="98.0047%" y="943.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (1 samples, 0.02%)</title><rect x="97.7547%" y="917" width="0.0157%" height="15" fill="rgb(225,215,27)"/><text x="98.0047%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="97.7547%" y="901" width="0.0157%" height="15" fill="rgb(221,192,48)"/><text x="98.0047%" y="911.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (145 samples, 2.28%)</title><rect x="95.5095%" y="949" width="2.2767%" height="15" fill="rgb(219,137,20)"/><text x="95.7595%" y="959.50">C..</text></g><g><title>libobjc.A.dylib`objc_alloc (1 samples, 0.02%)</title><rect x="97.7705%" y="933" width="0.0157%" height="15" fill="rgb(219,84,11)"/><text x="98.0205%" y="943.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (2 samples, 0.03%)</title><rect x="97.7862%" y="949" width="0.0314%" height="15" fill="rgb(224,10,23)"/><text x="98.0362%" y="959.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (1 samples, 0.02%)</title><rect x="97.8019%" y="933" width="0.0157%" height="15" fill="rgb(248,22,39)"/><text x="98.0519%" y="943.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.02%)</title><rect x="97.8019%" y="917" width="0.0157%" height="15" fill="rgb(212,154,20)"/><text x="98.0519%" y="927.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_adopt (1 samples, 0.02%)</title><rect x="97.8176%" y="933" width="0.0157%" height="15" fill="rgb(236,199,50)"/><text x="98.0676%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (2 samples, 0.03%)</title><rect x="97.8333%" y="933" width="0.0314%" height="15" fill="rgb(211,9,17)"/><text x="98.0833%" y="943.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (13 samples, 0.20%)</title><rect x="97.8176%" y="949" width="0.2041%" height="15" fill="rgb(243,216,36)"/><text x="98.0676%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (10 samples, 0.16%)</title><rect x="97.8647%" y="933" width="0.1570%" height="15" fill="rgb(250,2,10)"/><text x="98.1147%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.03%)</title><rect x="98.0217%" y="949" width="0.0314%" height="15" fill="rgb(226,50,48)"/><text x="98.2717%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_release (1 samples, 0.02%)</title><rect x="98.0531%" y="949" width="0.0157%" height="15" fill="rgb(243,81,16)"/><text x="98.3031%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (4 samples, 0.06%)</title><rect x="98.0688%" y="949" width="0.0628%" height="15" fill="rgb(250,14,2)"/><text x="98.3188%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (14 samples, 0.22%)</title><rect x="98.1316%" y="949" width="0.2198%" height="15" fill="rgb(233,135,29)"/><text x="98.3816%" y="959.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (647 samples, 10.16%)</title><rect x="88.2085%" y="965" width="10.1586%" height="15" fill="rgb(224,64,43)"/><text x="88.4585%" y="975.50">CoreFoundation`..</text></g><g><title>libsystem_kernel.dylib`kdebug_trace (1 samples, 0.02%)</title><rect x="98.3514%" y="949" width="0.0157%" height="15" fill="rgb(238,84,13)"/><text x="98.6014%" y="959.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (651 samples, 10.22%)</title><rect x="88.1614%" y="981" width="10.2214%" height="15" fill="rgb(253,48,26)"/><text x="88.4114%" y="991.50">CoreFoundation`..</text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="98.3671%" y="965" width="0.0157%" height="15" fill="rgb(205,223,31)"/><text x="98.6171%" y="975.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$memcmp (1 samples, 0.02%)</title><rect x="98.3828%" y="981" width="0.0157%" height="15" fill="rgb(221,41,32)"/><text x="98.6328%" y="991.50"></text></g><g><title>HIToolbox`INIT_AppleEvents (1 samples, 0.02%)</title><rect x="98.3985%" y="965" width="0.0157%" height="15" fill="rgb(213,158,31)"/><text x="98.6485%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="98.3985%" y="949" width="0.0157%" height="15" fill="rgb(245,126,43)"/><text x="98.6485%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="98.3985%" y="933" width="0.0157%" height="15" fill="rgb(227,7,22)"/><text x="98.6485%" y="943.50"></text></g><g><title>HIToolbox`__INIT_AppleEvents_block_invoke (1 samples, 0.02%)</title><rect x="98.3985%" y="917" width="0.0157%" height="15" fill="rgb(252,90,44)"/><text x="98.6485%" y="927.50"></text></g><g><title>AE`aeInitializeFromHIToolbox (1 samples, 0.02%)</title><rect x="98.3985%" y="901" width="0.0157%" height="15" fill="rgb(253,91,0)"/><text x="98.6485%" y="911.50"></text></g><g><title>LaunchServices`_LSSendNotification (1 samples, 0.02%)</title><rect x="98.3985%" y="885" width="0.0157%" height="15" fill="rgb(252,175,49)"/><text x="98.6485%" y="895.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.02%)</title><rect x="98.3985%" y="869" width="0.0157%" height="15" fill="rgb(246,150,1)"/><text x="98.6485%" y="879.50"></text></g><g><title>libxpc.dylib`_xpc_dispose (1 samples, 0.02%)</title><rect x="98.3985%" y="853" width="0.0157%" height="15" fill="rgb(241,192,25)"/><text x="98.6485%" y="863.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (1 samples, 0.02%)</title><rect x="98.3985%" y="837" width="0.0157%" height="15" fill="rgb(239,187,11)"/><text x="98.6485%" y="847.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (1 samples, 0.02%)</title><rect x="98.3985%" y="821" width="0.0157%" height="15" fill="rgb(218,202,51)"/><text x="98.6485%" y="831.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.02%)</title><rect x="98.3985%" y="805" width="0.0157%" height="15" fill="rgb(225,176,8)"/><text x="98.6485%" y="815.50"></text></g><g><title>libxpc.dylib`_xpc_dispose (1 samples, 0.02%)</title><rect x="98.3985%" y="789" width="0.0157%" height="15" fill="rgb(219,122,41)"/><text x="98.6485%" y="799.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (1 samples, 0.02%)</title><rect x="98.3985%" y="773" width="0.0157%" height="15" fill="rgb(248,140,20)"/><text x="98.6485%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="98.3985%" y="757" width="0.0157%" height="15" fill="rgb(245,41,37)"/><text x="98.6485%" y="767.50"></text></g><g><title>HIToolbox`InitTSMFirstEventTime (1 samples, 0.02%)</title><rect x="98.4142%" y="901" width="0.0157%" height="15" fill="rgb(235,82,39)"/><text x="98.6642%" y="911.50"></text></g><g><title>HIToolbox`InstallInputSourceMgrHandlers (1 samples, 0.02%)</title><rect x="98.4142%" y="885" width="0.0157%" height="15" fill="rgb(230,108,42)"/><text x="98.6642%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="98.4142%" y="869" width="0.0157%" height="15" fill="rgb(215,150,50)"/><text x="98.6642%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="98.4142%" y="853" width="0.0157%" height="15" fill="rgb(233,212,5)"/><text x="98.6642%" y="863.50"></text></g><g><title>HIToolbox`___GetCurrentProcessName_block_invoke (1 samples, 0.02%)</title><rect x="98.4142%" y="837" width="0.0157%" height="15" fill="rgb(245,80,22)"/><text x="98.6642%" y="847.50"></text></g><g><title>HIToolbox`GetCurrentAppNameAsCFString (1 samples, 0.02%)</title><rect x="98.4142%" y="821" width="0.0157%" height="15" fill="rgb(238,129,16)"/><text x="98.6642%" y="831.50"></text></g><g><title>HIServices`CopyProcessName (1 samples, 0.02%)</title><rect x="98.4142%" y="805" width="0.0157%" height="15" fill="rgb(240,19,0)"/><text x="98.6642%" y="815.50"></text></g><g><title>LaunchServices`_LSCopyApplicationInformationItem (1 samples, 0.02%)</title><rect x="98.4142%" y="789" width="0.0157%" height="15" fill="rgb(232,42,35)"/><text x="98.6642%" y="799.50"></text></g><g><title>LaunchServices`_LSCopyApplicationInformation (1 samples, 0.02%)</title><rect x="98.4142%" y="773" width="0.0157%" height="15" fill="rgb(223,130,24)"/><text x="98.6642%" y="783.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.02%)</title><rect x="98.4142%" y="757" width="0.0157%" height="15" fill="rgb(237,16,22)"/><text x="98.6642%" y="767.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.02%)</title><rect x="98.4142%" y="741" width="0.0157%" height="15" fill="rgb(248,192,20)"/><text x="98.6642%" y="751.50"></text></g><g><title>LaunchServices`outputSafeString(std::__1::basic_ostringstream&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 0.02%)</title><rect x="98.4142%" y="725" width="0.0157%" height="15" fill="rgb(233,167,2)"/><text x="98.6642%" y="735.50"></text></g><g><title>HIToolbox`CreateInputSourceCacheFilterData (1 samples, 0.02%)</title><rect x="98.4299%" y="869" width="0.0157%" height="15" fill="rgb(252,71,44)"/><text x="98.6799%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="98.4299%" y="853" width="0.0157%" height="15" fill="rgb(238,37,47)"/><text x="98.6799%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="98.4299%" y="837" width="0.0157%" height="15" fill="rgb(214,202,54)"/><text x="98.6799%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="98.4299%" y="821" width="0.0157%" height="15" fill="rgb(254,165,40)"/><text x="98.6799%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="98.4299%" y="805" width="0.0157%" height="15" fill="rgb(246,173,38)"/><text x="98.6799%" y="815.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyValueWithContainer (1 samples, 0.02%)</title><rect x="98.4456%" y="837" width="0.0157%" height="15" fill="rgb(215,3,27)"/><text x="98.6956%" y="847.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyValueForKey:identifier:user:host:container:] (1 samples, 0.02%)</title><rect x="98.4456%" y="821" width="0.0157%" height="15" fill="rgb(239,169,51)"/><text x="98.6956%" y="831.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences(SourceAdditions) withSourceForIdentifier:user:byHost:container:cloud:perform:] (1 samples, 0.02%)</title><rect x="98.4456%" y="805" width="0.0157%" height="15" fill="rgb(212,5,25)"/><text x="98.6956%" y="815.50"></text></g><g><title>CoreFoundation`__66-[_CFXPreferences copyValueForKey:identifier:user:host:container:]_block_invoke (1 samples, 0.02%)</title><rect x="98.4456%" y="789" width="0.0157%" height="15" fill="rgb(243,45,17)"/><text x="98.6956%" y="799.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource copyValueForKey:] (1 samples, 0.02%)</title><rect x="98.4456%" y="773" width="0.0157%" height="15" fill="rgb(242,97,9)"/><text x="98.6956%" y="783.50"></text></g><g><title>CoreFoundation`_copyValueForKey (1 samples, 0.02%)</title><rect x="98.4456%" y="757" width="0.0157%" height="15" fill="rgb(228,71,31)"/><text x="98.6956%" y="767.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource alreadylocked_requestNewData] (1 samples, 0.02%)</title><rect x="98.4456%" y="741" width="0.0157%" height="15" fill="rgb(252,184,16)"/><text x="98.6956%" y="751.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withConnectionForRole:performBlock:] (1 samples, 0.02%)</title><rect x="98.4456%" y="725" width="0.0157%" height="15" fill="rgb(236,169,46)"/><text x="98.6956%" y="735.50"></text></g><g><title>CoreFoundation`__50-[CFPrefsPlistSource alreadylocked_requestNewData]_block_invoke (1 samples, 0.02%)</title><rect x="98.4456%" y="709" width="0.0157%" height="15" fill="rgb(207,17,47)"/><text x="98.6956%" y="719.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource sendRequestNewDataMessage:toConnection:retryCount:error:] (1 samples, 0.02%)</title><rect x="98.4456%" y="693" width="0.0157%" height="15" fill="rgb(206,201,28)"/><text x="98.6956%" y="703.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.02%)</title><rect x="98.4456%" y="677" width="0.0157%" height="15" fill="rgb(224,184,23)"/><text x="98.6956%" y="687.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up (1 samples, 0.02%)</title><rect x="98.4456%" y="661" width="0.0157%" height="15" fill="rgb(208,139,48)"/><text x="98.6956%" y="671.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_unpack_value (1 samples, 0.02%)</title><rect x="98.4456%" y="645" width="0.0157%" height="15" fill="rgb(208,130,10)"/><text x="98.6956%" y="655.50"></text></g><g><title>HIToolbox`GetInputSourceEnabledPrefs (2 samples, 0.03%)</title><rect x="98.4456%" y="853" width="0.0314%" height="15" fill="rgb(211,213,45)"/><text x="98.6956%" y="863.50"></text></g><g><title>HIToolbox`ValidateEnabledInputSourceIDs (1 samples, 0.02%)</title><rect x="98.4613%" y="837" width="0.0157%" height="15" fill="rgb(235,100,30)"/><text x="98.7113%" y="847.50"></text></g><g><title>HIToolbox`islcGetKeyboardLayoutIndexFromNameAndID (1 samples, 0.02%)</title><rect x="98.4613%" y="821" width="0.0157%" height="15" fill="rgb(206,144,31)"/><text x="98.7113%" y="831.50"></text></g><g><title>HIToolbox`TISGetAppleKeyLayoutIndexForNumericID (1 samples, 0.02%)</title><rect x="98.4613%" y="805" width="0.0157%" height="15" fill="rgb(224,200,26)"/><text x="98.7113%" y="815.50"></text></g><g><title>HIToolbox`TISMapAppleKeyLayoutData (1 samples, 0.02%)</title><rect x="98.4613%" y="789" width="0.0157%" height="15" fill="rgb(247,104,53)"/><text x="98.7113%" y="799.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURLInDirectory (1 samples, 0.02%)</title><rect x="98.4613%" y="773" width="0.0157%" height="15" fill="rgb(220,14,17)"/><text x="98.7113%" y="783.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.02%)</title><rect x="98.4613%" y="757" width="0.0157%" height="15" fill="rgb(230,140,40)"/><text x="98.7113%" y="767.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLanguageSearchListInDirectory (1 samples, 0.02%)</title><rect x="98.4613%" y="741" width="0.0157%" height="15" fill="rgb(229,2,41)"/><text x="98.7113%" y="751.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectory (1 samples, 0.02%)</title><rect x="98.4613%" y="725" width="0.0157%" height="15" fill="rgb(232,89,16)"/><text x="98.7113%" y="735.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.02%)</title><rect x="98.4613%" y="709" width="0.0157%" height="15" fill="rgb(247,59,52)"/><text x="98.7113%" y="719.50"></text></g><g><title>CoreFoundation`_CFBundleInfoPlistProcessInfoDictionary (1 samples, 0.02%)</title><rect x="98.4613%" y="693" width="0.0157%" height="15" fill="rgb(226,110,21)"/><text x="98.7113%" y="703.50"></text></g><g><title>CoreFoundation`CFStringFind (1 samples, 0.02%)</title><rect x="98.4613%" y="677" width="0.0157%" height="15" fill="rgb(224,176,43)"/><text x="98.7113%" y="687.50"></text></g><g><title>CoreFoundation`CFStringFindWithOptionsAndLocale (1 samples, 0.02%)</title><rect x="98.4613%" y="661" width="0.0157%" height="15" fill="rgb(221,73,6)"/><text x="98.7113%" y="671.50"></text></g><g><title>HIToolbox`isPrefsCreateCacheFromEnabledAndDefaultInputSources (3 samples, 0.05%)</title><rect x="98.4456%" y="869" width="0.0471%" height="15" fill="rgb(232,78,19)"/><text x="98.6956%" y="879.50"></text></g><g><title>HIToolbox`isPrefsGetDefaultAsciiKeyboardLayout (1 samples, 0.02%)</title><rect x="98.4770%" y="853" width="0.0157%" height="15" fill="rgb(233,112,48)"/><text x="98.7270%" y="863.50"></text></g><g><title>CoreFoundation`CFPasteboardCopyData (1 samples, 0.02%)</title><rect x="98.4770%" y="837" width="0.0157%" height="15" fill="rgb(243,131,47)"/><text x="98.7270%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.02%)</title><rect x="98.4770%" y="821" width="0.0157%" height="15" fill="rgb(226,51,1)"/><text x="98.7270%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="98.4770%" y="805" width="0.0157%" height="15" fill="rgb(247,58,7)"/><text x="98.7270%" y="815.50"></text></g><g><title>CoreFoundation`__CFPasteboardCopyData_block_invoke (1 samples, 0.02%)</title><rect x="98.4770%" y="789" width="0.0157%" height="15" fill="rgb(209,7,32)"/><text x="98.7270%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="98.4770%" y="773" width="0.0157%" height="15" fill="rgb(209,39,41)"/><text x="98.7270%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="98.4770%" y="757" width="0.0157%" height="15" fill="rgb(226,182,46)"/><text x="98.7270%" y="767.50"></text></g><g><title>CoreFoundation`____kCFPasteboardFilenamesFlavor_block_invoke (1 samples, 0.02%)</title><rect x="98.4770%" y="741" width="0.0157%" height="15" fill="rgb(230,219,10)"/><text x="98.7270%" y="751.50"></text></g><g><title>LaunchServices`UTTypeCreatePreferredIdentifierForTag (1 samples, 0.02%)</title><rect x="98.4770%" y="725" width="0.0157%" height="15" fill="rgb(227,175,30)"/><text x="98.7270%" y="735.50"></text></g><g><title>LaunchServices`-[_UTTypeQuery resolve] (1 samples, 0.02%)</title><rect x="98.4770%" y="709" width="0.0157%" height="15" fill="rgb(217,2,50)"/><text x="98.7270%" y="719.50"></text></g><g><title>LaunchServices`-[_LSQueryContext(QueryResolution) resolveQueries:error:] (1 samples, 0.02%)</title><rect x="98.4770%" y="693" width="0.0157%" height="15" fill="rgb(229,160,0)"/><text x="98.7270%" y="703.50"></text></g><g><title>LaunchServices`-[_LSQueryContext(Internal) _resolveQueries:XPCConnection:error:] (1 samples, 0.02%)</title><rect x="98.4770%" y="677" width="0.0157%" height="15" fill="rgb(207,78,37)"/><text x="98.7270%" y="687.50"></text></g><g><title>LaunchServices`-[_LSLocalQueryResolver _resolveQueries:XPCConnection:error:] (1 samples, 0.02%)</title><rect x="98.4770%" y="661" width="0.0157%" height="15" fill="rgb(225,57,0)"/><text x="98.7270%" y="671.50"></text></g><g><title>LaunchServices`-[_LSLocalQueryResolver _enumerateResolvedResultsOfQuery:XPCConnection:withBlock:] (1 samples, 0.02%)</title><rect x="98.4770%" y="645" width="0.0157%" height="15" fill="rgb(232,154,2)"/><text x="98.7270%" y="655.50"></text></g><g><title>LaunchServices`-[_UTTypeQueryWithTags _enumerateWithXPCConnection:block:] (1 samples, 0.02%)</title><rect x="98.4770%" y="629" width="0.0157%" height="15" fill="rgb(241,212,25)"/><text x="98.7270%" y="639.50"></text></g><g><title>LaunchServices`_UTTypeGetActiveIdentifierForTag (1 samples, 0.02%)</title><rect x="98.4770%" y="613" width="0.0157%" height="15" fill="rgb(226,69,20)"/><text x="98.7270%" y="623.50"></text></g><g><title>LaunchServices`_UTEnumerateTypesForTag (1 samples, 0.02%)</title><rect x="98.4770%" y="597" width="0.0157%" height="15" fill="rgb(247,184,54)"/><text x="98.7270%" y="607.50"></text></g><g><title>LaunchServices`_LSDatabaseGetStringForCFString (1 samples, 0.02%)</title><rect x="98.4770%" y="581" width="0.0157%" height="15" fill="rgb(210,145,0)"/><text x="98.7270%" y="591.50"></text></g><g><title>CoreServicesStore`_CSGetStringForCharacters (1 samples, 0.02%)</title><rect x="98.4770%" y="565" width="0.0157%" height="15" fill="rgb(253,82,12)"/><text x="98.7270%" y="575.50"></text></g><g><title>CoreServicesStore`CSStore2::String::Find (1 samples, 0.02%)</title><rect x="98.4770%" y="549" width="0.0157%" height="15" fill="rgb(245,42,11)"/><text x="98.7270%" y="559.50"></text></g><g><title>CoreServicesStore`invocation function for block in CSStore2::String::Find (1 samples, 0.02%)</title><rect x="98.4770%" y="533" width="0.0157%" height="15" fill="rgb(219,147,32)"/><text x="98.7270%" y="543.50"></text></g><g><title>CoreServicesStore`CSStore2::String::Get (1 samples, 0.02%)</title><rect x="98.4770%" y="517" width="0.0157%" height="15" fill="rgb(246,12,7)"/><text x="98.7270%" y="527.50"></text></g><g><title>CoreServicesStore`CSStore2::Store::getUnit (1 samples, 0.02%)</title><rect x="98.4770%" y="501" width="0.0157%" height="15" fill="rgb(243,50,9)"/><text x="98.7270%" y="511.50"></text></g><g><title>CoreServicesStore`CSStore2::HashMap&lt;unsigned int, unsigned int, CSStore2::_IdentifierFunctions, 1ull&gt;::Find(CSStore2::Store const&amp;, CSStore2::HashMap (1 samples, 0.02%)</title><rect x="98.4770%" y="485" width="0.0157%" height="15" fill="rgb(219,149,6)"/><text x="98.7270%" y="495.50"></text></g><g><title>HIToolbox`String.__ivar_initializer (6 samples, 0.09%)</title><rect x="98.4142%" y="949" width="0.0942%" height="15" fill="rgb(241,51,42)"/><text x="98.6642%" y="959.50"></text></g><g><title>HIToolbox`CopyInputSourceRefForInputSourceID (6 samples, 0.09%)</title><rect x="98.4142%" y="933" width="0.0942%" height="15" fill="rgb(226,128,27)"/><text x="98.6642%" y="943.50"></text></g><g><title>HIToolbox`TISCreateInputSourceList (6 samples, 0.09%)</title><rect x="98.4142%" y="917" width="0.0942%" height="15" fill="rgb(244,144,4)"/><text x="98.6642%" y="927.50"></text></g><g><title>HIToolbox`TSMGetInputSourceCountWithFilteredAdditions (5 samples, 0.08%)</title><rect x="98.4299%" y="901" width="0.0785%" height="15" fill="rgb(221,4,13)"/><text x="98.6799%" y="911.50"></text></g><g><title>HIToolbox`islGetInputSourceListWithAdditions (5 samples, 0.08%)</title><rect x="98.4299%" y="885" width="0.0785%" height="15" fill="rgb(208,170,28)"/><text x="98.6799%" y="895.50"></text></g><g><title>HIToolbox`islcGetInputSourceCountInCache (1 samples, 0.02%)</title><rect x="98.4927%" y="869" width="0.0157%" height="15" fill="rgb(226,131,13)"/><text x="98.7427%" y="879.50"></text></g><g><title>HIToolbox`GetInputSourceCacheArray (1 samples, 0.02%)</title><rect x="98.4927%" y="853" width="0.0157%" height="15" fill="rgb(215,72,41)"/><text x="98.7427%" y="863.50"></text></g><g><title>HIToolbox`GetInputSourceCacheHeader (1 samples, 0.02%)</title><rect x="98.4927%" y="837" width="0.0157%" height="15" fill="rgb(243,108,20)"/><text x="98.7427%" y="847.50"></text></g><g><title>HIToolbox`InitializeInputSourceCache (1 samples, 0.02%)</title><rect x="98.4927%" y="821" width="0.0157%" height="15" fill="rgb(230,189,17)"/><text x="98.7427%" y="831.50"></text></g><g><title>CarbonCore`IntlFCOpenComponentData (1 samples, 0.02%)</title><rect x="98.4927%" y="805" width="0.0157%" height="15" fill="rgb(220,50,17)"/><text x="98.7427%" y="815.50"></text></g><g><title>CarbonCore`CCFFetchComponentData (1 samples, 0.02%)</title><rect x="98.4927%" y="789" width="0.0157%" height="15" fill="rgb(248,152,48)"/><text x="98.7427%" y="799.50"></text></g><g><title>CarbonCore`OpenCCFFile (1 samples, 0.02%)</title><rect x="98.4927%" y="773" width="0.0157%" height="15" fill="rgb(244,91,11)"/><text x="98.7427%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="98.4927%" y="757" width="0.0157%" height="15" fill="rgb(220,157,5)"/><text x="98.7427%" y="767.50"></text></g><g><title>HIToolbox`_FirstEventTime (8 samples, 0.13%)</title><rect x="98.3985%" y="981" width="0.1256%" height="15" fill="rgb(253,137,8)"/><text x="98.6485%" y="991.50"></text></g><g><title>HIToolbox`SyncHandwritingHotKey (7 samples, 0.11%)</title><rect x="98.4142%" y="965" width="0.1099%" height="15" fill="rgb(217,137,51)"/><text x="98.6642%" y="975.50"></text></g><g><title>SkyLight`SLSSetSymbolicHotKeyEnabled (1 samples, 0.02%)</title><rect x="98.5084%" y="949" width="0.0157%" height="15" fill="rgb(218,209,53)"/><text x="98.7584%" y="959.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_set (1 samples, 0.02%)</title><rect x="98.5084%" y="933" width="0.0157%" height="15" fill="rgb(249,137,25)"/><text x="98.7584%" y="943.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.02%)</title><rect x="98.5241%" y="933" width="0.0157%" height="15" fill="rgb(239,155,26)"/><text x="98.7741%" y="943.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (1 samples, 0.02%)</title><rect x="98.5241%" y="917" width="0.0157%" height="15" fill="rgb(227,85,46)"/><text x="98.7741%" y="927.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (1 samples, 0.02%)</title><rect x="98.5241%" y="901" width="0.0157%" height="15" fill="rgb(251,107,43)"/><text x="98.7741%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (1 samples, 0.02%)</title><rect x="98.5241%" y="885" width="0.0157%" height="15" fill="rgb(234,170,33)"/><text x="98.7741%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="98.5241%" y="869" width="0.0157%" height="15" fill="rgb(206,29,35)"/><text x="98.7741%" y="879.50"></text></g><g><title>HIToolbox`CreateEventWithCGEvent (1 samples, 0.02%)</title><rect x="98.5555%" y="917" width="0.0157%" height="15" fill="rgb(227,138,25)"/><text x="98.8055%" y="927.50"></text></g><g><title>HIToolbox`CreateMouseEvent (1 samples, 0.02%)</title><rect x="98.5555%" y="901" width="0.0157%" height="15" fill="rgb(249,131,35)"/><text x="98.8055%" y="911.50"></text></g><g><title>HIToolbox`SetEventParameter (1 samples, 0.02%)</title><rect x="98.5555%" y="885" width="0.0157%" height="15" fill="rgb(239,6,40)"/><text x="98.8055%" y="895.50"></text></g><g><title>HIToolbox`RetainEventParamData (1 samples, 0.02%)</title><rect x="98.5555%" y="869" width="0.0157%" height="15" fill="rgb(246,136,47)"/><text x="98.8055%" y="879.50"></text></g><g><title>HIToolbox`TypeManager::Retain (1 samples, 0.02%)</title><rect x="98.5555%" y="853" width="0.0157%" height="15" fill="rgb(253,58,26)"/><text x="98.8055%" y="863.50"></text></g><g><title>HIToolbox`TypeManager::FindCallbacks (1 samples, 0.02%)</title><rect x="98.5555%" y="837" width="0.0157%" height="15" fill="rgb(237,141,10)"/><text x="98.8055%" y="847.50"></text></g><g><title>CarbonCore`GetCollectionItem (1 samples, 0.02%)</title><rect x="98.5555%" y="821" width="0.0157%" height="15" fill="rgb(234,156,12)"/><text x="98.8055%" y="831.50"></text></g><g><title>CarbonCore`FindItem(OpaqueCollection*, unsigned int, int, unsigned long*) (1 samples, 0.02%)</title><rect x="98.5555%" y="805" width="0.0157%" height="15" fill="rgb(243,224,36)"/><text x="98.8055%" y="815.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (2 samples, 0.03%)</title><rect x="98.5712%" y="917" width="0.0314%" height="15" fill="rgb(205,229,51)"/><text x="98.8212%" y="927.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (2 samples, 0.03%)</title><rect x="98.5712%" y="901" width="0.0314%" height="15" fill="rgb(223,189,4)"/><text x="98.8212%" y="911.50"></text></g><g><title>HIToolbox`KeyEventPostedObserver (1 samples, 0.02%)</title><rect x="98.5869%" y="885" width="0.0157%" height="15" fill="rgb(249,167,54)"/><text x="98.8369%" y="895.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (5 samples, 0.08%)</title><rect x="98.5398%" y="933" width="0.0785%" height="15" fill="rgb(218,34,28)"/><text x="98.7898%" y="943.50"></text></g><g><title>HIToolbox`ReleaseEvent (1 samples, 0.02%)</title><rect x="98.6026%" y="917" width="0.0157%" height="15" fill="rgb(232,109,42)"/><text x="98.8526%" y="927.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 0.02%)</title><rect x="98.6026%" y="901" width="0.0157%" height="15" fill="rgb(248,214,46)"/><text x="98.8526%" y="911.50"></text></g><g><title>SkyLight`event_finalize(void const*) (1 samples, 0.02%)</title><rect x="98.6026%" y="885" width="0.0157%" height="15" fill="rgb(244,216,40)"/><text x="98.8526%" y="895.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$objc_destructInstance (1 samples, 0.02%)</title><rect x="98.6026%" y="869" width="0.0157%" height="15" fill="rgb(231,226,31)"/><text x="98.8526%" y="879.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (670 samples, 10.52%)</title><rect x="88.1614%" y="997" width="10.5197%" height="15" fill="rgb(238,38,43)"/><text x="88.4114%" y="1007.50">HIToolbox`RunCu..</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (10 samples, 0.16%)</title><rect x="98.5241%" y="981" width="0.1570%" height="15" fill="rgb(208,88,43)"/><text x="98.7741%" y="991.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (10 samples, 0.16%)</title><rect x="98.5241%" y="965" width="0.1570%" height="15" fill="rgb(205,136,37)"/><text x="98.7741%" y="975.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (10 samples, 0.16%)</title><rect x="98.5241%" y="949" width="0.1570%" height="15" fill="rgb(237,34,14)"/><text x="98.7741%" y="959.50"></text></g><g><title>HIToolbox`PingEventQueueMachPort (4 samples, 0.06%)</title><rect x="98.6183%" y="933" width="0.0628%" height="15" fill="rgb(236,193,44)"/><text x="98.8683%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.06%)</title><rect x="98.6183%" y="917" width="0.0628%" height="15" fill="rgb(231,48,10)"/><text x="98.8683%" y="927.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (2 samples, 0.03%)</title><rect x="98.6811%" y="965" width="0.0314%" height="15" fill="rgb(213,141,34)"/><text x="98.9311%" y="975.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (2 samples, 0.03%)</title><rect x="98.6811%" y="949" width="0.0314%" height="15" fill="rgb(249,130,34)"/><text x="98.9311%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (2 samples, 0.03%)</title><rect x="98.6811%" y="933" width="0.0314%" height="15" fill="rgb(219,42,41)"/><text x="98.9311%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.03%)</title><rect x="98.6811%" y="917" width="0.0314%" height="15" fill="rgb(224,100,54)"/><text x="98.9311%" y="927.50"></text></g><g><title>AppKit`_DPSNextEvent (697 samples, 10.94%)</title><rect x="87.7846%" y="1045" width="10.9436%" height="15" fill="rgb(229,200,27)"/><text x="88.0346%" y="1055.50">AppKit`_DPSNextE..</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (692 samples, 10.87%)</title><rect x="87.8631%" y="1029" width="10.8651%" height="15" fill="rgb(217,118,10)"/><text x="88.1131%" y="1039.50">HIToolbox`_Block..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (692 samples, 10.87%)</title><rect x="87.8631%" y="1013" width="10.8651%" height="15" fill="rgb(206,22,3)"/><text x="88.1131%" y="1023.50">HIToolbox`Receiv..</text></g><g><title>HIToolbox`_DropPendingBoost (3 samples, 0.05%)</title><rect x="98.6811%" y="997" width="0.0471%" height="15" fill="rgb(232,163,46)"/><text x="98.9311%" y="1007.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.05%)</title><rect x="98.6811%" y="981" width="0.0471%" height="15" fill="rgb(206,95,13)"/><text x="98.9311%" y="991.50"></text></g><g><title>libdispatch.dylib`-[OS_voucher dealloc] (1 samples, 0.02%)</title><rect x="98.7125%" y="965" width="0.0157%" height="15" fill="rgb(253,154,18)"/><text x="98.9625%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.02%)</title><rect x="98.7125%" y="949" width="0.0157%" height="15" fill="rgb(219,32,23)"/><text x="98.9625%" y="959.50"></text></g><g><title>QuartzCore`+[CATransaction(CATransactionPrivate) setInputTime:] (2 samples, 0.03%)</title><rect x="98.7282%" y="1045" width="0.0314%" height="15" fill="rgb(230,191,45)"/><text x="98.9782%" y="1055.50"></text></g><g><title>QuartzCore`CA::Transaction::set_value (2 samples, 0.03%)</title><rect x="98.7282%" y="1029" width="0.0314%" height="15" fill="rgb(229,64,36)"/><text x="98.9782%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (2 samples, 0.03%)</title><rect x="98.7282%" y="1013" width="0.0314%" height="15" fill="rgb(205,129,25)"/><text x="98.9782%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="98.7282%" y="997" width="0.0314%" height="15" fill="rgb(254,112,7)"/><text x="98.9782%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.03%)</title><rect x="98.7282%" y="981" width="0.0314%" height="15" fill="rgb(226,53,48)"/><text x="98.9782%" y="991.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 0.02%)</title><rect x="98.7596%" y="1013" width="0.0157%" height="15" fill="rgb(214,153,38)"/><text x="99.0096%" y="1023.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 0.02%)</title><rect x="98.7596%" y="997" width="0.0157%" height="15" fill="rgb(243,101,7)"/><text x="99.0096%" y="1007.50"></text></g><g><title>AppKit`-[_NSEventObserver dealloc] (1 samples, 0.02%)</title><rect x="98.7596%" y="981" width="0.0157%" height="15" fill="rgb(240,140,22)"/><text x="99.0096%" y="991.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (1 samples, 0.02%)</title><rect x="98.7596%" y="965" width="0.0157%" height="15" fill="rgb(235,114,2)"/><text x="99.0096%" y="975.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (1 samples, 0.02%)</title><rect x="98.7596%" y="949" width="0.0157%" height="15" fill="rgb(242,59,12)"/><text x="99.0096%" y="959.50"></text></g><g><title>AppKit`__destroy_helper_block_e8_32o40o (1 samples, 0.02%)</title><rect x="98.7596%" y="933" width="0.0157%" height="15" fill="rgb(252,134,9)"/><text x="99.0096%" y="943.50"></text></g><g><title>HIToolbox`ReleaseEvent (1 samples, 0.02%)</title><rect x="98.7596%" y="917" width="0.0157%" height="15" fill="rgb(236,4,44)"/><text x="99.0096%" y="927.50"></text></g><g><title>CoreFoundation`__CFStringDeallocate (1 samples, 0.02%)</title><rect x="98.7753%" y="997" width="0.0157%" height="15" fill="rgb(254,172,41)"/><text x="99.0253%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (3 samples, 0.05%)</title><rect x="98.7596%" y="1045" width="0.0471%" height="15" fill="rgb(244,63,20)"/><text x="99.0096%" y="1055.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (3 samples, 0.05%)</title><rect x="98.7596%" y="1029" width="0.0471%" height="15" fill="rgb(250,73,31)"/><text x="99.0096%" y="1039.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.03%)</title><rect x="98.7753%" y="1013" width="0.0314%" height="15" fill="rgb(241,38,36)"/><text x="99.0253%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.02%)</title><rect x="98.7910%" y="997" width="0.0157%" height="15" fill="rgb(245,211,2)"/><text x="99.0410%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="98.7910%" y="981" width="0.0157%" height="15" fill="rgb(206,120,28)"/><text x="99.0410%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="98.7910%" y="965" width="0.0157%" height="15" fill="rgb(211,59,34)"/><text x="99.0410%" y="975.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (710 samples, 11.15%)</title><rect x="87.6747%" y="1061" width="11.1477%" height="15" fill="rgb(233,168,5)"/><text x="87.9247%" y="1071.50">AppKit`-[NSAppli..</text></g><g><title>libobjc.A.dylib`objc_msgSend_stret (1 samples, 0.02%)</title><rect x="98.8067%" y="1045" width="0.0157%" height="15" fill="rgb(234,33,13)"/><text x="99.0567%" y="1055.50"></text></g><g><title>AppKit`-[NSEvent type] (1 samples, 0.02%)</title><rect x="98.8224%" y="1061" width="0.0157%" height="15" fill="rgb(231,150,26)"/><text x="99.0724%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="98.8381%" y="1061" width="0.0157%" height="15" fill="rgb(217,191,4)"/><text x="99.0881%" y="1071.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper (1 samples, 0.02%)</title><rect x="98.8538%" y="1061" width="0.0157%" height="15" fill="rgb(246,198,38)"/><text x="99.1038%" y="1071.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (1 samples, 0.02%)</title><rect x="98.8695%" y="1029" width="0.0157%" height="15" fill="rgb(245,64,37)"/><text x="99.1195%" y="1039.50"></text></g><g><title>AppKit`-[NSApplication _findKeyWindowConsideringSpacesWithOriginatingDisplayHint:isAppleEventPending:makeKey:] (1 samples, 0.02%)</title><rect x="98.8695%" y="1013" width="0.0157%" height="15" fill="rgb(250,30,36)"/><text x="99.1195%" y="1023.50"></text></g><g><title>AppKit`-[NSWindow _isActiveAndOnScreen:] (1 samples, 0.02%)</title><rect x="98.8695%" y="997" width="0.0157%" height="15" fill="rgb(217,86,53)"/><text x="99.1195%" y="1007.50"></text></g><g><title>AppKit`-[NSWindow isOnActiveSpace] (1 samples, 0.02%)</title><rect x="98.8695%" y="981" width="0.0157%" height="15" fill="rgb(228,157,16)"/><text x="99.1195%" y="991.50"></text></g><g><title>AppKit`-[NSWindow _isInSomeVisibleSpace] (1 samples, 0.02%)</title><rect x="98.8695%" y="965" width="0.0157%" height="15" fill="rgb(217,59,31)"/><text x="99.1195%" y="975.50"></text></g><g><title>AppKit`_NSIsAnyWindowOnAVisibleSpace (1 samples, 0.02%)</title><rect x="98.8695%" y="949" width="0.0157%" height="15" fill="rgb(237,138,41)"/><text x="99.1195%" y="959.50"></text></g><g><title>AppKit`_NSMapAndFilter (1 samples, 0.02%)</title><rect x="98.8695%" y="933" width="0.0157%" height="15" fill="rgb(227,91,49)"/><text x="99.1195%" y="943.50"></text></g><g><title>AppKit`+[NSCGSWindow(NSCGSWindowCreation) windowWithWindowID:] (1 samples, 0.02%)</title><rect x="98.8695%" y="917" width="0.0157%" height="15" fill="rgb(247,21,44)"/><text x="99.1195%" y="927.50"></text></g><g><title>Foundation`-[NSConcreteMapTable objectForKey:] (1 samples, 0.02%)</title><rect x="98.8695%" y="901" width="0.0157%" height="15" fill="rgb(219,210,51)"/><text x="99.1195%" y="911.50"></text></g><g><title>Foundation`readARCWeakAt (1 samples, 0.02%)</title><rect x="98.8695%" y="885" width="0.0157%" height="15" fill="rgb(209,140,6)"/><text x="99.1195%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (1 samples, 0.02%)</title><rect x="98.8695%" y="869" width="0.0157%" height="15" fill="rgb(221,188,24)"/><text x="99.1195%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (1 samples, 0.02%)</title><rect x="98.8695%" y="853" width="0.0157%" height="15" fill="rgb(232,154,20)"/><text x="99.1195%" y="863.50"></text></g><g><title>AppKit`_NXEndKeyAndMain (1 samples, 0.02%)</title><rect x="98.8852%" y="1013" width="0.0157%" height="15" fill="rgb(244,137,50)"/><text x="99.1352%" y="1023.50"></text></g><g><title>AppKit`-[NSWindow resignMainWindow] (1 samples, 0.02%)</title><rect x="98.8852%" y="997" width="0.0157%" height="15" fill="rgb(225,185,43)"/><text x="99.1352%" y="1007.50"></text></g><g><title>AppKit`-[NSWindow _setFrameNeedsDisplay:] (1 samples, 0.02%)</title><rect x="98.8852%" y="981" width="0.0157%" height="15" fill="rgb(213,205,38)"/><text x="99.1352%" y="991.50"></text></g><g><title>AppKit`-[NSWindow _sendWindowChangedKeyStateIfNeeded] (1 samples, 0.02%)</title><rect x="98.8852%" y="965" width="0.0157%" height="15" fill="rgb(236,73,12)"/><text x="99.1352%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="98.8852%" y="949" width="0.0157%" height="15" fill="rgb(235,219,13)"/><text x="99.1352%" y="959.50"></text></g><g><title>AppKit`-[NSApplication _handleDeactivateEvent:] (2 samples, 0.03%)</title><rect x="98.8852%" y="1029" width="0.0314%" height="15" fill="rgb(218,59,36)"/><text x="99.1352%" y="1039.50"></text></g><g><title>PerformanceAnalysis`PAMarkOperationStart (1 samples, 0.02%)</title><rect x="98.9009%" y="1013" width="0.0157%" height="15" fill="rgb(205,110,39)"/><text x="99.1509%" y="1023.50"></text></g><g><title>PerformanceAnalysis`-[PAPerfLoggingClientOperation initAndStartWithOperationCategory:andOperationName:andPid:shouldMonitorWSUpdates:] (1 samples, 0.02%)</title><rect x="98.9009%" y="997" width="0.0157%" height="15" fill="rgb(218,206,42)"/><text x="99.1509%" y="1007.50"></text></g><g><title>PerformanceAnalysis`-[PAPerfLoggingClientOperation markOperationStart] (1 samples, 0.02%)</title><rect x="98.9009%" y="981" width="0.0157%" height="15" fill="rgb(248,125,24)"/><text x="99.1509%" y="991.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (1 samples, 0.02%)</title><rect x="98.9009%" y="965" width="0.0157%" height="15" fill="rgb(242,28,27)"/><text x="99.1509%" y="975.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (1 samples, 0.02%)</title><rect x="98.9009%" y="949" width="0.0157%" height="15" fill="rgb(216,228,15)"/><text x="99.1509%" y="959.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (1 samples, 0.02%)</title><rect x="98.9009%" y="933" width="0.0157%" height="15" fill="rgb(235,116,46)"/><text x="99.1509%" y="943.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (1 samples, 0.02%)</title><rect x="98.9009%" y="917" width="0.0157%" height="15" fill="rgb(224,18,32)"/><text x="99.1509%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSArrayM count] (1 samples, 0.02%)</title><rect x="98.9323%" y="997" width="0.0157%" height="15" fill="rgb(252,5,12)"/><text x="99.1823%" y="1007.50"></text></g><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (3 samples, 0.05%)</title><rect x="98.9166%" y="1029" width="0.0471%" height="15" fill="rgb(251,36,5)"/><text x="99.1666%" y="1039.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (2 samples, 0.03%)</title><rect x="98.9323%" y="1013" width="0.0314%" height="15" fill="rgb(217,53,14)"/><text x="99.1823%" y="1023.50"></text></g><g><title>CoreFoundation`__CFRunLoopFindMode (1 samples, 0.02%)</title><rect x="98.9480%" y="997" width="0.0157%" height="15" fill="rgb(215,86,45)"/><text x="99.1980%" y="1007.50"></text></g><g><title>CoreFoundation`CFSetGetValue (1 samples, 0.02%)</title><rect x="98.9480%" y="981" width="0.0157%" height="15" fill="rgb(242,169,11)"/><text x="99.1980%" y="991.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeEqual (1 samples, 0.02%)</title><rect x="98.9480%" y="965" width="0.0157%" height="15" fill="rgb(211,213,45)"/><text x="99.1980%" y="975.50"></text></g><g><title>AppKit`-[NSWindow _doDockingForWindowMovementWithEvent:] (1 samples, 0.02%)</title><rect x="98.9637%" y="981" width="0.0157%" height="15" fill="rgb(205,88,11)"/><text x="99.2137%" y="991.50"></text></g><g><title>AppKit`-[NSWindow _shouldDockWindow] (1 samples, 0.02%)</title><rect x="98.9637%" y="965" width="0.0157%" height="15" fill="rgb(252,69,26)"/><text x="99.2137%" y="975.50"></text></g><g><title>AppKit`NSWindowSnappingInfoPrefs (1 samples, 0.02%)</title><rect x="98.9637%" y="949" width="0.0157%" height="15" fill="rgb(246,123,37)"/><text x="99.2137%" y="959.50"></text></g><g><title>CoreFoundation`CFNotificationCenterAddObserver (1 samples, 0.02%)</title><rect x="98.9637%" y="933" width="0.0157%" height="15" fill="rgb(212,205,5)"/><text x="99.2137%" y="943.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegisterObserver (1 samples, 0.02%)</title><rect x="98.9637%" y="917" width="0.0157%" height="15" fill="rgb(253,148,0)"/><text x="99.2137%" y="927.50"></text></g><g><title>CoreFoundation`__CFXNotificationRegisterObserver1 (1 samples, 0.02%)</title><rect x="98.9637%" y="901" width="0.0157%" height="15" fill="rgb(239,22,4)"/><text x="99.2137%" y="911.50"></text></g><g><title>libxpc.dylib`xpc_dictionary_create (1 samples, 0.02%)</title><rect x="98.9637%" y="885" width="0.0157%" height="15" fill="rgb(226,26,53)"/><text x="99.2137%" y="895.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (1 samples, 0.02%)</title><rect x="98.9637%" y="869" width="0.0157%" height="15" fill="rgb(225,229,45)"/><text x="99.2137%" y="879.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (1 samples, 0.02%)</title><rect x="98.9637%" y="853" width="0.0157%" height="15" fill="rgb(220,60,37)"/><text x="99.2137%" y="863.50"></text></g><g><title>AppKit`-[NSWindow _internalHandleAppKitDefinedEvent:] (2 samples, 0.03%)</title><rect x="98.9637%" y="997" width="0.0314%" height="15" fill="rgb(217,180,35)"/><text x="99.2137%" y="1007.50"></text></g><g><title>AppKit`-[NSWindow _windowMoved:] (1 samples, 0.02%)</title><rect x="98.9794%" y="981" width="0.0157%" height="15" fill="rgb(229,7,53)"/><text x="99.2294%" y="991.50"></text></g><g><title>AppKit`-[NSWindow _windowMovedToRect:] (1 samples, 0.02%)</title><rect x="98.9794%" y="965" width="0.0157%" height="15" fill="rgb(254,137,3)"/><text x="99.2294%" y="975.50"></text></g><g><title>AppKit`-[NSWindow _setFrameCommon:display:fromServer:] (1 samples, 0.02%)</title><rect x="98.9794%" y="949" width="0.0157%" height="15" fill="rgb(215,140,41)"/><text x="99.2294%" y="959.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (1 samples, 0.02%)</title><rect x="98.9794%" y="933" width="0.0157%" height="15" fill="rgb(250,80,15)"/><text x="99.2294%" y="943.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (1 samples, 0.02%)</title><rect x="98.9794%" y="917" width="0.0157%" height="15" fill="rgb(252,191,6)"/><text x="99.2294%" y="927.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationRegistrar find:object:observer:enumerator:] (1 samples, 0.02%)</title><rect x="98.9794%" y="901" width="0.0157%" height="15" fill="rgb(246,217,18)"/><text x="99.2294%" y="911.50"></text></g><g><title>CoreFoundation`___CFXNotificationPost_block_invoke (1 samples, 0.02%)</title><rect x="98.9794%" y="885" width="0.0157%" height="15" fill="rgb(223,93,7)"/><text x="99.2294%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="98.9794%" y="869" width="0.0157%" height="15" fill="rgb(225,55,52)"/><text x="99.2294%" y="879.50"></text></g><g><title>AppKit`-[NSEvent deviceID] (1 samples, 0.02%)</title><rect x="98.9951%" y="885" width="0.0157%" height="15" fill="rgb(240,31,24)"/><text x="99.2451%" y="895.50"></text></g><g><title>MultitouchSupport`_mthid_getDeviceIDForRegistryEntryID (1 samples, 0.02%)</title><rect x="98.9951%" y="869" width="0.0157%" height="15" fill="rgb(205,56,52)"/><text x="99.2451%" y="879.50"></text></g><g><title>MultitouchSupport`_mthid_getDeviceIDForService (1 samples, 0.02%)</title><rect x="98.9951%" y="853" width="0.0157%" height="15" fill="rgb(246,146,12)"/><text x="99.2451%" y="863.50"></text></g><g><title>IOKit`IORegistryEntrySearchCFProperty (1 samples, 0.02%)</title><rect x="98.9951%" y="837" width="0.0157%" height="15" fill="rgb(239,84,36)"/><text x="99.2451%" y="847.50"></text></g><g><title>IOKit`io_registry_entry_get_property_bin_buf (1 samples, 0.02%)</title><rect x="98.9951%" y="821" width="0.0157%" height="15" fill="rgb(207,41,40)"/><text x="99.2451%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="98.9951%" y="805" width="0.0157%" height="15" fill="rgb(241,179,25)"/><text x="99.2451%" y="815.50"></text></g><g><title>rvfm_main`rvfm_main::fb_present_renderer::FramebufferPresentRenderer::render (1 samples, 0.02%)</title><rect x="99.0265%" y="645" width="0.0157%" height="15" fill="rgb(210,0,34)"/><text x="99.2765%" y="655.50"></text></g><g><title>rvfm_main`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (1 samples, 0.02%)</title><rect x="99.0265%" y="629" width="0.0157%" height="15" fill="rgb(225,217,29)"/><text x="99.2765%" y="639.50"></text></g><g><title>rvfm_main`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.02%)</title><rect x="99.0265%" y="613" width="0.0157%" height="15" fill="rgb(216,191,38)"/><text x="99.2765%" y="623.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_metal::Backend&gt;&gt;::end_render_pass (1 samples, 0.02%)</title><rect x="99.0265%" y="597" width="0.0157%" height="15" fill="rgb(232,140,52)"/><text x="99.2765%" y="607.50"></text></g><g><title>rvfm_main`gfx_backend_metal::command::EncoderState::end (1 samples, 0.02%)</title><rect x="99.0265%" y="581" width="0.0157%" height="15" fill="rgb(223,158,51)"/><text x="99.2765%" y="591.50"></text></g><g><title>AppleIntelHD5000GraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (1 samples, 0.02%)</title><rect x="99.0265%" y="565" width="0.0157%" height="15" fill="rgb(235,29,51)"/><text x="99.2765%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="99.0265%" y="549" width="0.0157%" height="15" fill="rgb(215,181,18)"/><text x="99.2765%" y="559.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (3 samples, 0.05%)</title><rect x="99.0108%" y="757" width="0.0471%" height="15" fill="rgb(227,125,34)"/><text x="99.2608%" y="767.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (3 samples, 0.05%)</title><rect x="99.0108%" y="741" width="0.0471%" height="15" fill="rgb(230,197,49)"/><text x="99.2608%" y="751.50"></text></g><g><title>rvfm_main`winit::platform_impl::platform::app_state::AppState::cleared (3 samples, 0.05%)</title><rect x="99.0108%" y="725" width="0.0471%" height="15" fill="rgb(239,141,16)"/><text x="99.2608%" y="735.50"></text></g><g><title>rvfm_main`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (3 samples, 0.05%)</title><rect x="99.0108%" y="709" width="0.0471%" height="15" fill="rgb(225,105,43)"/><text x="99.2608%" y="719.50"></text></g><g><title>rvfm_main`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (3 samples, 0.05%)</title><rect x="99.0108%" y="693" width="0.0471%" height="15" fill="rgb(214,131,14)"/><text x="99.2608%" y="703.50"></text></g><g><title>rvfm_main`rvfm_main::application_gui::ApplicationGUI::run::_{{closure}} (3 samples, 0.05%)</title><rect x="99.0108%" y="677" width="0.0471%" height="15" fill="rgb(229,177,11)"/><text x="99.2608%" y="687.50"></text></g><g><title>rvfm_main`rvfm_main::gpu::GpuWindowEventSink::render_event (3 samples, 0.05%)</title><rect x="99.0108%" y="661" width="0.0471%" height="15" fill="rgb(231,180,14)"/><text x="99.2608%" y="671.50"></text></g><g><title>rvfm_main`wgpu::SwapChain::get_current_frame (1 samples, 0.02%)</title><rect x="99.0422%" y="645" width="0.0157%" height="15" fill="rgb(232,88,2)"/><text x="99.2922%" y="655.50"></text></g><g><title>rvfm_main`wgpu_core::swap_chain::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_get_current_texture_view (1 samples, 0.02%)</title><rect x="99.0422%" y="629" width="0.0157%" height="15" fill="rgb(205,220,8)"/><text x="99.2922%" y="639.50"></text></g><g><title>rvfm_main`&lt;gfx_backend_metal::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_metal::Backend&gt;&gt;::acquire_image (1 samples, 0.02%)</title><rect x="99.0422%" y="613" width="0.0157%" height="15" fill="rgb(225,23,53)"/><text x="99.2922%" y="623.50"></text></g><g><title>rvfm_main`objc::rc::autorelease::autoreleasepool (1 samples, 0.02%)</title><rect x="99.0422%" y="597" width="0.0157%" height="15" fill="rgb(213,62,29)"/><text x="99.2922%" y="607.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (4 samples, 0.06%)</title><rect x="99.0108%" y="837" width="0.0628%" height="15" fill="rgb(227,75,7)"/><text x="99.2608%" y="847.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (4 samples, 0.06%)</title><rect x="99.0108%" y="821" width="0.0628%" height="15" fill="rgb(207,105,14)"/><text x="99.2608%" y="831.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (4 samples, 0.06%)</title><rect x="99.0108%" y="805" width="0.0628%" height="15" fill="rgb(245,62,29)"/><text x="99.2608%" y="815.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (4 samples, 0.06%)</title><rect x="99.0108%" y="789" width="0.0628%" height="15" fill="rgb(236,202,4)"/><text x="99.2608%" y="799.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (4 samples, 0.06%)</title><rect x="99.0108%" y="773" width="0.0628%" height="15" fill="rgb(250,67,1)"/><text x="99.2608%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="99.0579%" y="757" width="0.0157%" height="15" fill="rgb(253,115,44)"/><text x="99.3079%" y="767.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (5 samples, 0.08%)</title><rect x="99.0108%" y="885" width="0.0785%" height="15" fill="rgb(251,139,18)"/><text x="99.2608%" y="895.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (5 samples, 0.08%)</title><rect x="99.0108%" y="869" width="0.0785%" height="15" fill="rgb(218,22,32)"/><text x="99.2608%" y="879.50"></text></g><g><title>AppKit`_DPSNextEvent (5 samples, 0.08%)</title><rect x="99.0108%" y="853" width="0.0785%" height="15" fill="rgb(243,53,5)"/><text x="99.2608%" y="863.50"></text></g><g><title>HIToolbox`_HLTBRemoveEventSourceFromMode (1 samples, 0.02%)</title><rect x="99.0736%" y="837" width="0.0157%" height="15" fill="rgb(227,56,16)"/><text x="99.3236%" y="847.50"></text></g><g><title>CoreFoundation`CFBasicHashRemoveValue (1 samples, 0.02%)</title><rect x="99.0736%" y="821" width="0.0157%" height="15" fill="rgb(245,53,0)"/><text x="99.3236%" y="831.50"></text></g><g><title>AppKit`-[_NSThemeWidget mouseDown:] (7 samples, 0.11%)</title><rect x="98.9951%" y="981" width="0.1099%" height="15" fill="rgb(216,170,35)"/><text x="99.2451%" y="991.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (7 samples, 0.11%)</title><rect x="98.9951%" y="965" width="0.1099%" height="15" fill="rgb(211,200,8)"/><text x="99.2451%" y="975.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (7 samples, 0.11%)</title><rect x="98.9951%" y="949" width="0.1099%" height="15" fill="rgb(228,204,44)"/><text x="99.2451%" y="959.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (7 samples, 0.11%)</title><rect x="98.9951%" y="933" width="0.1099%" height="15" fill="rgb(214,121,17)"/><text x="99.2451%" y="943.50"></text></g><g><title>AppKit`NSControlTrackMouse (7 samples, 0.11%)</title><rect x="98.9951%" y="917" width="0.1099%" height="15" fill="rgb(233,64,38)"/><text x="99.2451%" y="927.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (7 samples, 0.11%)</title><rect x="98.9951%" y="901" width="0.1099%" height="15" fill="rgb(253,54,19)"/><text x="99.2451%" y="911.50"></text></g><g><title>AppKit`__NSControlTrackMouse_block_invoke.53 (1 samples, 0.02%)</title><rect x="99.0893%" y="885" width="0.0157%" height="15" fill="rgb(253,94,18)"/><text x="99.3393%" y="895.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (1 samples, 0.02%)</title><rect x="99.0893%" y="869" width="0.0157%" height="15" fill="rgb(227,57,52)"/><text x="99.3393%" y="879.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (1 samples, 0.02%)</title><rect x="99.0893%" y="853" width="0.0157%" height="15" fill="rgb(230,228,50)"/><text x="99.3393%" y="863.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (1 samples, 0.02%)</title><rect x="99.0893%" y="837" width="0.0157%" height="15" fill="rgb(217,205,27)"/><text x="99.3393%" y="847.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (1 samples, 0.02%)</title><rect x="99.0893%" y="821" width="0.0157%" height="15" fill="rgb(252,71,50)"/><text x="99.3393%" y="831.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (1 samples, 0.02%)</title><rect x="99.0893%" y="805" width="0.0157%" height="15" fill="rgb(209,86,4)"/><text x="99.3393%" y="815.50"></text></g><g><title>AppKit`-[NSControl updateLayer] (1 samples, 0.02%)</title><rect x="99.0893%" y="789" width="0.0157%" height="15" fill="rgb(229,94,0)"/><text x="99.3393%" y="799.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (1 samples, 0.02%)</title><rect x="99.0893%" y="773" width="0.0157%" height="15" fill="rgb(252,223,21)"/><text x="99.3393%" y="783.50"></text></g><g><title>AppKit`-[NSCompositeAppearance uniqueIdentifier] (1 samples, 0.02%)</title><rect x="99.0893%" y="757" width="0.0157%" height="15" fill="rgb(230,210,4)"/><text x="99.3393%" y="767.50"></text></g><g><title>Foundation`-[NSArray(NSKeyValueCoding) valueForKeyPath:] (1 samples, 0.02%)</title><rect x="99.0893%" y="741" width="0.0157%" height="15" fill="rgb(240,149,38)"/><text x="99.3393%" y="751.50"></text></g><g><title>Foundation`-[NSArray(NSKeyValueCoding) valueForKey:] (1 samples, 0.02%)</title><rect x="99.0893%" y="725" width="0.0157%" height="15" fill="rgb(254,105,20)"/><text x="99.3393%" y="735.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueCoding) valueForKey:] (1 samples, 0.02%)</title><rect x="99.0893%" y="709" width="0.0157%" height="15" fill="rgb(253,87,46)"/><text x="99.3393%" y="719.50"></text></g><g><title>AppKit`-[NSAppearance uniqueIdentifier] (1 samples, 0.02%)</title><rect x="99.0893%" y="693" width="0.0157%" height="15" fill="rgb(253,116,33)"/><text x="99.3393%" y="703.50"></text></g><g><title>Foundation`+[NSString stringWithFormat:] (1 samples, 0.02%)</title><rect x="99.0893%" y="677" width="0.0157%" height="15" fill="rgb(229,198,5)"/><text x="99.3393%" y="687.50"></text></g><g><title>CoreFoundation`_CFStringCreateWithFormatAndArgumentsAux2 (1 samples, 0.02%)</title><rect x="99.0893%" y="661" width="0.0157%" height="15" fill="rgb(242,38,37)"/><text x="99.3393%" y="671.50"></text></g><g><title>CoreFoundation`__CFStringAppendFormatCore (1 samples, 0.02%)</title><rect x="99.0893%" y="645" width="0.0157%" height="15" fill="rgb(242,69,53)"/><text x="99.3393%" y="655.50"></text></g><g><title>libsystem_c.dylib`snprintf_l (1 samples, 0.02%)</title><rect x="99.0893%" y="629" width="0.0157%" height="15" fill="rgb(249,80,16)"/><text x="99.3393%" y="639.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (1 samples, 0.02%)</title><rect x="99.0893%" y="613" width="0.0157%" height="15" fill="rgb(206,128,11)"/><text x="99.3393%" y="623.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (1 samples, 0.02%)</title><rect x="99.0893%" y="597" width="0.0157%" height="15" fill="rgb(212,35,20)"/><text x="99.3393%" y="607.50"></text></g><g><title>libsystem_c.dylib`__v2printf (1 samples, 0.02%)</title><rect x="99.0893%" y="581" width="0.0157%" height="15" fill="rgb(236,79,13)"/><text x="99.3393%" y="591.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (1 samples, 0.02%)</title><rect x="99.0893%" y="565" width="0.0157%" height="15" fill="rgb(233,123,3)"/><text x="99.3393%" y="575.50"></text></g><g><title>HIToolbox`TSMSimulateAppActivated (1 samples, 0.02%)</title><rect x="99.1050%" y="837" width="0.0157%" height="15" fill="rgb(214,93,52)"/><text x="99.3550%" y="847.50"></text></g><g><title>HIToolbox`TSMHandleAppActivatedEvent (1 samples, 0.02%)</title><rect x="99.1050%" y="821" width="0.0157%" height="15" fill="rgb(251,37,40)"/><text x="99.3550%" y="831.50"></text></g><g><title>HIToolbox`InstallActivateTSMDocument_Timer (1 samples, 0.02%)</title><rect x="99.1050%" y="805" width="0.0157%" height="15" fill="rgb(227,80,54)"/><text x="99.3550%" y="815.50"></text></g><g><title>HIToolbox`InstallEventLoopTimerInternal (1 samples, 0.02%)</title><rect x="99.1050%" y="789" width="0.0157%" height="15" fill="rgb(254,48,11)"/><text x="99.3550%" y="799.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.02%)</title><rect x="99.1050%" y="773" width="0.0157%" height="15" fill="rgb(235,193,26)"/><text x="99.3550%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="99.1050%" y="757" width="0.0157%" height="15" fill="rgb(229,99,21)"/><text x="99.3550%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.1050%" y="741" width="0.0157%" height="15" fill="rgb(211,140,41)"/><text x="99.3550%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.1050%" y="725" width="0.0157%" height="15" fill="rgb(240,227,30)"/><text x="99.3550%" y="735.50"></text></g><g><title>AppKit`_NXFinishActivation (2 samples, 0.03%)</title><rect x="99.1050%" y="981" width="0.0314%" height="15" fill="rgb(215,224,45)"/><text x="99.3550%" y="991.50"></text></g><g><title>HIToolbox`SendEventToEventTarget (2 samples, 0.03%)</title><rect x="99.1050%" y="965" width="0.0314%" height="15" fill="rgb(206,123,31)"/><text x="99.3550%" y="975.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (2 samples, 0.03%)</title><rect x="99.1050%" y="949" width="0.0314%" height="15" fill="rgb(210,138,16)"/><text x="99.3550%" y="959.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (2 samples, 0.03%)</title><rect x="99.1050%" y="933" width="0.0314%" height="15" fill="rgb(228,57,28)"/><text x="99.3550%" y="943.50"></text></g><g><title>HIToolbox`ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (2 samples, 0.03%)</title><rect x="99.1050%" y="917" width="0.0314%" height="15" fill="rgb(242,170,10)"/><text x="99.3550%" y="927.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (2 samples, 0.03%)</title><rect x="99.1050%" y="901" width="0.0314%" height="15" fill="rgb(228,214,39)"/><text x="99.3550%" y="911.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (2 samples, 0.03%)</title><rect x="99.1050%" y="885" width="0.0314%" height="15" fill="rgb(218,179,33)"/><text x="99.3550%" y="895.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (2 samples, 0.03%)</title><rect x="99.1050%" y="869" width="0.0314%" height="15" fill="rgb(235,193,39)"/><text x="99.3550%" y="879.50"></text></g><g><title>HIToolbox`TSMAppActivationHandler (2 samples, 0.03%)</title><rect x="99.1050%" y="853" width="0.0314%" height="15" fill="rgb(219,221,36)"/><text x="99.3550%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`voucher_mach_msg_set (1 samples, 0.02%)</title><rect x="99.1207%" y="837" width="0.0157%" height="15" fill="rgb(248,218,19)"/><text x="99.3707%" y="847.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (10 samples, 0.16%)</title><rect x="98.9951%" y="997" width="0.1570%" height="15" fill="rgb(205,50,9)"/><text x="99.2451%" y="1007.50"></text></g><g><title>AppKit`_NXShowKeyAndMain (1 samples, 0.02%)</title><rect x="99.1364%" y="981" width="0.0157%" height="15" fill="rgb(238,81,28)"/><text x="99.3864%" y="991.50"></text></g><g><title>AppKit`-[NSWindow becomeKeyWindow] (1 samples, 0.02%)</title><rect x="99.1364%" y="965" width="0.0157%" height="15" fill="rgb(235,110,19)"/><text x="99.3864%" y="975.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _updateEventMaskDueToBecomingKey] (1 samples, 0.02%)</title><rect x="99.1364%" y="949" width="0.0157%" height="15" fill="rgb(214,7,14)"/><text x="99.3864%" y="959.50"></text></g><g><title>SkyLight`SLSSetMouseFocusWindow (1 samples, 0.02%)</title><rect x="99.1364%" y="933" width="0.0157%" height="15" fill="rgb(211,77,3)"/><text x="99.3864%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="99.1364%" y="917" width="0.0157%" height="15" fill="rgb(229,5,9)"/><text x="99.3864%" y="927.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (13 samples, 0.20%)</title><rect x="98.9637%" y="1013" width="0.2041%" height="15" fill="rgb(225,90,11)"/><text x="99.2137%" y="1023.50"></text></g><g><title>rvfm_main`winit::platform_impl::platform::view::mouse_motion (1 samples, 0.02%)</title><rect x="99.1521%" y="997" width="0.0157%" height="15" fill="rgb(242,56,8)"/><text x="99.4021%" y="1007.50"></text></g><g><title>rvfm_main`objc::runtime::Object::get_ivar (1 samples, 0.02%)</title><rect x="99.1521%" y="981" width="0.0157%" height="15" fill="rgb(249,212,39)"/><text x="99.4021%" y="991.50"></text></g><g><title>rvfm_main`objc::runtime::Class::instance_variable (1 samples, 0.02%)</title><rect x="99.1521%" y="965" width="0.0157%" height="15" fill="rgb(236,90,9)"/><text x="99.4021%" y="975.50"></text></g><g><title>libobjc.A.dylib`_class_getVariable (1 samples, 0.02%)</title><rect x="99.1521%" y="949" width="0.0157%" height="15" fill="rgb(206,88,35)"/><text x="99.4021%" y="959.50"></text></g><g><title>libobjc.A.dylib`getIvar(objc_class*, char const*) (1 samples, 0.02%)</title><rect x="99.1521%" y="933" width="0.0157%" height="15" fill="rgb(205,126,30)"/><text x="99.4021%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_strcmp (1 samples, 0.02%)</title><rect x="99.1521%" y="917" width="0.0157%" height="15" fill="rgb(230,176,12)"/><text x="99.4021%" y="927.50"></text></g><g><title>AppKit`-[NSWindow(NSGestureRecognizer_Routing) _sendEventToGestureRecognizers:requireAcceptsFirstMouse:] (1 samples, 0.02%)</title><rect x="99.1678%" y="1013" width="0.0157%" height="15" fill="rgb(243,19,9)"/><text x="99.4178%" y="1023.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (21 samples, 0.33%)</title><rect x="98.8695%" y="1045" width="0.3297%" height="15" fill="rgb(245,171,17)"/><text x="99.1195%" y="1055.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (15 samples, 0.24%)</title><rect x="98.9637%" y="1029" width="0.2355%" height="15" fill="rgb(227,52,21)"/><text x="99.2137%" y="1039.50"></text></g><g><title>rvfm_main`winit::platform_impl::platform::view::mouse_motion (1 samples, 0.02%)</title><rect x="99.1835%" y="1013" width="0.0157%" height="15" fill="rgb(238,69,14)"/><text x="99.4335%" y="1023.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (1 samples, 0.02%)</title><rect x="99.1992%" y="1045" width="0.0157%" height="15" fill="rgb(241,156,39)"/><text x="99.4492%" y="1055.50"></text></g><g><title>libobjc.A.dylib`search_builtins(char const*) (1 samples, 0.02%)</title><rect x="99.1992%" y="1029" width="0.0157%" height="15" fill="rgb(212,227,28)"/><text x="99.4492%" y="1039.50"></text></g><g><title>libdyld.dylib`_dyld_get_objc_selector (1 samples, 0.02%)</title><rect x="99.1992%" y="1013" width="0.0157%" height="15" fill="rgb(209,118,27)"/><text x="99.4492%" y="1023.50"></text></g><g><title>AppKit`-[NSApplication run] (737 samples, 11.57%)</title><rect x="87.6590%" y="1077" width="11.5717%" height="15" fill="rgb(226,102,5)"/><text x="87.9090%" y="1087.50">AppKit`-[NSApplic..</text></g><g><title>rvfm_main`winit::platform_impl::platform::app::send_event (23 samples, 0.36%)</title><rect x="98.8695%" y="1061" width="0.3611%" height="15" fill="rgb(223,34,3)"/><text x="99.1195%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="99.2149%" y="1045" width="0.0157%" height="15" fill="rgb(221,81,38)"/><text x="99.4649%" y="1055.50"></text></g><g><title>rvfm_main`std::process::exit (9 samples, 0.14%)</title><rect x="99.2306%" y="1077" width="0.1413%" height="15" fill="rgb(236,219,28)"/><text x="99.4806%" y="1087.50"></text></g><g><title>rvfm_main`std::sys::unix::os::exit (9 samples, 0.14%)</title><rect x="99.2306%" y="1061" width="0.1413%" height="15" fill="rgb(213,200,14)"/><text x="99.4806%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__exit (9 samples, 0.14%)</title><rect x="99.2306%" y="1045" width="0.1413%" height="15" fill="rgb(240,33,19)"/><text x="99.4806%" y="1055.50"></text></g><g><title>rvfm_main`winit::event_loop::EventLoop&lt;T&gt;::run (747 samples, 11.73%)</title><rect x="87.6590%" y="1109" width="11.7287%" height="15" fill="rgb(233,113,27)"/><text x="87.9090%" y="1119.50">rvfm_main`winit::..</text></g><g><title>rvfm_main`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (747 samples, 11.73%)</title><rect x="87.6590%" y="1093" width="11.7287%" height="15" fill="rgb(220,221,18)"/><text x="87.9090%" y="1103.50">rvfm_main`winit::..</text></g><g><title>rvfm_main`winit::platform_impl::platform::app_state::AppState::exit (1 samples, 0.02%)</title><rect x="99.3720%" y="1077" width="0.0157%" height="15" fill="rgb(238,92,8)"/><text x="99.6220%" y="1087.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="99.3720%" y="1061" width="0.0157%" height="15" fill="rgb(222,164,16)"/><text x="99.6220%" y="1071.50"></text></g><g><title>rvfm_main`core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="99.3720%" y="1045" width="0.0157%" height="15" fill="rgb(241,119,3)"/><text x="99.6220%" y="1055.50"></text></g><g><title>rvfm_main`&lt;winit::platform_impl::platform::util::IdRef as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.3720%" y="1029" width="0.0157%" height="15" fill="rgb(241,44,8)"/><text x="99.6220%" y="1039.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="99.3720%" y="1013" width="0.0157%" height="15" fill="rgb(230,36,40)"/><text x="99.6220%" y="1023.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.02%)</title><rect x="99.3720%" y="997" width="0.0157%" height="15" fill="rgb(243,16,36)"/><text x="99.6220%" y="1007.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter addObserver:selector:name:object:] (1 samples, 0.02%)</title><rect x="99.3877%" y="965" width="0.0157%" height="15" fill="rgb(231,4,26)"/><text x="99.6377%" y="975.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter _addOrRemoveObserver:forName:isAdding:] (1 samples, 0.02%)</title><rect x="99.3877%" y="949" width="0.0157%" height="15" fill="rgb(240,9,31)"/><text x="99.6377%" y="959.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter _createSubsystemIfNecessary:] (1 samples, 0.02%)</title><rect x="99.3877%" y="933" width="0.0157%" height="15" fill="rgb(207,173,15)"/><text x="99.6377%" y="943.50"></text></g><g><title>AppKit`createAccessibilityDisplaySubsystem (1 samples, 0.02%)</title><rect x="99.3877%" y="917" width="0.0157%" height="15" fill="rgb(224,192,53)"/><text x="99.6377%" y="927.50"></text></g><g><title>Foundation`-[NSDistributedNotificationCenter addObserver:selector:name:object:suspensionBehavior:] (1 samples, 0.02%)</title><rect x="99.3877%" y="901" width="0.0157%" height="15" fill="rgb(223,67,28)"/><text x="99.6377%" y="911.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegisterObserver (1 samples, 0.02%)</title><rect x="99.3877%" y="885" width="0.0157%" height="15" fill="rgb(211,20,47)"/><text x="99.6377%" y="895.50"></text></g><g><title>CoreFoundation`__CFXNotificationRegisterObserver1 (1 samples, 0.02%)</title><rect x="99.3877%" y="869" width="0.0157%" height="15" fill="rgb(240,228,2)"/><text x="99.6377%" y="879.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationRegistrar add:object:observer:tokenRegistration:] (1 samples, 0.02%)</title><rect x="99.3877%" y="853" width="0.0157%" height="15" fill="rgb(248,151,12)"/><text x="99.6377%" y="863.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationNameWildcardObjectRegistration acquireObserver:options:] (1 samples, 0.02%)</title><rect x="99.3877%" y="837" width="0.0157%" height="15" fill="rgb(244,8,39)"/><text x="99.6377%" y="847.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationObjcObserverRegistration initWithObserver:parent:] (1 samples, 0.02%)</title><rect x="99.3877%" y="821" width="0.0157%" height="15" fill="rgb(222,26,8)"/><text x="99.6377%" y="831.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationObserverRegistration initWithObserver:parent:] (1 samples, 0.02%)</title><rect x="99.3877%" y="805" width="0.0157%" height="15" fill="rgb(213,106,44)"/><text x="99.6377%" y="815.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationRegistrationContainer initWithParent:childKeyCallbacks:] (1 samples, 0.02%)</title><rect x="99.3877%" y="789" width="0.0157%" height="15" fill="rgb(214,129,20)"/><text x="99.6377%" y="799.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationRegistrationBase initWithParent:] (1 samples, 0.02%)</title><rect x="99.3877%" y="773" width="0.0157%" height="15" fill="rgb(212,32,13)"/><text x="99.6377%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (1 samples, 0.02%)</title><rect x="99.3877%" y="757" width="0.0157%" height="15" fill="rgb(208,168,33)"/><text x="99.6377%" y="767.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (1 samples, 0.02%)</title><rect x="99.3877%" y="741" width="0.0157%" height="15" fill="rgb(231,207,8)"/><text x="99.6377%" y="751.50"></text></g><g><title>libobjc.A.dylib`weak_resize(weak_table_t*, unsigned long) (1 samples, 0.02%)</title><rect x="99.3877%" y="725" width="0.0157%" height="15" fill="rgb(235,219,23)"/><text x="99.6377%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="99.3877%" y="709" width="0.0157%" height="15" fill="rgb(226,216,26)"/><text x="99.6377%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="99.3877%" y="693" width="0.0157%" height="15" fill="rgb(239,137,16)"/><text x="99.6377%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.3877%" y="677" width="0.0157%" height="15" fill="rgb(207,12,36)"/><text x="99.6377%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.3877%" y="661" width="0.0157%" height="15" fill="rgb(210,214,24)"/><text x="99.6377%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="99.3877%" y="645" width="0.0157%" height="15" fill="rgb(206,56,30)"/><text x="99.6377%" y="655.50"></text></g><g><title>AppKit`-[NSAppearance _commonInit] (1 samples, 0.02%)</title><rect x="99.4034%" y="805" width="0.0157%" height="15" fill="rgb(228,143,26)"/><text x="99.6534%" y="815.50"></text></g><g><title>AppKit`__27-[NSAppearance _commonInit]_block_invoke (1 samples, 0.02%)</title><rect x="99.4034%" y="789" width="0.0157%" height="15" fill="rgb(216,218,46)"/><text x="99.6534%" y="799.50"></text></g><g><title>CoreUI`CUIRendererCopyProperties (1 samples, 0.02%)</title><rect x="99.4034%" y="773" width="0.0157%" height="15" fill="rgb(206,6,19)"/><text x="99.6534%" y="783.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CopyProperties (1 samples, 0.02%)</title><rect x="99.4034%" y="757" width="0.0157%" height="15" fill="rgb(239,177,51)"/><text x="99.6534%" y="767.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryI objectForKey:] (1 samples, 0.02%)</title><rect x="99.4034%" y="741" width="0.0157%" height="15" fill="rgb(216,55,25)"/><text x="99.6534%" y="751.50"></text></g><g><title>CoreFoundation`-[__NSCFString isEqual:] (1 samples, 0.02%)</title><rect x="99.4034%" y="725" width="0.0157%" height="15" fill="rgb(231,163,29)"/><text x="99.6534%" y="735.50"></text></g><g><title>CoreFoundation`__CFStringEqual (1 samples, 0.02%)</title><rect x="99.4034%" y="709" width="0.0157%" height="15" fill="rgb(232,149,50)"/><text x="99.6534%" y="719.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (3 samples, 0.05%)</title><rect x="99.3877%" y="1061" width="0.0471%" height="15" fill="rgb(223,142,48)"/><text x="99.6377%" y="1071.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (3 samples, 0.05%)</title><rect x="99.3877%" y="1045" width="0.0471%" height="15" fill="rgb(245,83,23)"/><text x="99.6377%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.05%)</title><rect x="99.3877%" y="1029" width="0.0471%" height="15" fill="rgb(224,63,2)"/><text x="99.6377%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.05%)</title><rect x="99.3877%" y="1013" width="0.0471%" height="15" fill="rgb(218,65,53)"/><text x="99.6377%" y="1023.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (3 samples, 0.05%)</title><rect x="99.3877%" y="997" width="0.0471%" height="15" fill="rgb(221,84,29)"/><text x="99.6377%" y="1007.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (3 samples, 0.05%)</title><rect x="99.3877%" y="981" width="0.0471%" height="15" fill="rgb(234,0,32)"/><text x="99.6377%" y="991.50"></text></g><g><title>AppKit`_NSAppearanceCurrentSystemAppearance (2 samples, 0.03%)</title><rect x="99.4034%" y="965" width="0.0314%" height="15" fill="rgb(206,20,16)"/><text x="99.6534%" y="975.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (2 samples, 0.03%)</title><rect x="99.4034%" y="949" width="0.0314%" height="15" fill="rgb(244,172,18)"/><text x="99.6534%" y="959.50"></text></g><g><title>AppKit`+[NSAppearance _aquaAppearance] (2 samples, 0.03%)</title><rect x="99.4034%" y="933" width="0.0314%" height="15" fill="rgb(254,133,1)"/><text x="99.6534%" y="943.50"></text></g><g><title>AppKit`+[NSAppearance _initializeCoreUI] (2 samples, 0.03%)</title><rect x="99.4034%" y="917" width="0.0314%" height="15" fill="rgb(222,206,41)"/><text x="99.6534%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.03%)</title><rect x="99.4034%" y="901" width="0.0314%" height="15" fill="rgb(212,3,42)"/><text x="99.6534%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.03%)</title><rect x="99.4034%" y="885" width="0.0314%" height="15" fill="rgb(241,11,4)"/><text x="99.6534%" y="895.50"></text></g><g><title>AppKit`__33+[NSAppearance _initializeCoreUI]_block_invoke (2 samples, 0.03%)</title><rect x="99.4034%" y="869" width="0.0314%" height="15" fill="rgb(205,19,26)"/><text x="99.6534%" y="879.50"></text></g><g><title>Foundation`_NSFaultInObject (2 samples, 0.03%)</title><rect x="99.4034%" y="853" width="0.0314%" height="15" fill="rgb(210,179,32)"/><text x="99.6534%" y="863.50"></text></g><g><title>AppKit`-[NSBuiltinAppearance initWithBundleResourceName:publicName:] (2 samples, 0.03%)</title><rect x="99.4034%" y="837" width="0.0314%" height="15" fill="rgb(227,116,49)"/><text x="99.6534%" y="847.50"></text></g><g><title>AppKit`-[NSAppearance initWithAppearanceNamed:bundle:] (2 samples, 0.03%)</title><rect x="99.4034%" y="821" width="0.0314%" height="15" fill="rgb(211,146,6)"/><text x="99.6534%" y="831.50"></text></g><g><title>Foundation`-[NSBundle bundleIdentifier] (1 samples, 0.02%)</title><rect x="99.4191%" y="805" width="0.0157%" height="15" fill="rgb(219,44,39)"/><text x="99.6691%" y="815.50"></text></g><g><title>Foundation`-[NSBundle infoDictionary] (1 samples, 0.02%)</title><rect x="99.4191%" y="789" width="0.0157%" height="15" fill="rgb(234,128,11)"/><text x="99.6691%" y="799.50"></text></g><g><title>Foundation`-[NSBundle _cfBundle] (1 samples, 0.02%)</title><rect x="99.4191%" y="773" width="0.0157%" height="15" fill="rgb(220,183,53)"/><text x="99.6691%" y="783.50"></text></g><g><title>CoreFoundation`_CFBundleCreate (1 samples, 0.02%)</title><rect x="99.4191%" y="757" width="0.0157%" height="15" fill="rgb(213,219,32)"/><text x="99.6691%" y="767.50"></text></g><g><title>CoreFoundation`CFBundleGetInfoDictionary (1 samples, 0.02%)</title><rect x="99.4191%" y="741" width="0.0157%" height="15" fill="rgb(232,156,16)"/><text x="99.6691%" y="751.50"></text></g><g><title>CoreFoundation`_CFBundleRefreshInfoDictionaryAlreadyLocked (1 samples, 0.02%)</title><rect x="99.4191%" y="725" width="0.0157%" height="15" fill="rgb(246,135,34)"/><text x="99.6691%" y="735.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInDirectoryWithVersion (1 samples, 0.02%)</title><rect x="99.4191%" y="709" width="0.0157%" height="15" fill="rgb(241,99,0)"/><text x="99.6691%" y="719.50"></text></g><g><title>CoreFoundation`CFURLCreateDataAndPropertiesFromResource (1 samples, 0.02%)</title><rect x="99.4191%" y="693" width="0.0157%" height="15" fill="rgb(222,103,45)"/><text x="99.6691%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="99.4191%" y="677" width="0.0157%" height="15" fill="rgb(212,57,4)"/><text x="99.6691%" y="687.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) setGestureEventMask:] (1 samples, 0.02%)</title><rect x="99.4348%" y="1061" width="0.0157%" height="15" fill="rgb(215,68,47)"/><text x="99.6848%" y="1071.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _setGestureEventMask:] (1 samples, 0.02%)</title><rect x="99.4348%" y="1045" width="0.0157%" height="15" fill="rgb(230,84,2)"/><text x="99.6848%" y="1055.50"></text></g><g><title>HIToolbox`InstallEventHandler (1 samples, 0.02%)</title><rect x="99.4348%" y="1029" width="0.0157%" height="15" fill="rgb(220,102,14)"/><text x="99.6848%" y="1039.50"></text></g><g><title>HIToolbox`PushEventHandler(EventTargetRec*, int (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*), unsigned char, unsigned long, EventTypeSpec const*, void*, OpaqueEventHandlerRef**) (1 samples, 0.02%)</title><rect x="99.4348%" y="1013" width="0.0157%" height="15" fill="rgb(240,10,32)"/><text x="99.6848%" y="1023.50"></text></g><g><title>HIToolbox`GetHandlerExternalRefFromInternalRef(HandlerRec*) (1 samples, 0.02%)</title><rect x="99.4348%" y="997" width="0.0157%" height="15" fill="rgb(215,47,27)"/><text x="99.6848%" y="1007.50"></text></g><g><title>CoreFoundation`CFDictionaryAddValue (1 samples, 0.02%)</title><rect x="99.4348%" y="981" width="0.0157%" height="15" fill="rgb(233,188,43)"/><text x="99.6848%" y="991.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (1 samples, 0.02%)</title><rect x="99.4348%" y="965" width="0.0157%" height="15" fill="rgb(253,190,1)"/><text x="99.6848%" y="975.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (1 samples, 0.02%)</title><rect x="99.4505%" y="1061" width="0.0157%" height="15" fill="rgb(206,114,52)"/><text x="99.7005%" y="1071.50"></text></g><g><title>AppKit`+[_NSScreenConfiguration prepare] (1 samples, 0.02%)</title><rect x="99.4505%" y="1045" width="0.0157%" height="15" fill="rgb(233,120,37)"/><text x="99.7005%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="99.4505%" y="1029" width="0.0157%" height="15" fill="rgb(214,52,39)"/><text x="99.7005%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="99.4505%" y="1013" width="0.0157%" height="15" fill="rgb(223,80,29)"/><text x="99.7005%" y="1023.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (1 samples, 0.02%)</title><rect x="99.4505%" y="997" width="0.0157%" height="15" fill="rgb(230,101,40)"/><text x="99.7005%" y="1007.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (1 samples, 0.02%)</title><rect x="99.4505%" y="981" width="0.0157%" height="15" fill="rgb(219,211,8)"/><text x="99.7005%" y="991.50"></text></g><g><title>AppKit`+[NSCGSDisplay uniqueDisplays] (1 samples, 0.02%)</title><rect x="99.4505%" y="965" width="0.0157%" height="15" fill="rgb(252,126,28)"/><text x="99.7005%" y="975.50"></text></g><g><title>AppKit`_NSCGSCreateArrayUsingBlock (1 samples, 0.02%)</title><rect x="99.4505%" y="949" width="0.0157%" height="15" fill="rgb(215,56,38)"/><text x="99.7005%" y="959.50"></text></g><g><title>AppKit`___NSCGSCreateDisplaysFromDisplayIDsUsingPredicate_block_invoke (1 samples, 0.02%)</title><rect x="99.4505%" y="933" width="0.0157%" height="15" fill="rgb(249,55,44)"/><text x="99.7005%" y="943.50"></text></g><g><title>AppKit`-[NSCGSDisplay initWithDisplayID:flipOffset:] (1 samples, 0.02%)</title><rect x="99.4505%" y="917" width="0.0157%" height="15" fill="rgb(220,221,32)"/><text x="99.7005%" y="927.50"></text></g><g><title>SkyLight`SLSCopyDisplayColorSpace (1 samples, 0.02%)</title><rect x="99.4505%" y="901" width="0.0157%" height="15" fill="rgb(212,216,41)"/><text x="99.7005%" y="911.50"></text></g><g><title>SkyLight`CGSColorSpaceRegistryCopyColorSpace (1 samples, 0.02%)</title><rect x="99.4505%" y="885" width="0.0157%" height="15" fill="rgb(228,213,43)"/><text x="99.7005%" y="895.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithICCData (1 samples, 0.02%)</title><rect x="99.4505%" y="869" width="0.0157%" height="15" fill="rgb(211,31,26)"/><text x="99.7005%" y="879.50"></text></g><g><title>CoreGraphics`CGColorSpaceFindMatchingSingleton (1 samples, 0.02%)</title><rect x="99.4505%" y="853" width="0.0157%" height="15" fill="rgb(229,202,19)"/><text x="99.7005%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="99.4505%" y="837" width="0.0157%" height="15" fill="rgb(229,105,46)"/><text x="99.7005%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="99.4505%" y="821" width="0.0157%" height="15" fill="rgb(235,108,1)"/><text x="99.7005%" y="831.50"></text></g><g><title>CoreGraphics`__CGColorSpaceFindMatchingSingleton_block_invoke_2 (1 samples, 0.02%)</title><rect x="99.4505%" y="805" width="0.0157%" height="15" fill="rgb(245,111,35)"/><text x="99.7005%" y="815.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithName (1 samples, 0.02%)</title><rect x="99.4505%" y="789" width="0.0157%" height="15" fill="rgb(219,185,31)"/><text x="99.7005%" y="799.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateGenericRGBLinear (1 samples, 0.02%)</title><rect x="99.4505%" y="773" width="0.0157%" height="15" fill="rgb(214,4,43)"/><text x="99.7005%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="99.4505%" y="757" width="0.0157%" height="15" fill="rgb(235,227,40)"/><text x="99.7005%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="99.4505%" y="741" width="0.0157%" height="15" fill="rgb(230,88,30)"/><text x="99.7005%" y="751.50"></text></g><g><title>CoreGraphics`__CGColorSpaceCreateGenericRGBLinear_block_invoke (1 samples, 0.02%)</title><rect x="99.4505%" y="725" width="0.0157%" height="15" fill="rgb(216,217,1)"/><text x="99.7005%" y="735.50"></text></g><g><title>CoreGraphics`create_singleton (1 samples, 0.02%)</title><rect x="99.4505%" y="709" width="0.0157%" height="15" fill="rgb(248,139,50)"/><text x="99.7005%" y="719.50"></text></g><g><title>CoreGraphics`color_space_state_create_generic_rgb_linear (1 samples, 0.02%)</title><rect x="99.4505%" y="693" width="0.0157%" height="15" fill="rgb(233,1,21)"/><text x="99.7005%" y="703.50"></text></g><g><title>CoreGraphics`CGCMSUtilsCreateDataForGenericHDR (1 samples, 0.02%)</title><rect x="99.4505%" y="677" width="0.0157%" height="15" fill="rgb(215,183,12)"/><text x="99.7005%" y="687.50"></text></g><g><title>ColorSync`ColorSyncMakeProfile (1 samples, 0.02%)</title><rect x="99.4505%" y="661" width="0.0157%" height="15" fill="rgb(229,104,42)"/><text x="99.7005%" y="671.50"></text></g><g><title>libsystem_c.dylib`localtime (1 samples, 0.02%)</title><rect x="99.4505%" y="645" width="0.0157%" height="15" fill="rgb(243,34,48)"/><text x="99.7005%" y="655.50"></text></g><g><title>libsystem_c.dylib`_st_localsub (1 samples, 0.02%)</title><rect x="99.4505%" y="629" width="0.0157%" height="15" fill="rgb(239,11,44)"/><text x="99.7005%" y="639.50"></text></g><g><title>AppKit`-[NSResponder init] (1 samples, 0.02%)</title><rect x="99.4662%" y="1061" width="0.0157%" height="15" fill="rgb(231,98,35)"/><text x="99.7162%" y="1071.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (1 samples, 0.02%)</title><rect x="99.4662%" y="1045" width="0.0157%" height="15" fill="rgb(233,28,25)"/><text x="99.7162%" y="1055.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.02%)</title><rect x="99.4662%" y="1029" width="0.0157%" height="15" fill="rgb(234,123,11)"/><text x="99.7162%" y="1039.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.02%)</title><rect x="99.4662%" y="1013" width="0.0157%" height="15" fill="rgb(220,69,3)"/><text x="99.7162%" y="1023.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.02%)</title><rect x="99.4662%" y="997" width="0.0157%" height="15" fill="rgb(214,64,36)"/><text x="99.7162%" y="1007.50"></text></g><g><title>AppKit`_NSDPAccessorSelectorFromComponents (1 samples, 0.02%)</title><rect x="99.4662%" y="981" width="0.0157%" height="15" fill="rgb(211,138,32)"/><text x="99.7162%" y="991.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (1 samples, 0.02%)</title><rect x="99.4662%" y="965" width="0.0157%" height="15" fill="rgb(213,118,47)"/><text x="99.7162%" y="975.50"></text></g><g><title>libobjc.A.dylib`search_builtins(char const*) (1 samples, 0.02%)</title><rect x="99.4662%" y="949" width="0.0157%" height="15" fill="rgb(243,124,49)"/><text x="99.7162%" y="959.50"></text></g><g><title>libdyld.dylib`_dyld_get_objc_selector (1 samples, 0.02%)</title><rect x="99.4662%" y="933" width="0.0157%" height="15" fill="rgb(221,30,28)"/><text x="99.7162%" y="943.50"></text></g><g><title>libdyld.dylib`objc_opt::objc_stringhash_t::getIndex (1 samples, 0.02%)</title><rect x="99.4662%" y="917" width="0.0157%" height="15" fill="rgb(246,37,13)"/><text x="99.7162%" y="927.50"></text></g><g><title>CoreFoundation`_CFBundleCopyInfoDictionaryInResourceForkWithAllocator (1 samples, 0.02%)</title><rect x="99.4819%" y="981" width="0.0157%" height="15" fill="rgb(249,66,14)"/><text x="99.7319%" y="991.50"></text></g><g><title>CoreFoundation`_CFBundleForksCouldBeResourceFile (1 samples, 0.02%)</title><rect x="99.4819%" y="965" width="0.0157%" height="15" fill="rgb(213,166,5)"/><text x="99.7319%" y="975.50"></text></g><g><title>CoreFoundation`CFURLCopyResourcePropertyForKey (1 samples, 0.02%)</title><rect x="99.4819%" y="949" width="0.0157%" height="15" fill="rgb(221,66,24)"/><text x="99.7319%" y="959.50"></text></g><g><title>CoreServicesInternal`_FSURLCopyResourcePropertyForKeyInternal(__CFURL const*, __CFString const*, void*, void*, __CFError**, unsigned char) (1 samples, 0.02%)</title><rect x="99.4819%" y="933" width="0.0157%" height="15" fill="rgb(210,132,17)"/><text x="99.7319%" y="943.50"></text></g><g><title>CoreServicesInternal`prepareValuesForBitmap(__CFURL const*, __FileCache*, _FilePropertyBitmap*, __CFError**) (1 samples, 0.02%)</title><rect x="99.4819%" y="917" width="0.0157%" height="15" fill="rgb(243,202,5)"/><text x="99.7319%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (1 samples, 0.02%)</title><rect x="99.4819%" y="901" width="0.0157%" height="15" fill="rgb(233,70,48)"/><text x="99.7319%" y="911.50"></text></g><g><title>LaunchServices`_LSRegisterSelf (1 samples, 0.02%)</title><rect x="99.4976%" y="965" width="0.0157%" height="15" fill="rgb(238,41,26)"/><text x="99.7476%" y="975.50"></text></g><g><title>LaunchServices`+[_LSDService XPCProxyWithErrorHandler:] (1 samples, 0.02%)</title><rect x="99.4976%" y="949" width="0.0157%" height="15" fill="rgb(241,19,31)"/><text x="99.7476%" y="959.50"></text></g><g><title>LaunchServices`+[_LSDService synchronous:XPCProxyWithErrorHandler:] (1 samples, 0.02%)</title><rect x="99.4976%" y="933" width="0.0157%" height="15" fill="rgb(214,76,10)"/><text x="99.7476%" y="943.50"></text></g><g><title>LaunchServices`+[_LSDService XPCConnectionToService] (1 samples, 0.02%)</title><rect x="99.4976%" y="917" width="0.0157%" height="15" fill="rgb(254,202,22)"/><text x="99.7476%" y="927.50"></text></g><g><title>LaunchServices`_LSLazyLoadObjectForKey (1 samples, 0.02%)</title><rect x="99.4976%" y="901" width="0.0157%" height="15" fill="rgb(214,72,24)"/><text x="99.7476%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.02%)</title><rect x="99.4976%" y="885" width="0.0157%" height="15" fill="rgb(221,92,46)"/><text x="99.7476%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="99.4976%" y="869" width="0.0157%" height="15" fill="rgb(246,13,50)"/><text x="99.7476%" y="879.50"></text></g><g><title>LaunchServices`___LSLazyLoadObjectForKey_block_invoke.59 (1 samples, 0.02%)</title><rect x="99.4976%" y="853" width="0.0157%" height="15" fill="rgb(240,165,38)"/><text x="99.7476%" y="863.50"></text></g><g><title>LaunchServices`__37+[_LSDService XPCConnectionToService]_block_invoke_2 (1 samples, 0.02%)</title><rect x="99.4976%" y="837" width="0.0157%" height="15" fill="rgb(241,24,51)"/><text x="99.7476%" y="847.50"></text></g><g><title>LaunchServices`+[_LSDModifyService XPCInterface] (1 samples, 0.02%)</title><rect x="99.4976%" y="821" width="0.0157%" height="15" fill="rgb(227,51,44)"/><text x="99.7476%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="99.4976%" y="805" width="0.0157%" height="15" fill="rgb(231,121,3)"/><text x="99.7476%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="99.4976%" y="789" width="0.0157%" height="15" fill="rgb(245,3,41)"/><text x="99.7476%" y="799.50"></text></g><g><title>LaunchServices`__33+[_LSDModifyService XPCInterface]_block_invoke (1 samples, 0.02%)</title><rect x="99.4976%" y="773" width="0.0157%" height="15" fill="rgb(214,13,26)"/><text x="99.7476%" y="783.50"></text></g><g><title>Foundation`+[NSXPCInterface interfaceWithProtocol:] (1 samples, 0.02%)</title><rect x="99.4976%" y="757" width="0.0157%" height="15" fill="rgb(252,75,11)"/><text x="99.7476%" y="767.50"></text></g><g><title>Foundation`-[NSXPCInterface init] (1 samples, 0.02%)</title><rect x="99.4976%" y="741" width="0.0157%" height="15" fill="rgb(218,226,17)"/><text x="99.7476%" y="751.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="99.4976%" y="725" width="0.0157%" height="15" fill="rgb(248,89,38)"/><text x="99.7476%" y="735.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="99.4976%" y="709" width="0.0157%" height="15" fill="rgb(237,73,46)"/><text x="99.7476%" y="719.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.02%)</title><rect x="99.4976%" y="693" width="0.0157%" height="15" fill="rgb(242,78,33)"/><text x="99.7476%" y="703.50"></text></g><g><title>libobjc.A.dylib`realizeClassMaybeSwiftMaybeRelock(objc_class*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.02%)</title><rect x="99.4976%" y="677" width="0.0157%" height="15" fill="rgb(235,60,3)"/><text x="99.7476%" y="687.50"></text></g><g><title>libobjc.A.dylib`realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 0.02%)</title><rect x="99.4976%" y="661" width="0.0157%" height="15" fill="rgb(216,172,19)"/><text x="99.7476%" y="671.50"></text></g><g><title>AppKit`_NSInitializeAppContext (3 samples, 0.05%)</title><rect x="99.4819%" y="1061" width="0.0471%" height="15" fill="rgb(227,6,42)"/><text x="99.7319%" y="1071.50"></text></g><g><title>HIToolbox`MenuBarInstance::IsVisible (3 samples, 0.05%)</title><rect x="99.4819%" y="1045" width="0.0471%" height="15" fill="rgb(223,207,42)"/><text x="99.7319%" y="1055.50"></text></g><g><title>HIToolbox`MenuBarInstance::GetAggregateUIMode (3 samples, 0.05%)</title><rect x="99.4819%" y="1029" width="0.0471%" height="15" fill="rgb(246,138,30)"/><text x="99.7319%" y="1039.50"></text></g><g><title>HIServices`GetCurrentProcess (3 samples, 0.05%)</title><rect x="99.4819%" y="1013" width="0.0471%" height="15" fill="rgb(251,199,47)"/><text x="99.7319%" y="1023.50"></text></g><g><title>HIServices`_RegisterApplication (3 samples, 0.05%)</title><rect x="99.4819%" y="997" width="0.0471%" height="15" fill="rgb(228,218,44)"/><text x="99.7319%" y="1007.50"></text></g><g><title>LaunchServices`_LSApplicationCheckIn (2 samples, 0.03%)</title><rect x="99.4976%" y="981" width="0.0314%" height="15" fill="rgb(220,68,6)"/><text x="99.7476%" y="991.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.02%)</title><rect x="99.5133%" y="965" width="0.0157%" height="15" fill="rgb(240,60,26)"/><text x="99.7633%" y="975.50"></text></g><g><title>LaunchServices`asString(void const*) (1 samples, 0.02%)</title><rect x="99.5133%" y="949" width="0.0157%" height="15" fill="rgb(211,200,19)"/><text x="99.7633%" y="959.50"></text></g><g><title>CoreFoundation`CFTimeZoneCopyDefault (1 samples, 0.02%)</title><rect x="99.5133%" y="933" width="0.0157%" height="15" fill="rgb(242,145,30)"/><text x="99.7633%" y="943.50"></text></g><g><title>CoreFoundation`+[NSTimeZone defaultTimeZone] (1 samples, 0.02%)</title><rect x="99.5133%" y="917" width="0.0157%" height="15" fill="rgb(225,64,13)"/><text x="99.7633%" y="927.50"></text></g><g><title>CoreFoundation`+[NSTimeZone systemTimeZone] (1 samples, 0.02%)</title><rect x="99.5133%" y="901" width="0.0157%" height="15" fill="rgb(218,103,35)"/><text x="99.7633%" y="911.50"></text></g><g><title>CoreFoundation`+[NSTimeZone timeZoneWithName:] (1 samples, 0.02%)</title><rect x="99.5133%" y="885" width="0.0157%" height="15" fill="rgb(216,93,46)"/><text x="99.7633%" y="895.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderTimeZone __initWithName:cache:] (1 samples, 0.02%)</title><rect x="99.5133%" y="869" width="0.0157%" height="15" fill="rgb(225,159,27)"/><text x="99.7633%" y="879.50"></text></g><g><title>CoreFoundation`__nameStringOK (1 samples, 0.02%)</title><rect x="99.5133%" y="853" width="0.0157%" height="15" fill="rgb(225,204,11)"/><text x="99.7633%" y="863.50"></text></g><g><title>libicucore.A.dylib`ucal_getCanonicalTimeZoneID (1 samples, 0.02%)</title><rect x="99.5133%" y="837" width="0.0157%" height="15" fill="rgb(205,56,4)"/><text x="99.7633%" y="847.50"></text></g><g><title>libicucore.A.dylib`icu::TimeZone::getCanonicalID (1 samples, 0.02%)</title><rect x="99.5133%" y="821" width="0.0157%" height="15" fill="rgb(206,6,35)"/><text x="99.7633%" y="831.50"></text></g><g><title>libicucore.A.dylib`icu::ZoneMeta::getCanonicalCLDRID (1 samples, 0.02%)</title><rect x="99.5133%" y="805" width="0.0157%" height="15" fill="rgb(247,73,52)"/><text x="99.7633%" y="815.50"></text></g><g><title>libicucore.A.dylib`icu::ZoneMeta::getCanonicalCLDRID (1 samples, 0.02%)</title><rect x="99.5133%" y="789" width="0.0157%" height="15" fill="rgb(246,97,4)"/><text x="99.7633%" y="799.50"></text></g><g><title>AppKit`-[NSApplication init] (10 samples, 0.16%)</title><rect x="99.3877%" y="1077" width="0.1570%" height="15" fill="rgb(212,37,15)"/><text x="99.6377%" y="1087.50"></text></g><g><title>CarbonCore`GetThreadGlobals (1 samples, 0.02%)</title><rect x="99.5290%" y="1061" width="0.0157%" height="15" fill="rgb(208,130,40)"/><text x="99.7790%" y="1071.50"></text></g><g><title>CarbonCore`_TSGetMainThread (1 samples, 0.02%)</title><rect x="99.5290%" y="1045" width="0.0157%" height="15" fill="rgb(236,55,29)"/><text x="99.7790%" y="1055.50"></text></g><g><title>CarbonCore`TSCreateStorageKey (1 samples, 0.02%)</title><rect x="99.5290%" y="1029" width="0.0157%" height="15" fill="rgb(209,156,45)"/><text x="99.7790%" y="1039.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (11 samples, 0.17%)</title><rect x="99.3877%" y="1093" width="0.1727%" height="15" fill="rgb(249,107,4)"/><text x="99.6377%" y="1103.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="99.5447%" y="1077" width="0.0157%" height="15" fill="rgb(227,7,13)"/><text x="99.7947%" y="1087.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="99.5447%" y="1061" width="0.0157%" height="15" fill="rgb(250,129,14)"/><text x="99.7947%" y="1071.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.02%)</title><rect x="99.5447%" y="1045" width="0.0157%" height="15" fill="rgb(229,92,13)"/><text x="99.7947%" y="1055.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.02%)</title><rect x="99.5447%" y="1029" width="0.0157%" height="15" fill="rgb(245,98,39)"/><text x="99.7947%" y="1039.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (1 samples, 0.02%)</title><rect x="99.5447%" y="1013" width="0.0157%" height="15" fill="rgb(234,135,48)"/><text x="99.7947%" y="1023.50"></text></g><g><title>UIFoundation`+[NSFont initialize] (1 samples, 0.02%)</title><rect x="99.5447%" y="997" width="0.0157%" height="15" fill="rgb(230,98,28)"/><text x="99.7947%" y="1007.50"></text></g><g><title>Foundation`-[NSDistributedNotificationCenter addObserver:selector:name:object:suspensionBehavior:] (1 samples, 0.02%)</title><rect x="99.5447%" y="981" width="0.0157%" height="15" fill="rgb(223,121,0)"/><text x="99.7947%" y="991.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegisterObserver (1 samples, 0.02%)</title><rect x="99.5447%" y="965" width="0.0157%" height="15" fill="rgb(234,173,33)"/><text x="99.7947%" y="975.50"></text></g><g><title>CoreFoundation`__CFXNotificationRegisterObserver1 (1 samples, 0.02%)</title><rect x="99.5447%" y="949" width="0.0157%" height="15" fill="rgb(245,47,8)"/><text x="99.7947%" y="959.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 0.02%)</title><rect x="99.5447%" y="933" width="0.0157%" height="15" fill="rgb(205,17,20)"/><text x="99.7947%" y="943.50"></text></g><g><title>libxpc.dylib`_xpc_dispose (1 samples, 0.02%)</title><rect x="99.5447%" y="917" width="0.0157%" height="15" fill="rgb(232,151,16)"/><text x="99.7947%" y="927.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (1 samples, 0.02%)</title><rect x="99.5447%" y="901" width="0.0157%" height="15" fill="rgb(208,30,32)"/><text x="99.7947%" y="911.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (1 samples, 0.02%)</title><rect x="99.5447%" y="885" width="0.0157%" height="15" fill="rgb(254,26,3)"/><text x="99.7947%" y="895.50"></text></g><g><title>AppKit`+[NSApplication _initializeRegisteredDefaults] (1 samples, 0.02%)</title><rect x="99.5604%" y="981" width="0.0157%" height="15" fill="rgb(240,177,30)"/><text x="99.8104%" y="991.50"></text></g><g><title>Foundation`-[NSUserDefaults(NSUserDefaults) registerDefaults:] (1 samples, 0.02%)</title><rect x="99.5604%" y="965" width="0.0157%" height="15" fill="rgb(248,76,44)"/><text x="99.8104%" y="975.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (1 samples, 0.02%)</title><rect x="99.5604%" y="949" width="0.0157%" height="15" fill="rgb(241,186,54)"/><text x="99.8104%" y="959.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (1 samples, 0.02%)</title><rect x="99.5604%" y="933" width="0.0157%" height="15" fill="rgb(249,171,29)"/><text x="99.8104%" y="943.50"></text></g><g><title>CoreFoundation`+[NSLocale currentLocale] (1 samples, 0.02%)</title><rect x="99.5761%" y="949" width="0.0157%" height="15" fill="rgb(237,151,44)"/><text x="99.8261%" y="959.50"></text></g><g><title>CoreFoundation`_CFLocaleCopyCurrentGuts (1 samples, 0.02%)</title><rect x="99.5761%" y="933" width="0.0157%" height="15" fill="rgb(228,174,30)"/><text x="99.8261%" y="943.50"></text></g><g><title>CoreFoundation`CFBundleCopyBundleLocalizations (1 samples, 0.02%)</title><rect x="99.5761%" y="917" width="0.0157%" height="15" fill="rgb(252,14,37)"/><text x="99.8261%" y="927.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLProjDirectoriesForURL (1 samples, 0.02%)</title><rect x="99.5761%" y="901" width="0.0157%" height="15" fill="rgb(207,111,40)"/><text x="99.8261%" y="911.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.02%)</title><rect x="99.5761%" y="885" width="0.0157%" height="15" fill="rgb(248,171,54)"/><text x="99.8261%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.02%)</title><rect x="99.5761%" y="869" width="0.0157%" height="15" fill="rgb(211,127,2)"/><text x="99.8261%" y="879.50"></text></g><g><title>rvfm_main`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (14 samples, 0.22%)</title><rect x="99.3877%" y="1109" width="0.2198%" height="15" fill="rgb(236,87,47)"/><text x="99.6377%" y="1119.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (3 samples, 0.05%)</title><rect x="99.5604%" y="1093" width="0.0471%" height="15" fill="rgb(223,190,45)"/><text x="99.8104%" y="1103.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (3 samples, 0.05%)</title><rect x="99.5604%" y="1077" width="0.0471%" height="15" fill="rgb(215,5,16)"/><text x="99.8104%" y="1087.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (3 samples, 0.05%)</title><rect x="99.5604%" y="1061" width="0.0471%" height="15" fill="rgb(252,82,33)"/><text x="99.8104%" y="1071.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (3 samples, 0.05%)</title><rect x="99.5604%" y="1045" width="0.0471%" height="15" fill="rgb(247,213,44)"/><text x="99.8104%" y="1055.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (3 samples, 0.05%)</title><rect x="99.5604%" y="1029" width="0.0471%" height="15" fill="rgb(205,196,44)"/><text x="99.8104%" y="1039.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (3 samples, 0.05%)</title><rect x="99.5604%" y="1013" width="0.0471%" height="15" fill="rgb(237,96,54)"/><text x="99.8104%" y="1023.50"></text></g><g><title>AppKit`+[NSApplication initialize] (3 samples, 0.05%)</title><rect x="99.5604%" y="997" width="0.0471%" height="15" fill="rgb(230,113,34)"/><text x="99.8104%" y="1007.50"></text></g><g><title>Foundation`+[NSUserDefaults(NSUserDefaults) standardUserDefaults] (2 samples, 0.03%)</title><rect x="99.5761%" y="981" width="0.0314%" height="15" fill="rgb(221,224,12)"/><text x="99.8261%" y="991.50"></text></g><g><title>Foundation`-[NSUserDefaults(NSUserDefaults) init] (2 samples, 0.03%)</title><rect x="99.5761%" y="965" width="0.0314%" height="15" fill="rgb(219,112,44)"/><text x="99.8261%" y="975.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.02%)</title><rect x="99.5918%" y="949" width="0.0157%" height="15" fill="rgb(210,31,13)"/><text x="99.8418%" y="959.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.02%)</title><rect x="99.5918%" y="933" width="0.0157%" height="15" fill="rgb(230,25,16)"/><text x="99.8418%" y="943.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.02%)</title><rect x="99.5918%" y="917" width="0.0157%" height="15" fill="rgb(246,108,53)"/><text x="99.8418%" y="927.50"></text></g><g><title>CoreFoundation`_CFPrefsGetCacheStringForBundleID (1 samples, 0.02%)</title><rect x="99.5918%" y="901" width="0.0157%" height="15" fill="rgb(241,172,50)"/><text x="99.8418%" y="911.50"></text></g><g><title>CoreFoundation`CFBundleGetMainBundle (1 samples, 0.02%)</title><rect x="99.5918%" y="885" width="0.0157%" height="15" fill="rgb(235,141,10)"/><text x="99.8418%" y="895.50"></text></g><g><title>CoreFoundation`_CFBundleCopyBundleURLForExecutableURL (1 samples, 0.02%)</title><rect x="99.5918%" y="869" width="0.0157%" height="15" fill="rgb(220,174,43)"/><text x="99.8418%" y="879.50"></text></g><g><title>CoreFoundation`_CFBundleCopyResolvedURLForExecutableURL (1 samples, 0.02%)</title><rect x="99.5918%" y="853" width="0.0157%" height="15" fill="rgb(215,181,40)"/><text x="99.8418%" y="863.50"></text></g><g><title>CoreFoundation`CFURLCopyAbsoluteURL (1 samples, 0.02%)</title><rect x="99.5918%" y="837" width="0.0157%" height="15" fill="rgb(230,97,2)"/><text x="99.8418%" y="847.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithURLString (1 samples, 0.02%)</title><rect x="99.5918%" y="821" width="0.0157%" height="15" fill="rgb(211,25,27)"/><text x="99.8418%" y="831.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 0.02%)</title><rect x="99.5918%" y="805" width="0.0157%" height="15" fill="rgb(230,87,26)"/><text x="99.8418%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="99.5918%" y="789" width="0.0157%" height="15" fill="rgb(227,160,17)"/><text x="99.8418%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.5918%" y="773" width="0.0157%" height="15" fill="rgb(244,85,34)"/><text x="99.8418%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.5918%" y="757" width="0.0157%" height="15" fill="rgb(207,70,0)"/><text x="99.8418%" y="767.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (1 samples, 0.02%)</title><rect x="99.6075%" y="1093" width="0.0157%" height="15" fill="rgb(223,129,7)"/><text x="99.8575%" y="1103.50"></text></g><g><title>AppKit`-[NSApplication makeWindowsPerform:inOrder:] (1 samples, 0.02%)</title><rect x="99.6075%" y="1077" width="0.0157%" height="15" fill="rgb(246,105,7)"/><text x="99.8575%" y="1087.50"></text></g><g><title>CoreFoundation`+[NSObject(NSObject) instanceMethodSignatureForSelector:] (1 samples, 0.02%)</title><rect x="99.6075%" y="1061" width="0.0157%" height="15" fill="rgb(215,154,42)"/><text x="99.8575%" y="1071.50"></text></g><g><title>CoreFoundation`__methodDescriptionForSelector (1 samples, 0.02%)</title><rect x="99.6075%" y="1045" width="0.0157%" height="15" fill="rgb(220,215,30)"/><text x="99.8575%" y="1055.50"></text></g><g><title>libobjc.A.dylib`protocol_getMethodDescription (1 samples, 0.02%)</title><rect x="99.6075%" y="1029" width="0.0157%" height="15" fill="rgb(228,81,51)"/><text x="99.8575%" y="1039.50"></text></g><g><title>libobjc.A.dylib`protocol_getMethod(protocol_t*, objc_selector*, bool, bool, bool) (1 samples, 0.02%)</title><rect x="99.6075%" y="1013" width="0.0157%" height="15" fill="rgb(247,71,54)"/><text x="99.8575%" y="1023.50"></text></g><g><title>libobjc.A.dylib`search_method_list(method_list_t const*, objc_selector*) (1 samples, 0.02%)</title><rect x="99.6075%" y="997" width="0.0157%" height="15" fill="rgb(234,176,34)"/><text x="99.8575%" y="1007.50"></text></g><g><title>AppKit`-[NSWindow makeKeyAndOrderFront:] (1 samples, 0.02%)</title><rect x="99.6232%" y="1093" width="0.0157%" height="15" fill="rgb(241,103,54)"/><text x="99.8732%" y="1103.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) _resolveAutomaticEnterFullScreenFlags] (1 samples, 0.02%)</title><rect x="99.6232%" y="1077" width="0.0157%" height="15" fill="rgb(228,22,34)"/><text x="99.8732%" y="1087.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) _shouldJoinActiveSpaceOnOrderIn] (1 samples, 0.02%)</title><rect x="99.6232%" y="1061" width="0.0157%" height="15" fill="rgb(241,179,48)"/><text x="99.8732%" y="1071.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (1 samples, 0.02%)</title><rect x="99.6232%" y="1045" width="0.0157%" height="15" fill="rgb(235,167,37)"/><text x="99.8732%" y="1055.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) _implicitlyAllowsFullScreenPrimary] (1 samples, 0.02%)</title><rect x="99.6232%" y="1029" width="0.0157%" height="15" fill="rgb(213,109,30)"/><text x="99.8732%" y="1039.50"></text></g><g><title>AppKit`_NXIsBackgroundOnly (1 samples, 0.02%)</title><rect x="99.6232%" y="1013" width="0.0157%" height="15" fill="rgb(222,172,16)"/><text x="99.8732%" y="1023.50"></text></g><g><title>LaunchServices`_LSCopyApplicationInformationItem (1 samples, 0.02%)</title><rect x="99.6232%" y="997" width="0.0157%" height="15" fill="rgb(233,192,5)"/><text x="99.8732%" y="1007.50"></text></g><g><title>LaunchServices`ConvertToCanonicalASNLow(__LSSharedMemoryPage const*, __LSASN const*) (1 samples, 0.02%)</title><rect x="99.6232%" y="981" width="0.0157%" height="15" fill="rgb(247,189,41)"/><text x="99.8732%" y="991.50"></text></g><g><title>Foundation`-[NSAutoreleasePool drain] (1 samples, 0.02%)</title><rect x="99.6389%" y="1093" width="0.0157%" height="15" fill="rgb(218,134,47)"/><text x="99.8889%" y="1103.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (1 samples, 0.02%)</title><rect x="99.6389%" y="1077" width="0.0157%" height="15" fill="rgb(216,29,3)"/><text x="99.8889%" y="1087.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (1 samples, 0.02%)</title><rect x="99.6389%" y="1061" width="0.0157%" height="15" fill="rgb(246,140,12)"/><text x="99.8889%" y="1071.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (1 samples, 0.02%)</title><rect x="99.6389%" y="1045" width="0.0157%" height="15" fill="rgb(230,136,11)"/><text x="99.8889%" y="1055.50"></text></g><g><title>AppKit`-[NSView dealloc] (1 samples, 0.02%)</title><rect x="99.6389%" y="1029" width="0.0157%" height="15" fill="rgb(247,22,47)"/><text x="99.8889%" y="1039.50"></text></g><g><title>AppKit`-[NSResponder dealloc] (1 samples, 0.02%)</title><rect x="99.6389%" y="1013" width="0.0157%" height="15" fill="rgb(218,84,22)"/><text x="99.8889%" y="1023.50"></text></g><g><title>AppKit`-[NSResponder(NSUIActivityProvider) _cleanUpUserActivity] (1 samples, 0.02%)</title><rect x="99.6389%" y="997" width="0.0157%" height="15" fill="rgb(216,87,39)"/><text x="99.8889%" y="1007.50"></text></g><g><title>rvfm_main`&lt;*mut objc::runtime::Object as cocoa::appkit::NSApplication&gt;::setActivationPolicy_ (1 samples, 0.02%)</title><rect x="99.6546%" y="1093" width="0.0157%" height="15" fill="rgb(221,178,8)"/><text x="99.9046%" y="1103.50"></text></g><g><title>AppKit`-[NSApplication setActivationPolicy:] (1 samples, 0.02%)</title><rect x="99.6546%" y="1077" width="0.0157%" height="15" fill="rgb(230,42,11)"/><text x="99.9046%" y="1087.50"></text></g><g><title>AppKit`+[NSApplicationFunctionRowController sharedApplicationFunctionRowController] (1 samples, 0.02%)</title><rect x="99.6546%" y="1061" width="0.0157%" height="15" fill="rgb(237,229,4)"/><text x="99.9046%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="99.6546%" y="1045" width="0.0157%" height="15" fill="rgb(222,31,33)"/><text x="99.9046%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="99.6546%" y="1029" width="0.0157%" height="15" fill="rgb(210,17,39)"/><text x="99.9046%" y="1039.50"></text></g><g><title>AppKit`__76+[NSApplicationFunctionRowController sharedApplicationFunctionRowController]_block_invoke (1 samples, 0.02%)</title><rect x="99.6546%" y="1013" width="0.0157%" height="15" fill="rgb(244,93,20)"/><text x="99.9046%" y="1023.50"></text></g><g><title>AppKit`-[NSApplicationFunctionRowController init] (1 samples, 0.02%)</title><rect x="99.6546%" y="997" width="0.0157%" height="15" fill="rgb(210,40,47)"/><text x="99.9046%" y="1007.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (1 samples, 0.02%)</title><rect x="99.6546%" y="981" width="0.0157%" height="15" fill="rgb(239,211,47)"/><text x="99.9046%" y="991.50"></text></g><g><title>Foundation`NSKeyValuePropertyForIsaAndKeyPath (1 samples, 0.02%)</title><rect x="99.6546%" y="965" width="0.0157%" height="15" fill="rgb(251,223,49)"/><text x="99.9046%" y="975.50"></text></g><g><title>Foundation`NSKeyValuePropertyForIsaAndKeyPathInner.llvm.12036264530095935415 (1 samples, 0.02%)</title><rect x="99.6546%" y="949" width="0.0157%" height="15" fill="rgb(221,149,5)"/><text x="99.9046%" y="959.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (1 samples, 0.02%)</title><rect x="99.6546%" y="933" width="0.0157%" height="15" fill="rgb(219,224,51)"/><text x="99.9046%" y="943.50"></text></g><g><title>CoreFoundation`__CFBasicHashAddValue (1 samples, 0.02%)</title><rect x="99.6546%" y="917" width="0.0157%" height="15" fill="rgb(223,7,8)"/><text x="99.9046%" y="927.50"></text></g><g><title>CoreFoundation`__CFBasicHashRehash (1 samples, 0.02%)</title><rect x="99.6546%" y="901" width="0.0157%" height="15" fill="rgb(241,217,22)"/><text x="99.9046%" y="911.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.02%)</title><rect x="99.6546%" y="885" width="0.0157%" height="15" fill="rgb(248,209,0)"/><text x="99.9046%" y="895.50"></text></g><g><title>AppKit`-[NSResponder init] (1 samples, 0.02%)</title><rect x="99.6703%" y="1045" width="0.0157%" height="15" fill="rgb(217,205,4)"/><text x="99.9203%" y="1055.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (1 samples, 0.02%)</title><rect x="99.6703%" y="1029" width="0.0157%" height="15" fill="rgb(228,124,39)"/><text x="99.9203%" y="1039.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.02%)</title><rect x="99.6703%" y="1013" width="0.0157%" height="15" fill="rgb(250,116,42)"/><text x="99.9203%" y="1023.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.02%)</title><rect x="99.6703%" y="997" width="0.0157%" height="15" fill="rgb(223,202,9)"/><text x="99.9203%" y="1007.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.02%)</title><rect x="99.6703%" y="981" width="0.0157%" height="15" fill="rgb(242,222,40)"/><text x="99.9203%" y="991.50"></text></g><g><title>AppKit`+[NSResponder automaticallyTracksDependenciesOnValueForKey:] (1 samples, 0.02%)</title><rect x="99.6703%" y="965" width="0.0157%" height="15" fill="rgb(229,99,46)"/><text x="99.9203%" y="975.50"></text></g><g><title>libobjc.A.dylib`class_getInstanceMethod (1 samples, 0.02%)</title><rect x="99.6703%" y="949" width="0.0157%" height="15" fill="rgb(225,56,46)"/><text x="99.9203%" y="959.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.02%)</title><rect x="99.6703%" y="933" width="0.0157%" height="15" fill="rgb(227,94,5)"/><text x="99.9203%" y="943.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.02%)</title><rect x="99.6860%" y="933" width="0.0157%" height="15" fill="rgb(205,112,38)"/><text x="99.9360%" y="943.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (1 samples, 0.02%)</title><rect x="99.6860%" y="917" width="0.0157%" height="15" fill="rgb(231,133,46)"/><text x="99.9360%" y="927.50"></text></g><g><title>libobjc.A.dylib`search_builtins(char const*) (1 samples, 0.02%)</title><rect x="99.6860%" y="901" width="0.0157%" height="15" fill="rgb(217,16,9)"/><text x="99.9360%" y="911.50"></text></g><g><title>libdyld.dylib`_dyld_get_objc_selector (1 samples, 0.02%)</title><rect x="99.6860%" y="885" width="0.0157%" height="15" fill="rgb(249,173,9)"/><text x="99.9360%" y="895.50"></text></g><g><title>libdyld.dylib`objc_opt::objc_stringhash_t::getIndex (1 samples, 0.02%)</title><rect x="99.6860%" y="869" width="0.0157%" height="15" fill="rgb(205,163,53)"/><text x="99.9360%" y="879.50"></text></g><g><title>libdyld.dylib`objc_opt::objc_stringhash_t::hash (1 samples, 0.02%)</title><rect x="99.6860%" y="853" width="0.0157%" height="15" fill="rgb(217,54,41)"/><text x="99.9360%" y="863.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (2 samples, 0.03%)</title><rect x="99.6860%" y="1013" width="0.0314%" height="15" fill="rgb(228,216,12)"/><text x="99.9360%" y="1023.50"></text></g><g><title>AppKit`-[NSView initWithFrame:] (2 samples, 0.03%)</title><rect x="99.6860%" y="997" width="0.0314%" height="15" fill="rgb(244,228,15)"/><text x="99.9360%" y="1007.50"></text></g><g><title>AppKit`-[NSResponder init] (2 samples, 0.03%)</title><rect x="99.6860%" y="981" width="0.0314%" height="15" fill="rgb(221,176,53)"/><text x="99.9360%" y="991.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (2 samples, 0.03%)</title><rect x="99.6860%" y="965" width="0.0314%" height="15" fill="rgb(205,94,34)"/><text x="99.9360%" y="975.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.03%)</title><rect x="99.6860%" y="949" width="0.0314%" height="15" fill="rgb(213,110,48)"/><text x="99.9360%" y="959.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.02%)</title><rect x="99.7017%" y="933" width="0.0157%" height="15" fill="rgb(236,142,28)"/><text x="99.9517%" y="943.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.02%)</title><rect x="99.7017%" y="917" width="0.0157%" height="15" fill="rgb(225,135,29)"/><text x="99.9517%" y="927.50"></text></g><g><title>AppKit`lockedClassInfoForClass (1 samples, 0.02%)</title><rect x="99.7017%" y="901" width="0.0157%" height="15" fill="rgb(252,45,31)"/><text x="99.9517%" y="911.50"></text></g><g><title>AppKit`initializePropertyInfo (1 samples, 0.02%)</title><rect x="99.7017%" y="885" width="0.0157%" height="15" fill="rgb(211,187,50)"/><text x="99.9517%" y="895.50"></text></g><g><title>Foundation`+[NSObject(NSKeyValueObservingCustomization) keyPathsForValuesAffectingValueForKey:] (1 samples, 0.02%)</title><rect x="99.7017%" y="869" width="0.0157%" height="15" fill="rgb(229,109,7)"/><text x="99.9517%" y="879.50"></text></g><g><title>libobjc.A.dylib`class_getInstanceMethod (1 samples, 0.02%)</title><rect x="99.7017%" y="853" width="0.0157%" height="15" fill="rgb(251,131,51)"/><text x="99.9517%" y="863.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="99.7017%" y="837" width="0.0157%" height="15" fill="rgb(251,180,35)"/><text x="99.9517%" y="847.50"></text></g><g><title>libobjc.A.dylib`resolveMethod_locked(objc_object*, objc_selector*, objc_class*, int) (1 samples, 0.02%)</title><rect x="99.7017%" y="821" width="0.0157%" height="15" fill="rgb(211,46,32)"/><text x="99.9517%" y="831.50"></text></g><g><title>libobjc.A.dylib`getMaybeUnrealizedNonMetaClass(objc_class*, objc_object*) (1 samples, 0.02%)</title><rect x="99.7017%" y="805" width="0.0157%" height="15" fill="rgb(248,123,17)"/><text x="99.9517%" y="815.50"></text></g><g><title>libobjc.A.dylib`getClassExceptSomeSwift(char const*) (1 samples, 0.02%)</title><rect x="99.7017%" y="789" width="0.0157%" height="15" fill="rgb(227,141,18)"/><text x="99.9517%" y="799.50"></text></g><g><title>libobjc.A.dylib`getClass_impl(char const*) (1 samples, 0.02%)</title><rect x="99.7017%" y="773" width="0.0157%" height="15" fill="rgb(216,102,9)"/><text x="99.9517%" y="783.50"></text></g><g><title>libobjc.A.dylib`_NXMapMember(_NXMapTable*, void const*, void**) (1 samples, 0.02%)</title><rect x="99.7017%" y="757" width="0.0157%" height="15" fill="rgb(253,47,13)"/><text x="99.9517%" y="767.50"></text></g><g><title>AppKit`-[NSThemeFrame _addKnownSubview:positioned:relativeTo:] (1 samples, 0.02%)</title><rect x="99.7174%" y="965" width="0.0157%" height="15" fill="rgb(226,93,23)"/><text x="99.9674%" y="975.50"></text></g><g><title>AppKit`-[NSThemeFrame addSubview:positioned:relativeTo:] (1 samples, 0.02%)</title><rect x="99.7174%" y="949" width="0.0157%" height="15" fill="rgb(247,104,17)"/><text x="99.9674%" y="959.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (1 samples, 0.02%)</title><rect x="99.7174%" y="933" width="0.0157%" height="15" fill="rgb(233,203,26)"/><text x="99.9674%" y="943.50"></text></g><g><title>AppKit`__49-[NSThemeFrame addSubview:positioned:relativeTo:]_block_invoke (1 samples, 0.02%)</title><rect x="99.7174%" y="917" width="0.0157%" height="15" fill="rgb(244,98,49)"/><text x="99.9674%" y="927.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (1 samples, 0.02%)</title><rect x="99.7174%" y="901" width="0.0157%" height="15" fill="rgb(235,134,22)"/><text x="99.9674%" y="911.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateBackgroundLayer] (1 samples, 0.02%)</title><rect x="99.7174%" y="885" width="0.0157%" height="15" fill="rgb(221,70,32)"/><text x="99.9674%" y="895.50"></text></g><g><title>AppKit`-[NSThemeFrame _cuiMakeOrUpdateBackgroundLayer:topHeight:drawTopSeparator:bottomHeight:forTitlebar:] (1 samples, 0.02%)</title><rect x="99.7174%" y="869" width="0.0157%" height="15" fill="rgb(238,15,50)"/><text x="99.9674%" y="879.50"></text></g><g><title>AppKit`+[NSColor windowBackgroundColor] (1 samples, 0.02%)</title><rect x="99.7174%" y="853" width="0.0157%" height="15" fill="rgb(215,221,48)"/><text x="99.9674%" y="863.50"></text></g><g><title>AppKit`-[NSDynamicSystemColor initWithSelector:tintedWithColor:] (1 samples, 0.02%)</title><rect x="99.7174%" y="837" width="0.0157%" height="15" fill="rgb(236,73,3)"/><text x="99.9674%" y="847.50"></text></g><g><title>Foundation`-[NSNotificationCenter addObserver:selector:name:object:] (1 samples, 0.02%)</title><rect x="99.7174%" y="821" width="0.0157%" height="15" fill="rgb(250,107,11)"/><text x="99.9674%" y="831.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegisterObserver (1 samples, 0.02%)</title><rect x="99.7174%" y="805" width="0.0157%" height="15" fill="rgb(242,39,14)"/><text x="99.9674%" y="815.50"></text></g><g><title>CoreFoundation`__CFXNotificationRegisterObserver1 (1 samples, 0.02%)</title><rect x="99.7174%" y="789" width="0.0157%" height="15" fill="rgb(248,164,37)"/><text x="99.9674%" y="799.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationRegistrar add:object:observer:tokenRegistration:] (1 samples, 0.02%)</title><rect x="99.7174%" y="773" width="0.0157%" height="15" fill="rgb(217,60,12)"/><text x="99.9674%" y="783.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationRegistrar acquireWildcardObject:] (1 samples, 0.02%)</title><rect x="99.7174%" y="757" width="0.0157%" height="15" fill="rgb(240,125,29)"/><text x="99.9674%" y="767.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationNameRegistration initWithName:options:parent:] (1 samples, 0.02%)</title><rect x="99.7174%" y="741" width="0.0157%" height="15" fill="rgb(208,207,28)"/><text x="99.9674%" y="751.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationRegistrationContainer initWithParent:childKeyCallbacks:] (1 samples, 0.02%)</title><rect x="99.7174%" y="725" width="0.0157%" height="15" fill="rgb(209,159,27)"/><text x="99.9674%" y="735.50"></text></g><g><title>CoreFoundation`-[_CFXNotificationRegistrationBase initWithParent:] (1 samples, 0.02%)</title><rect x="99.7174%" y="709" width="0.0157%" height="15" fill="rgb(251,176,53)"/><text x="99.9674%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (1 samples, 0.02%)</title><rect x="99.7174%" y="693" width="0.0157%" height="15" fill="rgb(211,85,7)"/><text x="99.9674%" y="703.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (1 samples, 0.02%)</title><rect x="99.7174%" y="677" width="0.0157%" height="15" fill="rgb(216,64,54)"/><text x="99.9674%" y="687.50"></text></g><g><title>libobjc.A.dylib`weak_entry_for_referent(weak_table_t*, objc_object*) (1 samples, 0.02%)</title><rect x="99.7174%" y="661" width="0.0157%" height="15" fill="rgb(217,54,24)"/><text x="99.9674%" y="671.50"></text></g><g><title>AppKit`-[NSThemeFrame _titleTextFieldFrame] (1 samples, 0.02%)</title><rect x="99.7331%" y="917" width="0.0157%" height="15" fill="rgb(208,206,53)"/><text x="99.9831%" y="927.50"></text></g><g><title>AppKit`-[NSThemeFrame _titlebarTitleRect] (1 samples, 0.02%)</title><rect x="99.7331%" y="901" width="0.0157%" height="15" fill="rgb(251,74,39)"/><text x="99.9831%" y="911.50"></text></g><g><title>AppKit`-[NSThemeFrame _defaultTitlebarTitleRect] (1 samples, 0.02%)</title><rect x="99.7331%" y="885" width="0.0157%" height="15" fill="rgb(226,47,5)"/><text x="99.9831%" y="895.50"></text></g><g><title>AppKit`-[NSThemeFrame _titleCellSize] (1 samples, 0.02%)</title><rect x="99.7331%" y="869" width="0.0157%" height="15" fill="rgb(234,111,33)"/><text x="99.9831%" y="879.50"></text></g><g><title>AppKit`-[NSThemeFrame _size:ofCell:withTitle:] (1 samples, 0.02%)</title><rect x="99.7331%" y="853" width="0.0157%" height="15" fill="rgb(251,14,10)"/><text x="99.9831%" y="863.50"></text></g><g><title>AppKit`-[NSCell cellSize] (1 samples, 0.02%)</title><rect x="99.7331%" y="837" width="0.0157%" height="15" fill="rgb(232,43,0)"/><text x="99.9831%" y="847.50"></text></g><g><title>AppKit`-[NSTextFieldCell cellSizeForBounds:] (1 samples, 0.02%)</title><rect x="99.7331%" y="821" width="0.0157%" height="15" fill="rgb(222,68,43)"/><text x="99.9831%" y="831.50"></text></g><g><title>AppKit`-[NSCell cellSizeForBounds:] (1 samples, 0.02%)</title><rect x="99.7331%" y="805" width="0.0157%" height="15" fill="rgb(217,24,23)"/><text x="99.9831%" y="815.50"></text></g><g><title>AppKit`_NSGetTextCellBoundingRect (1 samples, 0.02%)</title><rect x="99.7331%" y="789" width="0.0157%" height="15" fill="rgb(229,209,14)"/><text x="99.9831%" y="799.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (1 samples, 0.02%)</title><rect x="99.7331%" y="773" width="0.0157%" height="15" fill="rgb(250,149,48)"/><text x="99.9831%" y="783.50"></text></g><g><title>AppKit`___NSGetTextCellBoundingRect_block_invoke (1 samples, 0.02%)</title><rect x="99.7331%" y="757" width="0.0157%" height="15" fill="rgb(210,120,37)"/><text x="99.9831%" y="767.50"></text></g><g><title>AppKit`_NSGetTextBoundingRect (1 samples, 0.02%)</title><rect x="99.7331%" y="741" width="0.0157%" height="15" fill="rgb(210,21,8)"/><text x="99.9831%" y="751.50"></text></g><g><title>AppKit`rectForString (1 samples, 0.02%)</title><rect x="99.7331%" y="725" width="0.0157%" height="15" fill="rgb(243,145,7)"/><text x="99.9831%" y="735.50"></text></g><g><title>UIFoundation`-[NSAttributedString(NSExtendedStringDrawing) boundingRectWithSize:options:context:] (1 samples, 0.02%)</title><rect x="99.7331%" y="709" width="0.0157%" height="15" fill="rgb(238,178,32)"/><text x="99.9831%" y="719.50"></text></g><g><title>UIFoundation`__NSStringDrawingEngine (1 samples, 0.02%)</title><rect x="99.7331%" y="693" width="0.0157%" height="15" fill="rgb(222,4,10)"/><text x="99.9831%" y="703.50"></text></g><g><title>UIFoundation`__NSValidateCoreTextAttributes (1 samples, 0.02%)</title><rect x="99.7331%" y="677" width="0.0157%" height="15" fill="rgb(239,7,37)"/><text x="99.9831%" y="687.50"></text></g><g><title>UIFoundation`-[NSFont fontForAppearance:] (1 samples, 0.02%)</title><rect x="99.7331%" y="661" width="0.0157%" height="15" fill="rgb(215,31,37)"/><text x="99.9831%" y="671.50"></text></g><g><title>AppKit`-[NSAppearance _resolvesToFunctionRowAppearanceForWidget:] (1 samples, 0.02%)</title><rect x="99.7331%" y="645" width="0.0157%" height="15" fill="rgb(224,83,33)"/><text x="99.9831%" y="655.50"></text></g><g><title>AppKit`-[NSCompositeAppearance resolvedAppearanceForWidget:] (1 samples, 0.02%)</title><rect x="99.7331%" y="629" width="0.0157%" height="15" fill="rgb(239,55,3)"/><text x="99.9831%" y="639.50"></text></g><g><title>AppKit`-[NSAppearance resolvedAppearanceForWidget:] (1 samples, 0.02%)</title><rect x="99.7331%" y="613" width="0.0157%" height="15" fill="rgb(247,92,11)"/><text x="99.9831%" y="623.50"></text></g><g><title>CoreUI`-[CUICatalog(CUICoreUIWidget) hasCustomizedAppearanceForWidget:] (1 samples, 0.02%)</title><rect x="99.7331%" y="597" width="0.0157%" height="15" fill="rgb(239,200,7)"/><text x="99.9831%" y="607.50"></text></g><g><title>CoreUI`-[_CUIMacOSThemeSchema partDefinitionForWidgetName:] (1 samples, 0.02%)</title><rect x="99.7331%" y="581" width="0.0157%" height="15" fill="rgb(227,115,8)"/><text x="99.9831%" y="591.50"></text></g><g><title>AppKit`-[NSThemeFrame _tileTitlebarAndRedisplay:] (2 samples, 0.03%)</title><rect x="99.7331%" y="933" width="0.0314%" height="15" fill="rgb(215,189,27)"/><text x="99.9831%" y="943.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleTextField] (1 samples, 0.02%)</title><rect x="99.7488%" y="917" width="0.0157%" height="15" fill="rgb(251,216,39)"/><text x="99.9988%" y="927.50"></text></g><g><title>AppKit`-[NSCell attributedStringValue] (1 samples, 0.02%)</title><rect x="99.7488%" y="901" width="0.0157%" height="15" fill="rgb(207,29,47)"/><text x="99.9988%" y="911.50"></text></g><g><title>AppKit`-[NSCell _unformattedAttributedStringValue:] (1 samples, 0.02%)</title><rect x="99.7488%" y="885" width="0.0157%" height="15" fill="rgb(210,71,34)"/><text x="99.9988%" y="895.50"></text></g><g><title>AppKit`-[NSTextFieldCell _textAttributes] (1 samples, 0.02%)</title><rect x="99.7488%" y="869" width="0.0157%" height="15" fill="rgb(253,217,51)"/><text x="99.9988%" y="879.50"></text></g><g><title>AppKit`NSColorConvertToColorSpaceNamed (1 samples, 0.02%)</title><rect x="99.7488%" y="853" width="0.0157%" height="15" fill="rgb(222,117,46)"/><text x="99.9988%" y="863.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertColor (1 samples, 0.02%)</title><rect x="99.7488%" y="837" width="0.0157%" height="15" fill="rgb(226,132,6)"/><text x="99.9988%" y="847.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertColorComponents (1 samples, 0.02%)</title><rect x="99.7488%" y="821" width="0.0157%" height="15" fill="rgb(254,145,51)"/><text x="99.9988%" y="831.50"></text></g><g><title>CoreGraphics`CGColorTransformCacheGetConversionType (1 samples, 0.02%)</title><rect x="99.7488%" y="805" width="0.0157%" height="15" fill="rgb(231,199,27)"/><text x="99.9988%" y="815.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreate (1 samples, 0.02%)</title><rect x="99.7488%" y="789" width="0.0157%" height="15" fill="rgb(245,158,14)"/><text x="99.9988%" y="799.50"></text></g><g><title>ColorSync`ColorSyncTransformInternalCopyProperty (1 samples, 0.02%)</title><rect x="99.7488%" y="773" width="0.0157%" height="15" fill="rgb(240,113,14)"/><text x="99.9988%" y="783.50"></text></g><g><title>ColorSync`AppleCMMCreateTransformProperty (1 samples, 0.02%)</title><rect x="99.7488%" y="757" width="0.0157%" height="15" fill="rgb(210,20,13)"/><text x="99.9988%" y="767.50"></text></g><g><title>CoreFoundation`CFPropertyListCreateData (1 samples, 0.02%)</title><rect x="99.7488%" y="741" width="0.0157%" height="15" fill="rgb(241,144,13)"/><text x="99.9988%" y="751.50"></text></g><g><title>CoreFoundation`CFPropertyListWrite (1 samples, 0.02%)</title><rect x="99.7488%" y="725" width="0.0157%" height="15" fill="rgb(235,43,34)"/><text x="99.9988%" y="735.50"></text></g><g><title>CoreFoundation`__CFBinaryPlistWriteOrPresize (1 samples, 0.02%)</title><rect x="99.7488%" y="709" width="0.0157%" height="15" fill="rgb(208,36,20)"/><text x="99.9988%" y="719.50"></text></g><g><title>CoreFoundation`__CFBasicHashRehash (1 samples, 0.02%)</title><rect x="99.7488%" y="693" width="0.0157%" height="15" fill="rgb(239,204,10)"/><text x="99.9988%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="99.7488%" y="677" width="0.0157%" height="15" fill="rgb(217,84,43)"/><text x="99.9988%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.7488%" y="661" width="0.0157%" height="15" fill="rgb(241,170,50)"/><text x="99.9988%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.7488%" y="645" width="0.0157%" height="15" fill="rgb(226,205,29)"/><text x="99.9988%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="99.7488%" y="629" width="0.0157%" height="15" fill="rgb(233,113,1)"/><text x="99.9988%" y="639.50"></text></g><g><title>CoreText`CTFontGetAscent (1 samples, 0.02%)</title><rect x="99.7645%" y="709" width="0.0157%" height="15" fill="rgb(253,98,13)"/><text x="100.0145%" y="719.50"></text></g><g><title>CoreText`TFont::InitStrikeMetrics (1 samples, 0.02%)</title><rect x="99.7645%" y="693" width="0.0157%" height="15" fill="rgb(211,115,12)"/><text x="100.0145%" y="703.50"></text></g><g><title>CoreText`TBaseFont::GetStrikeMetrics (1 samples, 0.02%)</title><rect x="99.7645%" y="677" width="0.0157%" height="15" fill="rgb(208,12,16)"/><text x="100.0145%" y="687.50"></text></g><g><title>CoreText`TBaseFont::InitFontMetrics (1 samples, 0.02%)</title><rect x="99.7645%" y="661" width="0.0157%" height="15" fill="rgb(237,193,54)"/><text x="100.0145%" y="671.50"></text></g><g><title>CoreText`TComponentFont::CalculateFontMetrics (1 samples, 0.02%)</title><rect x="99.7645%" y="645" width="0.0157%" height="15" fill="rgb(243,22,42)"/><text x="100.0145%" y="655.50"></text></g><g><title>CoreText`TBaseFont::CalculateFontMetrics (1 samples, 0.02%)</title><rect x="99.7645%" y="629" width="0.0157%" height="15" fill="rgb(233,151,36)"/><text x="100.0145%" y="639.50"></text></g><g><title>CoreText`TTenuousComponentFont::CopyGraphicsFont (1 samples, 0.02%)</title><rect x="99.7645%" y="613" width="0.0157%" height="15" fill="rgb(237,57,45)"/><text x="100.0145%" y="623.50"></text></g><g><title>CoreText`TBaseFont::CopyGraphicsFont (1 samples, 0.02%)</title><rect x="99.7645%" y="597" width="0.0157%" height="15" fill="rgb(221,88,17)"/><text x="100.0145%" y="607.50"></text></g><g><title>CoreText`TBaseFont::CopyNativeFont (1 samples, 0.02%)</title><rect x="99.7645%" y="581" width="0.0157%" height="15" fill="rgb(230,79,15)"/><text x="100.0145%" y="591.50"></text></g><g><title>CoreText`TCGFontCache::CopyFont (1 samples, 0.02%)</title><rect x="99.7645%" y="565" width="0.0157%" height="15" fill="rgb(213,57,13)"/><text x="100.0145%" y="575.50"></text></g><g><title>CoreText`CreateFontWithFontURL(__CFURL const*, bool) (1 samples, 0.02%)</title><rect x="99.7645%" y="549" width="0.0157%" height="15" fill="rgb(222,116,39)"/><text x="100.0145%" y="559.50"></text></g><g><title>CoreText`CreateFontsWithURL(__CFURL const*, bool) (1 samples, 0.02%)</title><rect x="99.7645%" y="533" width="0.0157%" height="15" fill="rgb(245,107,2)"/><text x="100.0145%" y="543.50"></text></g><g><title>CoreGraphics`CGFontCreateFontsWithURL (1 samples, 0.02%)</title><rect x="99.7645%" y="517" width="0.0157%" height="15" fill="rgb(238,1,10)"/><text x="100.0145%" y="527.50"></text></g><g><title>CoreGraphics`CGFontCreateFontsWithPath (1 samples, 0.02%)</title><rect x="99.7645%" y="501" width="0.0157%" height="15" fill="rgb(249,4,48)"/><text x="100.0145%" y="511.50"></text></g><g><title>CoreGraphics`create_private_data_array_with_path (1 samples, 0.02%)</title><rect x="99.7645%" y="485" width="0.0157%" height="15" fill="rgb(223,151,18)"/><text x="100.0145%" y="495.50"></text></g><g><title>libFontParser.dylib`FPFontCreateFontsWithPath (1 samples, 0.02%)</title><rect x="99.7645%" y="469" width="0.0157%" height="15" fill="rgb(227,65,43)"/><text x="100.0145%" y="479.50"></text></g><g><title>libFontParser.dylib`AppendVariationFonts(__CFArray*) (1 samples, 0.02%)</title><rect x="99.7645%" y="453" width="0.0157%" height="15" fill="rgb(218,40,45)"/><text x="100.0145%" y="463.50"></text></g><g><title>libFontParser.dylib`TSFNTFont::GetInstanceNames (1 samples, 0.02%)</title><rect x="99.7645%" y="437" width="0.0157%" height="15" fill="rgb(252,121,31)"/><text x="100.0145%" y="447.50"></text></g><g><title>libFontParser.dylib`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;unsigned short, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;unsigned short, std::__1::hash&lt;unsigned short&gt;, std::__1::equal_to&lt;unsigned short&gt;, std::__1::allocator&lt;unsigned short&gt; &gt;::__emplace_unique_key_args&lt;unsigned short, unsigned short const&amp;&gt; (1 samples, 0.02%)</title><rect x="99.7645%" y="421" width="0.0157%" height="15" fill="rgb(219,158,43)"/><text x="100.0145%" y="431.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 0.02%)</title><rect x="99.7645%" y="405" width="0.0157%" height="15" fill="rgb(231,162,42)"/><text x="100.0145%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="99.7645%" y="389" width="0.0157%" height="15" fill="rgb(217,179,25)"/><text x="100.0145%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="99.7645%" y="373" width="0.0157%" height="15" fill="rgb(206,212,31)"/><text x="100.0145%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.7645%" y="357" width="0.0157%" height="15" fill="rgb(235,144,12)"/><text x="100.0145%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.7645%" y="341" width="0.0157%" height="15" fill="rgb(213,51,10)"/><text x="100.0145%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="99.7645%" y="325" width="0.0157%" height="15" fill="rgb(231,145,14)"/><text x="100.0145%" y="335.50"></text></g><g><title>UIFoundation`-[__NSFontTypefaceInfo fontInstanceForKey:renderingMode:] (2 samples, 0.03%)</title><rect x="99.7645%" y="773" width="0.0314%" height="15" fill="rgb(235,15,28)"/><text x="100.0145%" y="783.50"></text></g><g><title>UIFoundation`-[NSFont initWithTypefaceInfo:key:renderingMode:] (2 samples, 0.03%)</title><rect x="99.7645%" y="757" width="0.0314%" height="15" fill="rgb(237,206,10)"/><text x="100.0145%" y="767.50"></text></g><g><title>UIFoundation`__UIFontGetExtraData (2 samples, 0.03%)</title><rect x="99.7645%" y="741" width="0.0314%" height="15" fill="rgb(236,227,27)"/><text x="100.0145%" y="751.50"></text></g><g><title>UIFoundation`-[__NSFontExtraData initWithFont:] (2 samples, 0.03%)</title><rect x="99.7645%" y="725" width="0.0314%" height="15" fill="rgb(246,83,35)"/><text x="100.0145%" y="735.50"></text></g><g><title>UIFoundation`__NSGetVariantMetaFontType (1 samples, 0.02%)</title><rect x="99.7802%" y="709" width="0.0157%" height="15" fill="rgb(220,136,24)"/><text x="100.0302%" y="719.50"></text></g><g><title>UIFoundation`-[NSCTFontDescriptor objectForKey:] (1 samples, 0.02%)</title><rect x="99.7802%" y="693" width="0.0157%" height="15" fill="rgb(217,3,25)"/><text x="100.0302%" y="703.50"></text></g><g><title>CoreText`CTFontDescriptorCopyAttribute (1 samples, 0.02%)</title><rect x="99.7802%" y="677" width="0.0157%" height="15" fill="rgb(239,24,14)"/><text x="100.0302%" y="687.50"></text></g><g><title>CoreText`TDescriptor::CopyAttribute (1 samples, 0.02%)</title><rect x="99.7802%" y="661" width="0.0157%" height="15" fill="rgb(244,16,53)"/><text x="100.0302%" y="671.50"></text></g><g><title>CoreText`TTenuousComponentFont::CopyAttribute (1 samples, 0.02%)</title><rect x="99.7802%" y="645" width="0.0157%" height="15" fill="rgb(208,175,44)"/><text x="100.0302%" y="655.50"></text></g><g><title>CoreText`TBaseFont::CopyAttribute (1 samples, 0.02%)</title><rect x="99.7802%" y="629" width="0.0157%" height="15" fill="rgb(252,18,48)"/><text x="100.0302%" y="639.50"></text></g><g><title>CoreText`TBaseFont::CopyTraits (1 samples, 0.02%)</title><rect x="99.7802%" y="613" width="0.0157%" height="15" fill="rgb(234,199,32)"/><text x="100.0302%" y="623.50"></text></g><g><title>CoreText`TBaseFont::CopyTraitsInternal (1 samples, 0.02%)</title><rect x="99.7802%" y="597" width="0.0157%" height="15" fill="rgb(225,77,54)"/><text x="100.0302%" y="607.50"></text></g><g><title>CoreText`TTenuousComponentFont::CopyName (1 samples, 0.02%)</title><rect x="99.7802%" y="581" width="0.0157%" height="15" fill="rgb(225,42,25)"/><text x="100.0302%" y="591.50"></text></g><g><title>CoreText`TBaseFont::CopyName (1 samples, 0.02%)</title><rect x="99.7802%" y="565" width="0.0157%" height="15" fill="rgb(242,227,46)"/><text x="100.0302%" y="575.50"></text></g><g><title>CoreText`TBaseFont::CopyNameFromMetadata (1 samples, 0.02%)</title><rect x="99.7802%" y="549" width="0.0157%" height="15" fill="rgb(246,197,35)"/><text x="100.0302%" y="559.50"></text></g><g><title>CoreText`TBaseFont::CopyXTPropertyValue (1 samples, 0.02%)</title><rect x="99.7802%" y="533" width="0.0157%" height="15" fill="rgb(215,159,26)"/><text x="100.0302%" y="543.50"></text></g><g><title>CoreText`TBaseFont::CopyXTProperties (1 samples, 0.02%)</title><rect x="99.7802%" y="517" width="0.0157%" height="15" fill="rgb(212,194,50)"/><text x="100.0302%" y="527.50"></text></g><g><title>libFontRegistry.dylib`XTCopyPropertiesForFont (1 samples, 0.02%)</title><rect x="99.7802%" y="501" width="0.0157%" height="15" fill="rgb(246,132,1)"/><text x="100.0302%" y="511.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient XTCopyPropertiesForFont:keys:scope:options:] (1 samples, 0.02%)</title><rect x="99.7802%" y="485" width="0.0157%" height="15" fill="rgb(217,71,7)"/><text x="100.0302%" y="495.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient run:errorHandler:] (1 samples, 0.02%)</title><rect x="99.7802%" y="469" width="0.0157%" height="15" fill="rgb(252,59,32)"/><text x="100.0302%" y="479.50"></text></g><g><title>libFontRegistry.dylib`__61-[XTypeXPCClient XTCopyPropertiesForFont:keys:scope:options:]_block_invoke (1 samples, 0.02%)</title><rect x="99.7802%" y="453" width="0.0157%" height="15" fill="rgb(253,204,25)"/><text x="100.0302%" y="463.50"></text></g><g><title>CoreFoundation`_CF_forwarding_prep_0 (1 samples, 0.02%)</title><rect x="99.7802%" y="437" width="0.0157%" height="15" fill="rgb(232,21,16)"/><text x="100.0302%" y="447.50"></text></g><g><title>CoreFoundation`___forwarding___ (1 samples, 0.02%)</title><rect x="99.7802%" y="421" width="0.0157%" height="15" fill="rgb(248,90,29)"/><text x="100.0302%" y="431.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:withProxy:] (1 samples, 0.02%)</title><rect x="99.7802%" y="405" width="0.0157%" height="15" fill="rgb(249,223,7)"/><text x="100.0302%" y="415.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.02%)</title><rect x="99.7802%" y="389" width="0.0157%" height="15" fill="rgb(231,119,42)"/><text x="100.0302%" y="399.50"></text></g><g><title>Foundation`__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_3 (1 samples, 0.02%)</title><rect x="99.7802%" y="373" width="0.0157%" height="15" fill="rgb(215,41,35)"/><text x="100.0302%" y="383.50"></text></g><g><title>Foundation`-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] (1 samples, 0.02%)</title><rect x="99.7802%" y="357" width="0.0157%" height="15" fill="rgb(220,44,45)"/><text x="100.0302%" y="367.50"></text></g><g><title>Foundation`-[NSXPCDecoder _decodeReplyFromXPCObject:forSelector:interface:] (1 samples, 0.02%)</title><rect x="99.7802%" y="341" width="0.0157%" height="15" fill="rgb(253,197,36)"/><text x="100.0302%" y="351.50"></text></g><g><title>Foundation`-[NSXPCDecoder __decodeXPCObject:allowingSimpleMessageSend:outInvocation:outArguments:outArgumentsMaxCount:outMethodSignature:outSelector:isReply:replySelector:interface:] (1 samples, 0.02%)</title><rect x="99.7802%" y="325" width="0.0157%" height="15" fill="rgb(245,225,54)"/><text x="100.0302%" y="335.50"></text></g><g><title>Foundation`_NSXPCSerializationDecodeInvocationArgumentArray (1 samples, 0.02%)</title><rect x="99.7802%" y="309" width="0.0157%" height="15" fill="rgb(239,94,37)"/><text x="100.0302%" y="319.50"></text></g><g><title>Foundation`_NSXPCSerializationDecodeTypedObjCValuesFromArray (1 samples, 0.02%)</title><rect x="99.7802%" y="293" width="0.0157%" height="15" fill="rgb(242,217,10)"/><text x="100.0302%" y="303.50"></text></g><g><title>Foundation`-[NSXPCDecoder _decodeObjectOfClasses:atObject:] (1 samples, 0.02%)</title><rect x="99.7802%" y="277" width="0.0157%" height="15" fill="rgb(250,193,7)"/><text x="100.0302%" y="287.50"></text></g><g><title>Foundation`_decodeObject (1 samples, 0.02%)</title><rect x="99.7802%" y="261" width="0.0157%" height="15" fill="rgb(230,104,19)"/><text x="100.0302%" y="271.50"></text></g><g><title>Foundation`-[NSDictionary(NSDictionary) initWithCoder:] (1 samples, 0.02%)</title><rect x="99.7802%" y="245" width="0.0157%" height="15" fill="rgb(230,181,4)"/><text x="100.0302%" y="255.50"></text></g><g><title>CoreFoundation`-[NSDictionary initWithObjects:forKeys:] (1 samples, 0.02%)</title><rect x="99.7802%" y="229" width="0.0157%" height="15" fill="rgb(216,219,49)"/><text x="100.0302%" y="239.50"></text></g><g><title>CoreFoundation`_NSIsNSArray (1 samples, 0.02%)</title><rect x="99.7802%" y="213" width="0.0157%" height="15" fill="rgb(254,144,0)"/><text x="100.0302%" y="223.50"></text></g><g><title>AppKit`-[NSButtonCell initTextCell:] (3 samples, 0.05%)</title><rect x="99.7645%" y="837" width="0.0471%" height="15" fill="rgb(205,209,38)"/><text x="100.0145%" y="847.50"></text></g><g><title>AppKit`-[NSButtonCell _convertToText:] (3 samples, 0.05%)</title><rect x="99.7645%" y="821" width="0.0471%" height="15" fill="rgb(240,21,42)"/><text x="100.0145%" y="831.50"></text></g><g><title>AppKit`-[NSCell _convertToText:] (3 samples, 0.05%)</title><rect x="99.7645%" y="805" width="0.0471%" height="15" fill="rgb(241,132,3)"/><text x="100.0145%" y="815.50"></text></g><g><title>UIFoundation`__NSGetMetaFontInstanceWithType (3 samples, 0.05%)</title><rect x="99.7645%" y="789" width="0.0471%" height="15" fill="rgb(225,14,2)"/><text x="100.0145%" y="799.50"></text></g><g><title>UIFoundation`__NSGetTypefaceInfoForFontName (1 samples, 0.02%)</title><rect x="99.7959%" y="773" width="0.0157%" height="15" fill="rgb(210,141,35)"/><text x="100.0459%" y="783.50"></text></g><g><title>UIFoundation`+[__NSFontTypefaceInfo typefaceInfoForPostscriptName:options:] (1 samples, 0.02%)</title><rect x="99.7959%" y="757" width="0.0157%" height="15" fill="rgb(251,14,44)"/><text x="100.0459%" y="767.50"></text></g><g><title>CoreText`CTFontDescriptorCreateMatchingFontDescriptor (1 samples, 0.02%)</title><rect x="99.7959%" y="741" width="0.0157%" height="15" fill="rgb(247,48,18)"/><text x="100.0459%" y="751.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptor (1 samples, 0.02%)</title><rect x="99.7959%" y="725" width="0.0157%" height="15" fill="rgb(225,0,40)"/><text x="100.0459%" y="735.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (1 samples, 0.02%)</title><rect x="99.7959%" y="709" width="0.0157%" height="15" fill="rgb(221,31,33)"/><text x="100.0459%" y="719.50"></text></g><g><title>CoreText`ContainsAndIsOnlySearchableAttribute(__CFDictionary const*, TDescriptorSource const&amp;, __CFString const*, unsigned long, __CFString const*, __CFNumber const*, CTFontLegibilityWeight) (1 samples, 0.02%)</title><rect x="99.7959%" y="693" width="0.0157%" height="15" fill="rgb(237,42,40)"/><text x="100.0459%" y="703.50"></text></g><g><title>CoreText`TDescriptorSource::CopyFontDescriptorPerPostScriptName (1 samples, 0.02%)</title><rect x="99.7959%" y="677" width="0.0157%" height="15" fill="rgb(233,51,29)"/><text x="100.0459%" y="687.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (1 samples, 0.02%)</title><rect x="99.7959%" y="661" width="0.0157%" height="15" fill="rgb(226,58,20)"/><text x="100.0459%" y="671.50"></text></g><g><title>CoreText`TDescriptorSource::EnsureSplicedFontStash (1 samples, 0.02%)</title><rect x="99.7959%" y="645" width="0.0157%" height="15" fill="rgb(208,98,7)"/><text x="100.0459%" y="655.50"></text></g><g><title>libFontRegistry.dylib`XTCopyFontsWithProperties (1 samples, 0.02%)</title><rect x="99.7959%" y="629" width="0.0157%" height="15" fill="rgb(228,143,44)"/><text x="100.0459%" y="639.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::TGlobalFontRegistry (1 samples, 0.02%)</title><rect x="99.7959%" y="613" width="0.0157%" height="15" fill="rgb(246,55,38)"/><text x="100.0459%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.02%)</title><rect x="99.7959%" y="597" width="0.0157%" height="15" fill="rgb(247,87,16)"/><text x="100.0459%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.02%)</title><rect x="99.7959%" y="581" width="0.0157%" height="15" fill="rgb(234,129,42)"/><text x="100.0459%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.02%)</title><rect x="99.7959%" y="565" width="0.0157%" height="15" fill="rgb(220,82,16)"/><text x="100.0459%" y="575.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistry::CreateRegistry (1 samples, 0.02%)</title><rect x="99.7959%" y="549" width="0.0157%" height="15" fill="rgb(211,88,4)"/><text x="100.0459%" y="559.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistryImp::RendezvousWithServer (1 samples, 0.02%)</title><rect x="99.7959%" y="533" width="0.0157%" height="15" fill="rgb(248,151,21)"/><text x="100.0459%" y="543.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient XTRendezvous:] (1 samples, 0.02%)</title><rect x="99.7959%" y="517" width="0.0157%" height="15" fill="rgb(238,163,6)"/><text x="100.0459%" y="527.50"></text></g><g><title>libFontRegistry.dylib`-[XTypeXPCClient run:errorHandler:] (1 samples, 0.02%)</title><rect x="99.7959%" y="501" width="0.0157%" height="15" fill="rgb(209,183,11)"/><text x="100.0459%" y="511.50"></text></g><g><title>libFontRegistry.dylib`__31-[XTypeXPCClient XTRendezvous:]_block_invoke (1 samples, 0.02%)</title><rect x="99.7959%" y="485" width="0.0157%" height="15" fill="rgb(219,37,20)"/><text x="100.0459%" y="495.50"></text></g><g><title>Foundation`_NSXPCDistantObjectSimpleMessageSend1 (1 samples, 0.02%)</title><rect x="99.7959%" y="469" width="0.0157%" height="15" fill="rgb(210,158,4)"/><text x="100.0459%" y="479.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendSelector:withProxy:arg1:] (1 samples, 0.02%)</title><rect x="99.7959%" y="453" width="0.0157%" height="15" fill="rgb(221,167,53)"/><text x="100.0459%" y="463.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (1 samples, 0.02%)</title><rect x="99.7959%" y="437" width="0.0157%" height="15" fill="rgb(237,151,45)"/><text x="100.0459%" y="447.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="99.7959%" y="421" width="0.0157%" height="15" fill="rgb(231,39,3)"/><text x="100.0459%" y="431.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="99.7959%" y="405" width="0.0157%" height="15" fill="rgb(212,167,28)"/><text x="100.0459%" y="415.50"></text></g><g><title>libobjc.A.dylib`realizeClassMaybeSwiftMaybeRelock(objc_class*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.02%)</title><rect x="99.7959%" y="389" width="0.0157%" height="15" fill="rgb(232,178,8)"/><text x="100.0459%" y="399.50"></text></g><g><title>libobjc.A.dylib`realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 0.02%)</title><rect x="99.7959%" y="373" width="0.0157%" height="15" fill="rgb(225,151,20)"/><text x="100.0459%" y="383.50"></text></g><g><title>libobjc.A.dylib`prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (1 samples, 0.02%)</title><rect x="99.7959%" y="357" width="0.0157%" height="15" fill="rgb(238,3,37)"/><text x="100.0459%" y="367.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURL (1 samples, 0.02%)</title><rect x="99.8116%" y="805" width="0.0157%" height="15" fill="rgb(251,147,42)"/><text x="100.0616%" y="815.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 0.02%)</title><rect x="99.8116%" y="789" width="0.0157%" height="15" fill="rgb(208,173,10)"/><text x="100.0616%" y="799.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 0.02%)</title><rect x="99.8116%" y="773" width="0.0157%" height="15" fill="rgb(246,225,4)"/><text x="100.0616%" y="783.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 0.02%)</title><rect x="99.8116%" y="757" width="0.0157%" height="15" fill="rgb(248,102,6)"/><text x="100.0616%" y="767.50"></text></g><g><title>CoreFoundation`_createQueryTableAtPath (1 samples, 0.02%)</title><rect x="99.8116%" y="741" width="0.0157%" height="15" fill="rgb(232,6,21)"/><text x="100.0616%" y="751.50"></text></g><g><title>CoreFoundation`_CFBundleReadDirectory (1 samples, 0.02%)</title><rect x="99.8116%" y="725" width="0.0157%" height="15" fill="rgb(221,179,22)"/><text x="100.0616%" y="735.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 0.02%)</title><rect x="99.8116%" y="709" width="0.0157%" height="15" fill="rgb(252,50,20)"/><text x="100.0616%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 0.02%)</title><rect x="99.8116%" y="693" width="0.0157%" height="15" fill="rgb(222,56,38)"/><text x="100.0616%" y="703.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (5 samples, 0.08%)</title><rect x="99.7645%" y="933" width="0.0785%" height="15" fill="rgb(206,193,29)"/><text x="100.0145%" y="943.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (5 samples, 0.08%)</title><rect x="99.7645%" y="917" width="0.0785%" height="15" fill="rgb(239,192,45)"/><text x="100.0145%" y="927.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (5 samples, 0.08%)</title><rect x="99.7645%" y="901" width="0.0785%" height="15" fill="rgb(254,18,36)"/><text x="100.0145%" y="911.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (5 samples, 0.08%)</title><rect x="99.7645%" y="885" width="0.0785%" height="15" fill="rgb(221,127,11)"/><text x="100.0145%" y="895.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (5 samples, 0.08%)</title><rect x="99.7645%" y="869" width="0.0785%" height="15" fill="rgb(234,146,35)"/><text x="100.0145%" y="879.50"></text></g><g><title>AppKit`-[NSButtonCell init] (5 samples, 0.08%)</title><rect x="99.7645%" y="853" width="0.0785%" height="15" fill="rgb(254,201,37)"/><text x="100.0145%" y="863.50"></text></g><g><title>Foundation`-[NSBundle localizedStringForKey:value:table:] (2 samples, 0.03%)</title><rect x="99.8116%" y="837" width="0.0314%" height="15" fill="rgb(211,202,23)"/><text x="100.0616%" y="847.50"></text></g><g><title>CoreFoundation`CFBundleCopyLocalizedStringForLocalization (2 samples, 0.03%)</title><rect x="99.8116%" y="821" width="0.0314%" height="15" fill="rgb(237,91,2)"/><text x="100.0616%" y="831.50"></text></g><g><title>CoreFoundation`CFGetAllocator (1 samples, 0.02%)</title><rect x="99.8273%" y="805" width="0.0157%" height="15" fill="rgb(226,228,36)"/><text x="100.0773%" y="815.50"></text></g><g><title>AppKit`-[NSThemeFrame _moveTitlebarViewsToView:] (8 samples, 0.13%)</title><rect x="99.7331%" y="965" width="0.1256%" height="15" fill="rgb(213,63,50)"/><text x="99.9831%" y="975.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (8 samples, 0.13%)</title><rect x="99.7331%" y="949" width="0.1256%" height="15" fill="rgb(235,194,19)"/><text x="99.9831%" y="959.50"></text></g><g><title>AppKit`-[NSThemeFrame newZoomButton] (1 samples, 0.02%)</title><rect x="99.8430%" y="933" width="0.0157%" height="15" fill="rgb(207,204,18)"/><text x="100.0930%" y="943.50"></text></g><g><title>AppKit`+[_NSThemeZoomWidget zoomWidgetInView:withButtonID:action:] (1 samples, 0.02%)</title><rect x="99.8430%" y="917" width="0.0157%" height="15" fill="rgb(248,8,7)"/><text x="100.0930%" y="927.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (1 samples, 0.02%)</title><rect x="99.8430%" y="901" width="0.0157%" height="15" fill="rgb(223,145,47)"/><text x="100.0930%" y="911.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="99.8430%" y="885" width="0.0157%" height="15" fill="rgb(228,84,11)"/><text x="100.0930%" y="895.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView initWithFrame:] (1 samples, 0.02%)</title><rect x="99.8587%" y="965" width="0.0157%" height="15" fill="rgb(218,76,45)"/><text x="100.1087%" y="975.50"></text></g><g><title>AppKit`-[NSView didChangeValueForKey:] (1 samples, 0.02%)</title><rect x="99.8587%" y="949" width="0.0157%" height="15" fill="rgb(223,80,15)"/><text x="100.1087%" y="959.50"></text></g><g><title>AppKit`-[NSView _updateLayerBackedness] (1 samples, 0.02%)</title><rect x="99.8587%" y="933" width="0.0157%" height="15" fill="rgb(219,218,33)"/><text x="100.1087%" y="943.50"></text></g><g><title>AppKit`-[NSView(NSInternal) _createLayerAndInitialize] (1 samples, 0.02%)</title><rect x="99.8587%" y="917" width="0.0157%" height="15" fill="rgb(208,51,11)"/><text x="100.1087%" y="927.50"></text></g><g><title>QuartzCore`+[CALayer layer] (1 samples, 0.02%)</title><rect x="99.8587%" y="901" width="0.0157%" height="15" fill="rgb(229,165,39)"/><text x="100.1087%" y="911.50"></text></g><g><title>QuartzCore`-[CALayer init] (1 samples, 0.02%)</title><rect x="99.8587%" y="885" width="0.0157%" height="15" fill="rgb(241,100,24)"/><text x="100.1087%" y="895.50"></text></g><g><title>QuartzCore`CA::Layer::class_state (1 samples, 0.02%)</title><rect x="99.8587%" y="869" width="0.0157%" height="15" fill="rgb(228,14,23)"/><text x="100.1087%" y="879.50"></text></g><g><title>QuartzCore`classDescription(objc_class*) (1 samples, 0.02%)</title><rect x="99.8587%" y="853" width="0.0157%" height="15" fill="rgb(247,116,52)"/><text x="100.1087%" y="863.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (1 samples, 0.02%)</title><rect x="99.8587%" y="837" width="0.0157%" height="15" fill="rgb(216,149,33)"/><text x="100.1087%" y="847.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (1 samples, 0.02%)</title><rect x="99.8587%" y="821" width="0.0157%" height="15" fill="rgb(238,142,29)"/><text x="100.1087%" y="831.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (1 samples, 0.02%)</title><rect x="99.8587%" y="805" width="0.0157%" height="15" fill="rgb(224,83,40)"/><text x="100.1087%" y="815.50"></text></g><g><title>QuartzCore`CAAtomGetString (1 samples, 0.02%)</title><rect x="99.8587%" y="789" width="0.0157%" height="15" fill="rgb(234,165,11)"/><text x="100.1087%" y="799.50"></text></g><g><title>CoreUI`-[CUIThemeFacet makeLayer] (1 samples, 0.02%)</title><rect x="99.8744%" y="789" width="0.0157%" height="15" fill="rgb(215,96,23)"/><text x="100.1244%" y="799.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _rendition] (1 samples, 0.02%)</title><rect x="99.8744%" y="773" width="0.0157%" height="15" fill="rgb(233,179,26)"/><text x="100.1244%" y="783.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _renditionForSpecificKey:] (1 samples, 0.02%)</title><rect x="99.8744%" y="757" width="0.0157%" height="15" fill="rgb(225,129,33)"/><text x="100.1244%" y="767.50"></text></g><g><title>CoreUI`-[CUIStructuredThemeStore renditionWithKey:usingKeySignature:] (1 samples, 0.02%)</title><rect x="99.8744%" y="741" width="0.0157%" height="15" fill="rgb(237,49,13)"/><text x="100.1244%" y="751.50"></text></g><g><title>CoreUI`-[CUIThemeRendition initWithCSIData:forKey:artworkStatus:] (1 samples, 0.02%)</title><rect x="99.8744%" y="725" width="0.0157%" height="15" fill="rgb(211,3,31)"/><text x="100.1244%" y="735.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="99.8744%" y="709" width="0.0157%" height="15" fill="rgb(216,152,19)"/><text x="100.1244%" y="719.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="99.8744%" y="693" width="0.0157%" height="15" fill="rgb(251,121,35)"/><text x="100.1244%" y="703.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, mutex_tt&lt;false&gt;&amp;, bool) (1 samples, 0.02%)</title><rect x="99.8744%" y="677" width="0.0157%" height="15" fill="rgb(210,217,47)"/><text x="100.1244%" y="687.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (1 samples, 0.02%)</title><rect x="99.8744%" y="661" width="0.0157%" height="15" fill="rgb(244,116,22)"/><text x="100.1244%" y="671.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (1 samples, 0.02%)</title><rect x="99.8744%" y="645" width="0.0157%" height="15" fill="rgb(228,17,21)"/><text x="100.1244%" y="655.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="99.8744%" y="629" width="0.0157%" height="15" fill="rgb(240,149,34)"/><text x="100.1244%" y="639.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (1 samples, 0.02%)</title><rect x="99.8744%" y="613" width="0.0157%" height="15" fill="rgb(208,125,47)"/><text x="100.1244%" y="623.50"></text></g><g><title>AppKit`-[NSThemeFrame _cuiMakeOrUpdateBackgroundLayer:topHeight:drawTopSeparator:bottomHeight:forTitlebar:] (2 samples, 0.03%)</title><rect x="99.8744%" y="901" width="0.0314%" height="15" fill="rgb(249,186,39)"/><text x="100.1244%" y="911.50"></text></g><g><title>AppKit`-[NSAppearance _createOrUpdateLayer:options:] (2 samples, 0.03%)</title><rect x="99.8744%" y="885" width="0.0314%" height="15" fill="rgb(240,220,33)"/><text x="100.1244%" y="895.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (2 samples, 0.03%)</title><rect x="99.8744%" y="869" width="0.0314%" height="15" fill="rgb(243,110,23)"/><text x="100.1244%" y="879.50"></text></g><g><title>CoreUI`CUICreateOrUpdateLayer (2 samples, 0.03%)</title><rect x="99.8744%" y="853" width="0.0314%" height="15" fill="rgb(219,163,46)"/><text x="100.1244%" y="863.50"></text></g><g><title>CoreUI`CUIRenderer::CreateOrUpdateLayer (2 samples, 0.03%)</title><rect x="99.8744%" y="837" width="0.0314%" height="15" fill="rgb(216,126,30)"/><text x="100.1244%" y="847.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CreateOrUpdateLayer (2 samples, 0.03%)</title><rect x="99.8744%" y="821" width="0.0314%" height="15" fill="rgb(208,139,11)"/><text x="100.1244%" y="831.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::MakeOrUpdateWindowFrameLayerNew (2 samples, 0.03%)</title><rect x="99.8744%" y="805" width="0.0314%" height="15" fill="rgb(213,118,36)"/><text x="100.1244%" y="815.50"></text></g><g><title>CoreUI`-[CUIThemeFacet updateLayer:effects:] (1 samples, 0.02%)</title><rect x="99.8901%" y="789" width="0.0157%" height="15" fill="rgb(226,43,17)"/><text x="100.1401%" y="799.50"></text></g><g><title>CoreUI`CreateARGBBitmapContext (1 samples, 0.02%)</title><rect x="99.8901%" y="773" width="0.0157%" height="15" fill="rgb(254,217,4)"/><text x="100.1401%" y="783.50"></text></g><g><title>CoreUI`CreateBitmapContext (1 samples, 0.02%)</title><rect x="99.8901%" y="757" width="0.0157%" height="15" fill="rgb(210,134,47)"/><text x="100.1401%" y="767.50"></text></g><g><title>CoreGraphics`CGBitmapContextCreate (1 samples, 0.02%)</title><rect x="99.8901%" y="741" width="0.0157%" height="15" fill="rgb(237,24,49)"/><text x="100.1401%" y="751.50"></text></g><g><title>CoreGraphics`CGBitmapContextCreateWithData (1 samples, 0.02%)</title><rect x="99.8901%" y="725" width="0.0157%" height="15" fill="rgb(251,39,46)"/><text x="100.1401%" y="735.50"></text></g><g><title>CoreGraphics`bitmap_context_create (1 samples, 0.02%)</title><rect x="99.8901%" y="709" width="0.0157%" height="15" fill="rgb(251,220,3)"/><text x="100.1401%" y="719.50"></text></g><g><title>CoreGraphics`__CGBitmapContextDelegateCreate (1 samples, 0.02%)</title><rect x="99.8901%" y="693" width="0.0157%" height="15" fill="rgb(228,105,12)"/><text x="100.1401%" y="703.50"></text></g><g><title>CoreGraphics`ripc_Initialize (1 samples, 0.02%)</title><rect x="99.8901%" y="677" width="0.0157%" height="15" fill="rgb(215,196,1)"/><text x="100.1401%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="99.8901%" y="661" width="0.0157%" height="15" fill="rgb(214,33,39)"/><text x="100.1401%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="99.8901%" y="645" width="0.0157%" height="15" fill="rgb(220,19,52)"/><text x="100.1401%" y="655.50"></text></g><g><title>CoreGraphics`__create_default_transform_block_invoke (1 samples, 0.02%)</title><rect x="99.8901%" y="629" width="0.0157%" height="15" fill="rgb(221,78,38)"/><text x="100.1401%" y="639.50"></text></g><g><title>CoreGraphics`color_transform_create (1 samples, 0.02%)</title><rect x="99.8901%" y="613" width="0.0157%" height="15" fill="rgb(253,30,16)"/><text x="100.1401%" y="623.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithName (1 samples, 0.02%)</title><rect x="99.8901%" y="597" width="0.0157%" height="15" fill="rgb(242,65,0)"/><text x="100.1401%" y="607.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateGenericCMYK (1 samples, 0.02%)</title><rect x="99.8901%" y="581" width="0.0157%" height="15" fill="rgb(235,201,12)"/><text x="100.1401%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="99.8901%" y="565" width="0.0157%" height="15" fill="rgb(233,161,9)"/><text x="100.1401%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="99.8901%" y="549" width="0.0157%" height="15" fill="rgb(241,207,41)"/><text x="100.1401%" y="559.50"></text></g><g><title>CoreGraphics`__CGColorSpaceCreateGenericCMYK_block_invoke (1 samples, 0.02%)</title><rect x="99.8901%" y="533" width="0.0157%" height="15" fill="rgb(212,69,46)"/><text x="100.1401%" y="543.50"></text></g><g><title>CoreGraphics`color_space_state_create_generic_cmyk (1 samples, 0.02%)</title><rect x="99.8901%" y="517" width="0.0157%" height="15" fill="rgb(239,69,45)"/><text x="100.1401%" y="527.50"></text></g><g><title>ColorSync`create_GenericCMYKProfile (1 samples, 0.02%)</title><rect x="99.8901%" y="501" width="0.0157%" height="15" fill="rgb(242,117,48)"/><text x="100.1401%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="99.8901%" y="485" width="0.0157%" height="15" fill="rgb(228,41,36)"/><text x="100.1401%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="99.8901%" y="469" width="0.0157%" height="15" fill="rgb(212,3,32)"/><text x="100.1401%" y="479.50"></text></g><g><title>ColorSync`__create_GenericCMYKProfile_block_invoke (1 samples, 0.02%)</title><rect x="99.8901%" y="453" width="0.0157%" height="15" fill="rgb(233,41,49)"/><text x="100.1401%" y="463.50"></text></g><g><title>ColorSync`ColorSyncProfileCreateSigleton (1 samples, 0.02%)</title><rect x="99.8901%" y="437" width="0.0157%" height="15" fill="rgb(252,170,49)"/><text x="100.1401%" y="447.50"></text></g><g><title>ColorSync`create (1 samples, 0.02%)</title><rect x="99.8901%" y="421" width="0.0157%" height="15" fill="rgb(229,53,26)"/><text x="100.1401%" y="431.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 0.02%)</title><rect x="99.8901%" y="405" width="0.0157%" height="15" fill="rgb(217,157,12)"/><text x="100.1401%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (13 samples, 0.20%)</title><rect x="99.7174%" y="1013" width="0.2041%" height="15" fill="rgb(227,17,9)"/><text x="99.9674%" y="1023.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (13 samples, 0.20%)</title><rect x="99.7174%" y="997" width="0.2041%" height="15" fill="rgb(218,84,12)"/><text x="99.9674%" y="1007.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (13 samples, 0.20%)</title><rect x="99.7174%" y="981" width="0.2041%" height="15" fill="rgb(212,79,24)"/><text x="99.9674%" y="991.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (3 samples, 0.05%)</title><rect x="99.8744%" y="965" width="0.0471%" height="15" fill="rgb(217,222,37)"/><text x="100.1244%" y="975.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) _addObserver:forProperty:options:context:] (3 samples, 0.05%)</title><rect x="99.8744%" y="949" width="0.0471%" height="15" fill="rgb(246,208,8)"/><text x="100.1244%" y="959.50"></text></g><g><title>Foundation`NSKeyValueNotifyObserver (3 samples, 0.05%)</title><rect x="99.8744%" y="933" width="0.0471%" height="15" fill="rgb(244,133,10)"/><text x="100.1244%" y="943.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView observeValueForKeyPath:ofObject:change:context:] (3 samples, 0.05%)</title><rect x="99.8744%" y="917" width="0.0471%" height="15" fill="rgb(209,219,41)"/><text x="100.1244%" y="927.50"></text></g><g><title>AppKit`-[NSView addSubview:] (1 samples, 0.02%)</title><rect x="99.9058%" y="901" width="0.0157%" height="15" fill="rgb(253,175,45)"/><text x="100.1558%" y="911.50"></text></g><g><title>AppKit`-[NSView _setSuperview:] (1 samples, 0.02%)</title><rect x="99.9058%" y="885" width="0.0157%" height="15" fill="rgb(235,100,37)"/><text x="100.1558%" y="895.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="99.9058%" y="869" width="0.0157%" height="15" fill="rgb(225,87,19)"/><text x="100.1558%" y="879.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 0.02%)</title><rect x="99.9058%" y="853" width="0.0157%" height="15" fill="rgb(217,152,17)"/><text x="100.1558%" y="863.50"></text></g><g><title>libobjc.A.dylib`cache_fill (1 samples, 0.02%)</title><rect x="99.9058%" y="837" width="0.0157%" height="15" fill="rgb(235,72,13)"/><text x="100.1558%" y="847.50"></text></g><g><title>libobjc.A.dylib`allocateBuckets(unsigned int) (1 samples, 0.02%)</title><rect x="99.9058%" y="821" width="0.0157%" height="15" fill="rgb(233,140,18)"/><text x="100.1558%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.02%)</title><rect x="99.9058%" y="805" width="0.0157%" height="15" fill="rgb(207,212,28)"/><text x="100.1558%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (1 samples, 0.02%)</title><rect x="99.9058%" y="789" width="0.0157%" height="15" fill="rgb(220,130,25)"/><text x="100.1558%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.9058%" y="773" width="0.0157%" height="15" fill="rgb(205,55,34)"/><text x="100.1558%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="99.9058%" y="757" width="0.0157%" height="15" fill="rgb(237,54,35)"/><text x="100.1558%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="99.9058%" y="741" width="0.0157%" height="15" fill="rgb(208,67,23)"/><text x="100.1558%" y="751.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (16 samples, 0.25%)</title><rect x="99.6860%" y="1029" width="0.2512%" height="15" fill="rgb(206,207,50)"/><text x="99.9360%" y="1039.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateBackdropView] (1 samples, 0.02%)</title><rect x="99.9215%" y="1013" width="0.0157%" height="15" fill="rgb(213,211,42)"/><text x="100.1715%" y="1023.50"></text></g><g><title>AppKit`-[NSThemeFrame _addKnownSubview:positioned:relativeTo:] (1 samples, 0.02%)</title><rect x="99.9215%" y="997" width="0.0157%" height="15" fill="rgb(252,197,50)"/><text x="100.1715%" y="1007.50"></text></g><g><title>AppKit`-[NSThemeFrame addSubview:positioned:relativeTo:] (1 samples, 0.02%)</title><rect x="99.9215%" y="981" width="0.0157%" height="15" fill="rgb(251,211,41)"/><text x="100.1715%" y="991.50"></text></g><g><title>AppKit`-[NSView addSubview:positioned:relativeTo:] (1 samples, 0.02%)</title><rect x="99.9215%" y="965" width="0.0157%" height="15" fill="rgb(229,211,5)"/><text x="100.1715%" y="975.50"></text></g><g><title>AppKit`-[NSThemeFrame addSubview:] (1 samples, 0.02%)</title><rect x="99.9215%" y="949" width="0.0157%" height="15" fill="rgb(239,36,31)"/><text x="100.1715%" y="959.50"></text></g><g><title>AppKit`-[NSFrameView addSubview:] (1 samples, 0.02%)</title><rect x="99.9215%" y="933" width="0.0157%" height="15" fill="rgb(248,67,31)"/><text x="100.1715%" y="943.50"></text></g><g><title>AppKit`-[NSView addSubview:] (1 samples, 0.02%)</title><rect x="99.9215%" y="917" width="0.0157%" height="15" fill="rgb(249,55,44)"/><text x="100.1715%" y="927.50"></text></g><g><title>AppKit`-[NSView _setSuperview:] (1 samples, 0.02%)</title><rect x="99.9215%" y="901" width="0.0157%" height="15" fill="rgb(216,82,12)"/><text x="100.1715%" y="911.50"></text></g><g><title>AppKit`-[NSView _viewDidChangeAppearance:] (1 samples, 0.02%)</title><rect x="99.9215%" y="885" width="0.0157%" height="15" fill="rgb(242,174,1)"/><text x="100.1715%" y="895.50"></text></g><g><title>AppKit`-[NSView effectiveAppearance] (1 samples, 0.02%)</title><rect x="99.9215%" y="869" width="0.0157%" height="15" fill="rgb(208,120,29)"/><text x="100.1715%" y="879.50"></text></g><g><title>AppKit`+[NSCompositeAppearance compositeAppearanceForView:] (1 samples, 0.02%)</title><rect x="99.9215%" y="853" width="0.0157%" height="15" fill="rgb(221,105,43)"/><text x="100.1715%" y="863.50"></text></g><g><title>AppKit`-[NSVisualEffectView _preferredAppearance] (1 samples, 0.02%)</title><rect x="99.9215%" y="837" width="0.0157%" height="15" fill="rgb(234,124,22)"/><text x="100.1715%" y="847.50"></text></g><g><title>AppKit`NSVisualEffectViewGetMetadataValue (1 samples, 0.02%)</title><rect x="99.9215%" y="821" width="0.0157%" height="15" fill="rgb(212,23,30)"/><text x="100.1715%" y="831.50"></text></g><g><title>AppKit`-[NSAppearance _copyMeasurements:context:options:requestedMeasurements:] (1 samples, 0.02%)</title><rect x="99.9215%" y="805" width="0.0157%" height="15" fill="rgb(219,122,53)"/><text x="100.1715%" y="815.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (1 samples, 0.02%)</title><rect x="99.9215%" y="789" width="0.0157%" height="15" fill="rgb(248,84,24)"/><text x="100.1715%" y="799.50"></text></g><g><title>AppKit`__72-[NSAppearance _copyMeasurements:context:options:requestedMeasurements:]_block_invoke (1 samples, 0.02%)</title><rect x="99.9215%" y="773" width="0.0157%" height="15" fill="rgb(245,115,18)"/><text x="100.1715%" y="783.50"></text></g><g><title>CoreUI`CUICopyMeasurements (1 samples, 0.02%)</title><rect x="99.9215%" y="757" width="0.0157%" height="15" fill="rgb(227,176,51)"/><text x="100.1715%" y="767.50"></text></g><g><title>CoreUI`CUIRenderer::CopyMeasurements (1 samples, 0.02%)</title><rect x="99.9215%" y="741" width="0.0157%" height="15" fill="rgb(229,63,42)"/><text x="100.1715%" y="751.50"></text></g><g><title>CoreUI`CUIRenderer::DecodeToCUIInfo (1 samples, 0.02%)</title><rect x="99.9215%" y="725" width="0.0157%" height="15" fill="rgb(247,202,24)"/><text x="100.1715%" y="735.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 0.02%)</title><rect x="99.9215%" y="709" width="0.0157%" height="15" fill="rgb(244,173,20)"/><text x="100.1715%" y="719.50"></text></g><g><title>AppKit`-[NSWindow _adjustDynamicDepthLimit] (1 samples, 0.02%)</title><rect x="99.9372%" y="1013" width="0.0157%" height="15" fill="rgb(242,81,47)"/><text x="100.1872%" y="1023.50"></text></g><g><title>AppKit`-[NSColorSpace(NSColorGamut) colorGamut] (1 samples, 0.02%)</title><rect x="99.9372%" y="997" width="0.0157%" height="15" fill="rgb(231,185,54)"/><text x="100.1872%" y="1007.50"></text></g><g><title>AppKit`+[_NSAxisAlignedVolumeColorGamut gamutWithCGColorSpace:] (1 samples, 0.02%)</title><rect x="99.9372%" y="981" width="0.0157%" height="15" fill="rgb(243,55,32)"/><text x="100.1872%" y="991.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertComponentData (1 samples, 0.02%)</title><rect x="99.9372%" y="965" width="0.0157%" height="15" fill="rgb(208,167,19)"/><text x="100.1872%" y="975.50"></text></g><g><title>CoreGraphics`CGColorTransformCreateCGCMSConverter (1 samples, 0.02%)</title><rect x="99.9372%" y="949" width="0.0157%" height="15" fill="rgb(231,72,35)"/><text x="100.1872%" y="959.50"></text></g><g><title>CoreGraphics`CGColorTransformCacheCreateConverter (1 samples, 0.02%)</title><rect x="99.9372%" y="933" width="0.0157%" height="15" fill="rgb(250,173,51)"/><text x="100.1872%" y="943.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreate (1 samples, 0.02%)</title><rect x="99.9372%" y="917" width="0.0157%" height="15" fill="rgb(209,5,22)"/><text x="100.1872%" y="927.50"></text></g><g><title>ColorSync`ColorSyncTransformInternalCopyProperty (1 samples, 0.02%)</title><rect x="99.9372%" y="901" width="0.0157%" height="15" fill="rgb(250,174,19)"/><text x="100.1872%" y="911.50"></text></g><g><title>ColorSync`AppleCMMCreateTransformProperty (1 samples, 0.02%)</title><rect x="99.9372%" y="885" width="0.0157%" height="15" fill="rgb(217,3,49)"/><text x="100.1872%" y="895.50"></text></g><g><title>ColorSync`DoFlattenFullConversion (1 samples, 0.02%)</title><rect x="99.9372%" y="869" width="0.0157%" height="15" fill="rgb(218,225,5)"/><text x="100.1872%" y="879.50"></text></g><g><title>ColorSync`collect_flattened_conversion(CMMConvNode*, bool, __CFDictionary const*, __CFArray*) (1 samples, 0.02%)</title><rect x="99.9372%" y="853" width="0.0157%" height="15" fill="rgb(236,89,11)"/><text x="100.1872%" y="863.50"></text></g><g><title>ColorSync`CMMConvRGBToRGB::FlattenConversion (1 samples, 0.02%)</title><rect x="99.9372%" y="837" width="0.0157%" height="15" fill="rgb(206,33,28)"/><text x="100.1872%" y="847.50"></text></g><g><title>ColorSync`CMMConvTRC::FlattenConversion (1 samples, 0.02%)</title><rect x="99.9372%" y="821" width="0.0157%" height="15" fill="rgb(241,56,42)"/><text x="100.1872%" y="831.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM setObject:forKey:] (1 samples, 0.02%)</title><rect x="99.9372%" y="805" width="0.0157%" height="15" fill="rgb(222,44,11)"/><text x="100.1872%" y="815.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (2 samples, 0.03%)</title><rect x="99.9372%" y="1029" width="0.0314%" height="15" fill="rgb(234,111,20)"/><text x="100.1872%" y="1039.50"></text></g><g><title>AppKit`_NSSetWindowCornerMask (1 samples, 0.02%)</title><rect x="99.9529%" y="1013" width="0.0157%" height="15" fill="rgb(237,77,6)"/><text x="100.2029%" y="1023.50"></text></g><g><title>CoreFoundation`+[NSDictionary dictionaryWithObject:forKey:] (1 samples, 0.02%)</title><rect x="99.9529%" y="997" width="0.0157%" height="15" fill="rgb(235,111,23)"/><text x="100.2029%" y="1007.50"></text></g><g><title>CoreFoundation`__createDictionary (1 samples, 0.02%)</title><rect x="99.9529%" y="981" width="0.0157%" height="15" fill="rgb(251,135,29)"/><text x="100.2029%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 0.02%)</title><rect x="99.9529%" y="965" width="0.0157%" height="15" fill="rgb(217,57,1)"/><text x="100.2029%" y="975.50"></text></g><g><title>rvfm_main`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (20 samples, 0.31%)</title><rect x="99.6703%" y="1093" width="0.3140%" height="15" fill="rgb(249,119,31)"/><text x="99.9203%" y="1103.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (20 samples, 0.31%)</title><rect x="99.6703%" y="1077" width="0.3140%" height="15" fill="rgb(233,164,33)"/><text x="99.9203%" y="1087.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (20 samples, 0.31%)</title><rect x="99.6703%" y="1061" width="0.3140%" height="15" fill="rgb(250,217,43)"/><text x="99.9203%" y="1071.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (19 samples, 0.30%)</title><rect x="99.6860%" y="1045" width="0.2983%" height="15" fill="rgb(232,154,50)"/><text x="99.9360%" y="1055.50"></text></g><g><title>AppKit`-[NSWindow _setFirstResponder:] (1 samples, 0.02%)</title><rect x="99.9686%" y="1029" width="0.0157%" height="15" fill="rgb(227,190,8)"/><text x="100.2186%" y="1039.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 0.02%)</title><rect x="99.9686%" y="1013" width="0.0157%" height="15" fill="rgb(209,217,32)"/><text x="100.2186%" y="1023.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (1 samples, 0.02%)</title><rect x="99.9686%" y="997" width="0.0157%" height="15" fill="rgb(243,203,50)"/><text x="100.2186%" y="1007.50"></text></g><g><title>all (6,369 samples, 100%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(232,152,27)"/><text x="0.2500%" y="1247.50"></text></g><g><title>rvfm_main`0x2 (896 samples, 14.07%)</title><rect x="85.9319%" y="1221" width="14.0681%" height="15" fill="rgb(240,34,29)"/><text x="86.1819%" y="1231.50">rvfm_main`0x2</text></g><g><title>libdyld.dylib`start (896 samples, 14.07%)</title><rect x="85.9319%" y="1205" width="14.0681%" height="15" fill="rgb(215,185,52)"/><text x="86.1819%" y="1215.50">libdyld.dylib`start</text></g><g><title>rvfm_main`main (896 samples, 14.07%)</title><rect x="85.9319%" y="1189" width="14.0681%" height="15" fill="rgb(240,89,49)"/><text x="86.1819%" y="1199.50">rvfm_main`main</text></g><g><title>rvfm_main`std::rt::lang_start_internal (896 samples, 14.07%)</title><rect x="85.9319%" y="1173" width="14.0681%" height="15" fill="rgb(225,12,52)"/><text x="86.1819%" y="1183.50">rvfm_main`std::rt::la..</text></g><g><title>rvfm_main`std::rt::lang_start::_{{closure}} (896 samples, 14.07%)</title><rect x="85.9319%" y="1157" width="14.0681%" height="15" fill="rgb(239,128,45)"/><text x="86.1819%" y="1167.50">rvfm_main`std::rt::la..</text></g><g><title>rvfm_main`std::sys_common::backtrace::__rust_begin_short_backtrace (896 samples, 14.07%)</title><rect x="85.9319%" y="1141" width="14.0681%" height="15" fill="rgb(211,78,47)"/><text x="86.1819%" y="1151.50">rvfm_main`std::sys_co..</text></g><g><title>rvfm_main`rvfm_main::application_gui::ApplicationGUI::run (896 samples, 14.07%)</title><rect x="85.9319%" y="1125" width="14.0681%" height="15" fill="rgb(232,31,21)"/><text x="86.1819%" y="1135.50">rvfm_main`rvfm_main::..</text></g><g><title>rvfm_main`winit::platform_impl::platform::window::UnownedWindow::new (25 samples, 0.39%)</title><rect x="99.6075%" y="1109" width="0.3925%" height="15" fill="rgb(222,168,14)"/><text x="99.8575%" y="1119.50"></text></g><g><title>rvfm_main`winit::platform_impl::platform::view::new_view (1 samples, 0.02%)</title><rect x="99.9843%" y="1093" width="0.0157%" height="15" fill="rgb(209,128,24)"/><text x="100.2343%" y="1103.50"></text></g><g><title>rvfm_main`std::sync::once::Once::call_inner (1 samples, 0.02%)</title><rect x="99.9843%" y="1077" width="0.0157%" height="15" fill="rgb(249,35,13)"/><text x="100.2343%" y="1087.50"></text></g><g><title>rvfm_main`std::sync::once::Once::call_once::_{{closure}} (1 samples, 0.02%)</title><rect x="99.9843%" y="1061" width="0.0157%" height="15" fill="rgb(218,7,2)"/><text x="100.2343%" y="1071.50"></text></g><g><title>rvfm_main`objc::declare::ClassDecl::add_method (1 samples, 0.02%)</title><rect x="99.9843%" y="1045" width="0.0157%" height="15" fill="rgb(238,107,27)"/><text x="100.2343%" y="1055.50"></text></g><g><title>libobjc.A.dylib`class_addMethod (1 samples, 0.02%)</title><rect x="99.9843%" y="1029" width="0.0157%" height="15" fill="rgb(217,88,38)"/><text x="100.2343%" y="1039.50"></text></g><g><title>libobjc.A.dylib`addMethod(objc_class*, objc_selector*, void (*)(), char const*, bool) (1 samples, 0.02%)</title><rect x="99.9843%" y="1013" width="0.0157%" height="15" fill="rgb(230,207,0)"/><text x="100.2343%" y="1023.50"></text></g><g><title>dyld`_dyld_is_memory_immutable (1 samples, 0.02%)</title><rect x="99.9843%" y="997" width="0.0157%" height="15" fill="rgb(249,64,54)"/><text x="100.2343%" y="1007.50"></text></g><g><title>dyld`dyld::findMappedRange (1 samples, 0.02%)</title><rect x="99.9843%" y="981" width="0.0157%" height="15" fill="rgb(231,7,11)"/><text x="100.2343%" y="991.50"></text></g></svg></svg>